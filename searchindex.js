Search.setIndex({"docnames": ["_version", "assertions", "assertions/check_all", "assertions/check_all_or_any_fn", "assertions/check_any", "assertions/check_elem_in_list", "assertions/check_equal", "assertions/check_exists", "assertions/check_false", "assertions/check_fill_value_and_dtype_are_compatible", "assertions/check_gather_input_valid", "assertions/check_gather_nd_input_valid", "assertions/check_greater", "assertions/check_inplace_sizes_valid", "assertions/check_isinstance", "assertions/check_less", "assertions/check_one_way_broadcastable", "assertions/check_shape", "assertions/check_true", "backend_handler", "backend_handler/ContextManager", "backend_handler/choose_random_backend", "backend_handler/clear_backend_stack", "backend_handler/current_backend", "backend_handler/fn_name_from_version_specific_fn_name", "backend_handler/get_backend", "backend_handler/set_backend", "backend_handler/set_backend_to_specific_version", "backend_handler/set_jax_backend", "backend_handler/set_numpy_backend", "backend_handler/set_tensorflow_backend", "backend_handler/set_torch_backend", "backend_handler/unset_backend", "background", "background/ml_explosion", "background/standardization", "background/why_unify", "contributing", "contributing/applied_libraries", "contributing/building_the_docs", "contributing/helpful_resources", "contributing/open_tasks", "contributing/setting_up", "contributing/the_basics", "data_classes", "data_classes/array", "data_classes/array/activations", "data_classes/array/activations/ArrayWithActivations", "data_classes/array/array", "data_classes/array/array/Array", "data_classes/array/conversions", "data_classes/array/conversions/args_to_ivy", "data_classes/array/conversions/args_to_native", "data_classes/array/conversions/to_ivy", "data_classes/array/conversions/to_native", "data_classes/array/creation", "data_classes/array/creation/ArrayWithCreation", "data_classes/array/data_type", "data_classes/array/data_type/ArrayWithDataTypes", "data_classes/array/device", "data_classes/array/device/ArrayWithDevice", "data_classes/array/elementwise", "data_classes/array/elementwise/ArrayWithElementwise", "data_classes/array/experimental", "data_classes/array/general", "data_classes/array/general/ArrayWithGeneral", "data_classes/array/gradients", "data_classes/array/gradients/ArrayWithGradients", "data_classes/array/image", "data_classes/array/image/ArrayWithImage", "data_classes/array/layers", "data_classes/array/layers/ArrayWithLayers", "data_classes/array/linear_algebra", "data_classes/array/linear_algebra/ArrayWithLinearAlgebra", "data_classes/array/losses", "data_classes/array/losses/ArrayWithLosses", "data_classes/array/manipulation", "data_classes/array/manipulation/ArrayWithManipulation", "data_classes/array/norms", "data_classes/array/norms/ArrayWithNorms", "data_classes/array/random", "data_classes/array/random/ArrayWithRandom", "data_classes/array/searching", "data_classes/array/searching/ArrayWithSearching", "data_classes/array/set", "data_classes/array/set/ArrayWithSet", "data_classes/array/sorting", "data_classes/array/sorting/ArrayWithSorting", "data_classes/array/statistical", "data_classes/array/statistical/ArrayWithStatistical", "data_classes/array/utility", "data_classes/array/utility/ArrayWithUtility", "data_classes/array/wrapping", "data_classes/array/wrapping/add_ivy_array_instance_methods", "data_classes/container", "data_classes/container/activations", "data_classes/container/activations/ContainerWithActivations", "data_classes/container/base", "data_classes/container/base/ContainerBase", "data_classes/container/container", "data_classes/container/container/Container", "data_classes/container/conversions", "data_classes/container/conversions/ContainerWithConversions", "data_classes/container/creation", "data_classes/container/creation/ContainerWithCreation", "data_classes/container/data_type", "data_classes/container/data_type/ContainerWithDataTypes", "data_classes/container/device", "data_classes/container/device/ContainerWithDevice", "data_classes/container/elementwise", "data_classes/container/elementwise/ContainerWithElementwise", "data_classes/container/experimental", "data_classes/container/general", "data_classes/container/general/ContainerWithGeneral", "data_classes/container/gradients", "data_classes/container/gradients/ContainerWithGradients", "data_classes/container/image", "data_classes/container/image/ContainerWithImage", "data_classes/container/layers", "data_classes/container/layers/ContainerWithLayers", "data_classes/container/linear_algebra", "data_classes/container/linear_algebra/ContainerWithLinearAlgebra", "data_classes/container/losses", "data_classes/container/losses/ContainerWithLosses", "data_classes/container/manipulation", "data_classes/container/manipulation/ContainerWithManipulation", "data_classes/container/norms", "data_classes/container/norms/ContainerWithNorms", "data_classes/container/random", "data_classes/container/random/ContainerWithRandom", "data_classes/container/searching", "data_classes/container/searching/ContainerWithSearching", "data_classes/container/set", "data_classes/container/set/ContainerWithSet", "data_classes/container/sorting", "data_classes/container/sorting/ContainerWithSorting", "data_classes/container/statistical", "data_classes/container/statistical/ContainerWithStatistical", "data_classes/container/utility", "data_classes/container/utility/ContainerWithUtility", "data_classes/container/wrapping", "data_classes/container/wrapping/add_ivy_container_instance_methods", "deep_dive", "deep_dive/array_api_tests", "deep_dive/arrays", "deep_dive/backend_setting", "deep_dive/containers", "deep_dive/continuous_integration", "deep_dive/data_types", "deep_dive/devices", "deep_dive/docstring_examples", "deep_dive/docstrings", "deep_dive/exception_handling", "deep_dive/formatting", "deep_dive/function_arguments", "deep_dive/function_types", "deep_dive/function_wrapping", "deep_dive/inplace_updates", "deep_dive/ivy_frontends", "deep_dive/ivy_frontends_tests", "deep_dive/ivy_tests", "deep_dive/navigating_the_code", "deep_dive/superset_behaviour", "design", "design/building_blocks", "design/ivy_as_a_framework", "design/ivy_as_a_framework/ivy_array", "design/ivy_as_a_framework/ivy_container", "design/ivy_as_a_framework/ivy_stateful_api", "design/ivy_as_a_transpiler", "docs/ivy", "docs/ivy_builder", "docs/ivy_ecosystem", "docs/ivy_gym", "docs/ivy_mech", "docs/ivy_memory", "docs/ivy_models", "docs/ivy_robot", "docs/ivy_vision", "extensions", "extensions/applied_libraries", "faq", "func_wrapper", "func_wrapper/from_zero_dim_arrays_to_float", "func_wrapper/handle_array_like", "func_wrapper/handle_nans", "func_wrapper/handle_nestable", "func_wrapper/handle_out_argument", "func_wrapper/infer_device", "func_wrapper/infer_dtype", "func_wrapper/inputs_to_ivy_arrays", "func_wrapper/inputs_to_native_arrays", "func_wrapper/integer_arrays_to_float", "func_wrapper/outputs_to_ivy_arrays", "func_wrapper/to_native_arrays_and_back", "functional/ivy", "functional/ivy/activations", "functional/ivy/activations/deserialize", "functional/ivy/activations/gelu", "functional/ivy/activations/gelu/gelu_array", "functional/ivy/activations/gelu/gelu_container", "functional/ivy/activations/gelu/gelu_functional", "functional/ivy/activations/gelu/static_gelu_container", "functional/ivy/activations/get", "functional/ivy/activations/leaky_relu", "functional/ivy/activations/leaky_relu/leaky_relu_array", "functional/ivy/activations/leaky_relu/leaky_relu_container", "functional/ivy/activations/leaky_relu/leaky_relu_functional", "functional/ivy/activations/leaky_relu/static_leaky_relu_container", "functional/ivy/activations/log_softmax", "functional/ivy/activations/log_softmax/log_softmax_array", "functional/ivy/activations/log_softmax/log_softmax_container", "functional/ivy/activations/log_softmax/log_softmax_functional", "functional/ivy/activations/log_softmax/static_log_softmax_container", "functional/ivy/activations/relu", "functional/ivy/activations/relu/relu_array", "functional/ivy/activations/relu/relu_container", "functional/ivy/activations/relu/relu_functional", "functional/ivy/activations/relu/static_relu_container", "functional/ivy/activations/sigmoid", "functional/ivy/activations/sigmoid/sigmoid_array", "functional/ivy/activations/sigmoid/sigmoid_container", "functional/ivy/activations/sigmoid/sigmoid_functional", "functional/ivy/activations/sigmoid/static_sigmoid_container", "functional/ivy/activations/softmax", "functional/ivy/activations/softmax/softmax_array", "functional/ivy/activations/softmax/softmax_container", "functional/ivy/activations/softmax/softmax_functional", "functional/ivy/activations/softmax/static_softmax_container", "functional/ivy/activations/softplus", "functional/ivy/activations/softplus/softplus_array", "functional/ivy/activations/softplus/softplus_container", "functional/ivy/activations/softplus/softplus_functional", "functional/ivy/activations/softplus/static_softplus_container", "functional/ivy/compilation", "functional/ivy/compilation/compile", "functional/ivy/constants", "functional/ivy/creation", "functional/ivy/creation/NestedSequence", "functional/ivy/creation/arange", "functional/ivy/creation/arange/arange_functional", "functional/ivy/creation/arange/static_arange_container", "functional/ivy/creation/asarray", "functional/ivy/creation/asarray/asarray_array", "functional/ivy/creation/asarray/asarray_functional", "functional/ivy/creation/asarray/static_asarray_container", "functional/ivy/creation/asarray_handle_nestable", "functional/ivy/creation/asarray_infer_device", "functional/ivy/creation/asarray_to_native_arrays_and_back", "functional/ivy/creation/copy_array", "functional/ivy/creation/copy_array/copy_array_array", "functional/ivy/creation/copy_array/copy_array_functional", "functional/ivy/creation/empty", "functional/ivy/creation/empty_like", "functional/ivy/creation/empty_like/empty_like_array", "functional/ivy/creation/empty_like/empty_like_container", "functional/ivy/creation/empty_like/empty_like_functional", "functional/ivy/creation/empty_like/static_empty_like_container", "functional/ivy/creation/eye", "functional/ivy/creation/eye/eye_functional", "functional/ivy/creation/eye/static_eye_container", "functional/ivy/creation/from_dlpack", "functional/ivy/creation/from_dlpack/from_dlpack_array", "functional/ivy/creation/from_dlpack/from_dlpack_container", "functional/ivy/creation/from_dlpack/from_dlpack_functional", "functional/ivy/creation/from_dlpack/static_from_dlpack_container", "functional/ivy/creation/full", "functional/ivy/creation/full_like", "functional/ivy/creation/full_like/full_like_array", "functional/ivy/creation/full_like/full_like_container", "functional/ivy/creation/full_like/full_like_functional", "functional/ivy/creation/full_like/static_full_like_container", "functional/ivy/creation/linspace", "functional/ivy/creation/linspace/linspace_array", "functional/ivy/creation/linspace/linspace_container", "functional/ivy/creation/linspace/linspace_functional", "functional/ivy/creation/linspace/static_linspace_container", "functional/ivy/creation/logspace", "functional/ivy/creation/logspace/logspace_functional", "functional/ivy/creation/logspace/static_logspace_container", "functional/ivy/creation/meshgrid", "functional/ivy/creation/meshgrid/meshgrid_array", "functional/ivy/creation/meshgrid/meshgrid_container", "functional/ivy/creation/meshgrid/meshgrid_functional", "functional/ivy/creation/meshgrid/static_meshgrid_container", "functional/ivy/creation/native_array", "functional/ivy/creation/native_array/native_array_array", "functional/ivy/creation/native_array/native_array_container", "functional/ivy/creation/native_array/native_array_functional", "functional/ivy/creation/native_array/static_native_array_container", "functional/ivy/creation/one_hot", "functional/ivy/creation/one_hot/one_hot_array", "functional/ivy/creation/one_hot/one_hot_container", "functional/ivy/creation/one_hot/one_hot_functional", "functional/ivy/creation/one_hot/static_one_hot_container", "functional/ivy/creation/ones", "functional/ivy/creation/ones/ones_functional", "functional/ivy/creation/ones/static_ones_container", "functional/ivy/creation/ones_like", "functional/ivy/creation/ones_like/ones_like_array", "functional/ivy/creation/ones_like/ones_like_container", "functional/ivy/creation/ones_like/ones_like_functional", "functional/ivy/creation/ones_like/static_ones_like_container", "functional/ivy/creation/tril", "functional/ivy/creation/tril/static_tril_container", "functional/ivy/creation/tril/tril_array", "functional/ivy/creation/tril/tril_container", "functional/ivy/creation/tril/tril_functional", "functional/ivy/creation/triu", "functional/ivy/creation/triu/static_triu_container", "functional/ivy/creation/triu/triu_array", "functional/ivy/creation/triu/triu_container", "functional/ivy/creation/triu/triu_functional", "functional/ivy/creation/zeros", "functional/ivy/creation/zeros/static_zeros_container", "functional/ivy/creation/zeros/zeros_functional", "functional/ivy/creation/zeros_like", "functional/ivy/creation/zeros_like/static_zeros_like_container", "functional/ivy/creation/zeros_like/zeros_like_array", "functional/ivy/creation/zeros_like/zeros_like_container", "functional/ivy/creation/zeros_like/zeros_like_functional", "functional/ivy/data_type", "functional/ivy/data_type/DefaultDtype", "functional/ivy/data_type/DefaultFloatDtype", "functional/ivy/data_type/DefaultIntDtype", "functional/ivy/data_type/DefaultUintDtype", "functional/ivy/data_type/as_ivy_dtype", "functional/ivy/data_type/as_native_dtype", "functional/ivy/data_type/astype", "functional/ivy/data_type/astype/astype_array", "functional/ivy/data_type/astype/astype_container", "functional/ivy/data_type/astype/astype_functional", "functional/ivy/data_type/astype/static_astype_container", "functional/ivy/data_type/broadcast_arrays", "functional/ivy/data_type/broadcast_arrays/broadcast_arrays_array", "functional/ivy/data_type/broadcast_arrays/broadcast_arrays_container", "functional/ivy/data_type/broadcast_arrays/broadcast_arrays_functional", "functional/ivy/data_type/broadcast_arrays/static_broadcast_arrays_container", "functional/ivy/data_type/broadcast_to", "functional/ivy/data_type/broadcast_to/broadcast_to_array", "functional/ivy/data_type/broadcast_to/broadcast_to_container", "functional/ivy/data_type/broadcast_to/broadcast_to_functional", "functional/ivy/data_type/broadcast_to/static_broadcast_to_container", "functional/ivy/data_type/can_cast", "functional/ivy/data_type/can_cast/can_cast_array", "functional/ivy/data_type/can_cast/can_cast_container", "functional/ivy/data_type/can_cast/can_cast_functional", "functional/ivy/data_type/can_cast/static_can_cast_container", "functional/ivy/data_type/check_float", "functional/ivy/data_type/closest_valid_dtype", "functional/ivy/data_type/default_dtype", "functional/ivy/data_type/default_float_dtype", "functional/ivy/data_type/default_float_dtype/default_float_dtype_functional", "functional/ivy/data_type/default_float_dtype/static_default_float_dtype_container", "functional/ivy/data_type/default_int_dtype", "functional/ivy/data_type/default_uint_dtype", "functional/ivy/data_type/dtype", "functional/ivy/data_type/dtype/dtype_container", "functional/ivy/data_type/dtype/dtype_functional", "functional/ivy/data_type/dtype/static_dtype_container", "functional/ivy/data_type/dtype_bits", "functional/ivy/data_type/finfo", "functional/ivy/data_type/finfo/finfo_array", "functional/ivy/data_type/finfo/finfo_container", "functional/ivy/data_type/finfo/finfo_functional", "functional/ivy/data_type/finfo/static_finfo_container", "functional/ivy/data_type/function_supported_dtypes", "functional/ivy/data_type/function_supported_dtypes/function_supported_dtypes_functional", "functional/ivy/data_type/function_supported_dtypes/static_function_supported_dtypes_container", "functional/ivy/data_type/function_unsupported_dtypes", "functional/ivy/data_type/function_unsupported_dtypes/function_unsupported_dtypes_functional", "functional/ivy/data_type/function_unsupported_dtypes/static_function_unsupported_dtypes_container", "functional/ivy/data_type/iinfo", "functional/ivy/data_type/iinfo/iinfo_array", "functional/ivy/data_type/iinfo/iinfo_container", "functional/ivy/data_type/iinfo/iinfo_functional", "functional/ivy/data_type/iinfo/static_iinfo_container", "functional/ivy/data_type/infer_default_dtype", "functional/ivy/data_type/invalid_dtype", "functional/ivy/data_type/is_bool_dtype", "functional/ivy/data_type/is_bool_dtype/is_bool_dtype_array", "functional/ivy/data_type/is_bool_dtype/is_bool_dtype_container", "functional/ivy/data_type/is_bool_dtype/is_bool_dtype_functional", "functional/ivy/data_type/is_bool_dtype/static_is_bool_dtype_container", "functional/ivy/data_type/is_float_dtype", "functional/ivy/data_type/is_float_dtype/is_float_dtype_array", "functional/ivy/data_type/is_float_dtype/is_float_dtype_container", "functional/ivy/data_type/is_float_dtype/is_float_dtype_functional", "functional/ivy/data_type/is_float_dtype/static_is_float_dtype_container", "functional/ivy/data_type/is_int_dtype", "functional/ivy/data_type/is_int_dtype/is_int_dtype_array", "functional/ivy/data_type/is_int_dtype/is_int_dtype_container", "functional/ivy/data_type/is_int_dtype/is_int_dtype_functional", "functional/ivy/data_type/is_int_dtype/static_is_int_dtype_container", "functional/ivy/data_type/is_uint_dtype", "functional/ivy/data_type/is_uint_dtype/is_uint_dtype_array", "functional/ivy/data_type/is_uint_dtype/is_uint_dtype_container", "functional/ivy/data_type/is_uint_dtype/is_uint_dtype_functional", "functional/ivy/data_type/is_uint_dtype/static_is_uint_dtype_container", "functional/ivy/data_type/promote_types", "functional/ivy/data_type/promote_types_of_inputs", "functional/ivy/data_type/result_type", "functional/ivy/data_type/result_type/result_type_array", "functional/ivy/data_type/result_type/result_type_container", "functional/ivy/data_type/result_type/result_type_functional", "functional/ivy/data_type/result_type/static_result_type_container", "functional/ivy/data_type/set_default_dtype", "functional/ivy/data_type/set_default_float_dtype", "functional/ivy/data_type/set_default_int_dtype", "functional/ivy/data_type/set_default_uint_dtype", "functional/ivy/data_type/type_promote_arrays", "functional/ivy/data_type/unset_default_dtype", "functional/ivy/data_type/unset_default_float_dtype", "functional/ivy/data_type/unset_default_int_dtype", "functional/ivy/data_type/unset_default_uint_dtype", "functional/ivy/data_type/valid_dtype", "functional/ivy/device", "functional/ivy/device/DefaultDevice", "functional/ivy/device/Profiler", "functional/ivy/device/as_ivy_dev", "functional/ivy/device/as_native_dev", "functional/ivy/device/clear_mem_on_dev", "functional/ivy/device/default_device", "functional/ivy/device/dev", "functional/ivy/device/dev/dev_array", "functional/ivy/device/dev/dev_functional", "functional/ivy/device/dev/static_dev_container", "functional/ivy/device/dev_util", "functional/ivy/device/function_supported_devices", "functional/ivy/device/function_unsupported_devices", "functional/ivy/device/get_all_ivy_arrays_on_dev", "functional/ivy/device/gpu_is_available", "functional/ivy/device/num_cpu_cores", "functional/ivy/device/num_gpus", "functional/ivy/device/num_ivy_arrays_on_dev", "functional/ivy/device/percent_used_mem_on_dev", "functional/ivy/device/print_all_ivy_arrays_on_dev", "functional/ivy/device/set_default_device", "functional/ivy/device/set_split_factor", "functional/ivy/device/split_factor", "functional/ivy/device/split_func_call", "functional/ivy/device/to_device", "functional/ivy/device/to_device/static_to_device_container", "functional/ivy/device/to_device/to_device_array", "functional/ivy/device/to_device/to_device_container", "functional/ivy/device/to_device/to_device_functional", "functional/ivy/device/total_mem_on_dev", "functional/ivy/device/tpu_is_available", "functional/ivy/device/unset_default_device", "functional/ivy/device/used_mem_on_dev", "functional/ivy/elementwise", "functional/ivy/elementwise/abs", "functional/ivy/elementwise/abs/abs_array", "functional/ivy/elementwise/abs/abs_container", "functional/ivy/elementwise/abs/abs_functional", "functional/ivy/elementwise/abs/static_abs_container", "functional/ivy/elementwise/acos", "functional/ivy/elementwise/acos/acos_array", "functional/ivy/elementwise/acos/acos_container", "functional/ivy/elementwise/acos/acos_functional", "functional/ivy/elementwise/acos/static_acos_container", "functional/ivy/elementwise/acosh", "functional/ivy/elementwise/acosh/acosh_array", "functional/ivy/elementwise/acosh/acosh_container", "functional/ivy/elementwise/acosh/acosh_functional", "functional/ivy/elementwise/acosh/static_acosh_container", "functional/ivy/elementwise/add", "functional/ivy/elementwise/add/add_array", "functional/ivy/elementwise/add/add_container", "functional/ivy/elementwise/add/add_functional", "functional/ivy/elementwise/add/static_add_container", "functional/ivy/elementwise/asin", "functional/ivy/elementwise/asin/asin_array", "functional/ivy/elementwise/asin/asin_container", "functional/ivy/elementwise/asin/asin_functional", "functional/ivy/elementwise/asin/static_asin_container", "functional/ivy/elementwise/asinh", "functional/ivy/elementwise/asinh/asinh_array", "functional/ivy/elementwise/asinh/asinh_container", "functional/ivy/elementwise/asinh/asinh_functional", "functional/ivy/elementwise/asinh/static_asinh_container", "functional/ivy/elementwise/atan", "functional/ivy/elementwise/atan/atan_array", "functional/ivy/elementwise/atan/atan_container", "functional/ivy/elementwise/atan/atan_functional", "functional/ivy/elementwise/atan/static_atan_container", "functional/ivy/elementwise/atan2", "functional/ivy/elementwise/atan2/atan2_array", "functional/ivy/elementwise/atan2/atan2_container", "functional/ivy/elementwise/atan2/atan2_functional", "functional/ivy/elementwise/atan2/static_atan2_container", "functional/ivy/elementwise/atanh", "functional/ivy/elementwise/atanh/atanh_array", "functional/ivy/elementwise/atanh/atanh_container", "functional/ivy/elementwise/atanh/atanh_functional", "functional/ivy/elementwise/atanh/static_atanh_container", "functional/ivy/elementwise/bitwise_and", "functional/ivy/elementwise/bitwise_and/bitwise_and_array", "functional/ivy/elementwise/bitwise_and/bitwise_and_container", "functional/ivy/elementwise/bitwise_and/bitwise_and_functional", "functional/ivy/elementwise/bitwise_and/static_bitwise_and_container", "functional/ivy/elementwise/bitwise_invert", "functional/ivy/elementwise/bitwise_invert/bitwise_invert_array", "functional/ivy/elementwise/bitwise_invert/bitwise_invert_container", "functional/ivy/elementwise/bitwise_invert/bitwise_invert_functional", "functional/ivy/elementwise/bitwise_invert/static_bitwise_invert_container", "functional/ivy/elementwise/bitwise_left_shift", "functional/ivy/elementwise/bitwise_left_shift/bitwise_left_shift_array", "functional/ivy/elementwise/bitwise_left_shift/bitwise_left_shift_container", "functional/ivy/elementwise/bitwise_left_shift/bitwise_left_shift_functional", "functional/ivy/elementwise/bitwise_left_shift/static_bitwise_left_shift_container", "functional/ivy/elementwise/bitwise_or", "functional/ivy/elementwise/bitwise_or/bitwise_or_array", "functional/ivy/elementwise/bitwise_or/bitwise_or_container", "functional/ivy/elementwise/bitwise_or/bitwise_or_functional", "functional/ivy/elementwise/bitwise_or/static_bitwise_or_container", "functional/ivy/elementwise/bitwise_right_shift", "functional/ivy/elementwise/bitwise_right_shift/bitwise_right_shift_array", "functional/ivy/elementwise/bitwise_right_shift/bitwise_right_shift_container", "functional/ivy/elementwise/bitwise_right_shift/bitwise_right_shift_functional", "functional/ivy/elementwise/bitwise_right_shift/static_bitwise_right_shift_container", "functional/ivy/elementwise/bitwise_xor", "functional/ivy/elementwise/bitwise_xor/bitwise_xor_array", "functional/ivy/elementwise/bitwise_xor/bitwise_xor_container", "functional/ivy/elementwise/bitwise_xor/bitwise_xor_functional", "functional/ivy/elementwise/bitwise_xor/static_bitwise_xor_container", "functional/ivy/elementwise/ceil", "functional/ivy/elementwise/ceil/ceil_array", "functional/ivy/elementwise/ceil/ceil_container", "functional/ivy/elementwise/ceil/ceil_functional", "functional/ivy/elementwise/ceil/static_ceil_container", "functional/ivy/elementwise/cos", "functional/ivy/elementwise/cos/cos_array", "functional/ivy/elementwise/cos/cos_container", "functional/ivy/elementwise/cos/cos_functional", "functional/ivy/elementwise/cos/static_cos_container", "functional/ivy/elementwise/cosh", "functional/ivy/elementwise/cosh/cosh_array", "functional/ivy/elementwise/cosh/cosh_container", "functional/ivy/elementwise/cosh/cosh_functional", "functional/ivy/elementwise/cosh/static_cosh_container", "functional/ivy/elementwise/deg2rad", "functional/ivy/elementwise/deg2rad/deg2rad_array", "functional/ivy/elementwise/deg2rad/deg2rad_container", "functional/ivy/elementwise/deg2rad/deg2rad_functional", "functional/ivy/elementwise/deg2rad/static_deg2rad_container", "functional/ivy/elementwise/divide", "functional/ivy/elementwise/divide/divide_array", "functional/ivy/elementwise/divide/divide_container", "functional/ivy/elementwise/divide/divide_functional", "functional/ivy/elementwise/divide/static_divide_container", "functional/ivy/elementwise/equal", "functional/ivy/elementwise/equal/equal_array", "functional/ivy/elementwise/equal/equal_container", "functional/ivy/elementwise/equal/equal_functional", "functional/ivy/elementwise/equal/static_equal_container", "functional/ivy/elementwise/erf", "functional/ivy/elementwise/erf/erf_array", "functional/ivy/elementwise/erf/erf_container", "functional/ivy/elementwise/erf/erf_functional", "functional/ivy/elementwise/erf/static_erf_container", "functional/ivy/elementwise/exp", "functional/ivy/elementwise/exp/exp_array", "functional/ivy/elementwise/exp/exp_container", "functional/ivy/elementwise/exp/exp_functional", "functional/ivy/elementwise/exp/static_exp_container", "functional/ivy/elementwise/expm1", "functional/ivy/elementwise/expm1/expm1_array", "functional/ivy/elementwise/expm1/expm1_container", "functional/ivy/elementwise/expm1/expm1_functional", "functional/ivy/elementwise/expm1/static_expm1_container", "functional/ivy/elementwise/floor", "functional/ivy/elementwise/floor/floor_array", "functional/ivy/elementwise/floor/floor_container", "functional/ivy/elementwise/floor/floor_functional", "functional/ivy/elementwise/floor/static_floor_container", "functional/ivy/elementwise/floor_divide", "functional/ivy/elementwise/floor_divide/floor_divide_array", "functional/ivy/elementwise/floor_divide/floor_divide_container", "functional/ivy/elementwise/floor_divide/floor_divide_functional", "functional/ivy/elementwise/floor_divide/static_floor_divide_container", "functional/ivy/elementwise/greater", "functional/ivy/elementwise/greater/greater_array", "functional/ivy/elementwise/greater/greater_container", "functional/ivy/elementwise/greater/greater_functional", "functional/ivy/elementwise/greater/static_greater_container", "functional/ivy/elementwise/greater_equal", "functional/ivy/elementwise/greater_equal/greater_equal_array", "functional/ivy/elementwise/greater_equal/greater_equal_container", "functional/ivy/elementwise/greater_equal/greater_equal_functional", "functional/ivy/elementwise/greater_equal/static_greater_equal_container", "functional/ivy/elementwise/isfinite", "functional/ivy/elementwise/isfinite/isfinite_array", "functional/ivy/elementwise/isfinite/isfinite_container", "functional/ivy/elementwise/isfinite/isfinite_functional", "functional/ivy/elementwise/isfinite/static_isfinite_container", "functional/ivy/elementwise/isinf", "functional/ivy/elementwise/isinf/isinf_array", "functional/ivy/elementwise/isinf/isinf_container", "functional/ivy/elementwise/isinf/isinf_functional", "functional/ivy/elementwise/isinf/static_isinf_container", "functional/ivy/elementwise/isnan", "functional/ivy/elementwise/isnan/isnan_array", "functional/ivy/elementwise/isnan/isnan_container", "functional/ivy/elementwise/isnan/isnan_functional", "functional/ivy/elementwise/isnan/static_isnan_container", "functional/ivy/elementwise/isreal", "functional/ivy/elementwise/isreal/isreal_array", "functional/ivy/elementwise/isreal/isreal_container", "functional/ivy/elementwise/isreal/isreal_functional", "functional/ivy/elementwise/isreal/static_isreal_container", "functional/ivy/elementwise/less", "functional/ivy/elementwise/less/less_array", "functional/ivy/elementwise/less/less_container", "functional/ivy/elementwise/less/less_functional", "functional/ivy/elementwise/less/static_less_container", "functional/ivy/elementwise/less_equal", "functional/ivy/elementwise/less_equal/less_equal_array", "functional/ivy/elementwise/less_equal/less_equal_container", "functional/ivy/elementwise/less_equal/less_equal_functional", "functional/ivy/elementwise/less_equal/static_less_equal_container", "functional/ivy/elementwise/log", "functional/ivy/elementwise/log/log_array", "functional/ivy/elementwise/log/log_container", "functional/ivy/elementwise/log/log_functional", "functional/ivy/elementwise/log/static_log_container", "functional/ivy/elementwise/log10", "functional/ivy/elementwise/log10/log10_array", "functional/ivy/elementwise/log10/log10_container", "functional/ivy/elementwise/log10/log10_functional", "functional/ivy/elementwise/log10/static_log10_container", "functional/ivy/elementwise/log1p", "functional/ivy/elementwise/log1p/log1p_array", "functional/ivy/elementwise/log1p/log1p_container", "functional/ivy/elementwise/log1p/log1p_functional", "functional/ivy/elementwise/log1p/static_log1p_container", "functional/ivy/elementwise/log2", "functional/ivy/elementwise/log2/log2_array", "functional/ivy/elementwise/log2/log2_container", "functional/ivy/elementwise/log2/log2_functional", "functional/ivy/elementwise/log2/static_log2_container", "functional/ivy/elementwise/logaddexp", "functional/ivy/elementwise/logaddexp/logaddexp_array", "functional/ivy/elementwise/logaddexp/logaddexp_container", "functional/ivy/elementwise/logaddexp/logaddexp_functional", "functional/ivy/elementwise/logaddexp/static_logaddexp_container", "functional/ivy/elementwise/logical_and", "functional/ivy/elementwise/logical_and/logical_and_array", "functional/ivy/elementwise/logical_and/logical_and_container", "functional/ivy/elementwise/logical_and/logical_and_functional", "functional/ivy/elementwise/logical_and/static_logical_and_container", "functional/ivy/elementwise/logical_not", "functional/ivy/elementwise/logical_not/logical_not_array", "functional/ivy/elementwise/logical_not/logical_not_container", "functional/ivy/elementwise/logical_not/logical_not_functional", "functional/ivy/elementwise/logical_not/static_logical_not_container", "functional/ivy/elementwise/logical_or", "functional/ivy/elementwise/logical_or/logical_or_array", "functional/ivy/elementwise/logical_or/logical_or_container", "functional/ivy/elementwise/logical_or/logical_or_functional", "functional/ivy/elementwise/logical_or/static_logical_or_container", "functional/ivy/elementwise/logical_xor", "functional/ivy/elementwise/logical_xor/logical_xor_array", "functional/ivy/elementwise/logical_xor/logical_xor_container", "functional/ivy/elementwise/logical_xor/logical_xor_functional", "functional/ivy/elementwise/logical_xor/static_logical_xor_container", "functional/ivy/elementwise/maximum", "functional/ivy/elementwise/maximum/maximum_array", "functional/ivy/elementwise/maximum/maximum_container", "functional/ivy/elementwise/maximum/maximum_functional", "functional/ivy/elementwise/maximum/static_maximum_container", "functional/ivy/elementwise/minimum", "functional/ivy/elementwise/minimum/minimum_array", "functional/ivy/elementwise/minimum/minimum_container", "functional/ivy/elementwise/minimum/minimum_functional", "functional/ivy/elementwise/minimum/static_minimum_container", "functional/ivy/elementwise/multiply", "functional/ivy/elementwise/multiply/multiply_array", "functional/ivy/elementwise/multiply/multiply_container", "functional/ivy/elementwise/multiply/multiply_functional", "functional/ivy/elementwise/multiply/static_multiply_container", "functional/ivy/elementwise/negative", "functional/ivy/elementwise/negative/negative_array", "functional/ivy/elementwise/negative/negative_container", "functional/ivy/elementwise/negative/negative_functional", "functional/ivy/elementwise/negative/static_negative_container", "functional/ivy/elementwise/not_equal", "functional/ivy/elementwise/not_equal/not_equal_array", "functional/ivy/elementwise/not_equal/not_equal_container", "functional/ivy/elementwise/not_equal/not_equal_functional", "functional/ivy/elementwise/not_equal/static_not_equal_container", "functional/ivy/elementwise/positive", "functional/ivy/elementwise/positive/positive_array", "functional/ivy/elementwise/positive/positive_container", "functional/ivy/elementwise/positive/positive_functional", "functional/ivy/elementwise/positive/static_positive_container", "functional/ivy/elementwise/pow", "functional/ivy/elementwise/pow/pow_array", "functional/ivy/elementwise/pow/pow_container", "functional/ivy/elementwise/pow/pow_functional", "functional/ivy/elementwise/pow/static_pow_container", "functional/ivy/elementwise/rad2deg", "functional/ivy/elementwise/rad2deg/rad2deg_array", "functional/ivy/elementwise/rad2deg/rad2deg_container", "functional/ivy/elementwise/rad2deg/rad2deg_functional", "functional/ivy/elementwise/rad2deg/static_rad2deg_container", "functional/ivy/elementwise/reciprocal", "functional/ivy/elementwise/reciprocal/reciprocal_array", "functional/ivy/elementwise/reciprocal/reciprocal_container", "functional/ivy/elementwise/reciprocal/reciprocal_functional", "functional/ivy/elementwise/reciprocal/static_reciprocal_container", "functional/ivy/elementwise/remainder", "functional/ivy/elementwise/remainder/remainder_array", "functional/ivy/elementwise/remainder/remainder_container", "functional/ivy/elementwise/remainder/remainder_functional", "functional/ivy/elementwise/remainder/static_remainder_container", "functional/ivy/elementwise/round", "functional/ivy/elementwise/round/round_array", "functional/ivy/elementwise/round/round_container", "functional/ivy/elementwise/round/round_functional", "functional/ivy/elementwise/round/static_round_container", "functional/ivy/elementwise/sign", "functional/ivy/elementwise/sign/sign_array", "functional/ivy/elementwise/sign/sign_container", "functional/ivy/elementwise/sign/sign_functional", "functional/ivy/elementwise/sign/static_sign_container", "functional/ivy/elementwise/sin", "functional/ivy/elementwise/sin/sin_array", "functional/ivy/elementwise/sin/sin_container", "functional/ivy/elementwise/sin/sin_functional", "functional/ivy/elementwise/sin/static_sin_container", "functional/ivy/elementwise/sinh", "functional/ivy/elementwise/sinh/sinh_array", "functional/ivy/elementwise/sinh/sinh_container", "functional/ivy/elementwise/sinh/sinh_functional", "functional/ivy/elementwise/sinh/static_sinh_container", "functional/ivy/elementwise/sqrt", "functional/ivy/elementwise/sqrt/sqrt_array", "functional/ivy/elementwise/sqrt/sqrt_container", "functional/ivy/elementwise/sqrt/sqrt_functional", "functional/ivy/elementwise/sqrt/static_sqrt_container", "functional/ivy/elementwise/square", "functional/ivy/elementwise/square/square_array", "functional/ivy/elementwise/square/square_container", "functional/ivy/elementwise/square/square_functional", "functional/ivy/elementwise/square/static_square_container", "functional/ivy/elementwise/subtract", "functional/ivy/elementwise/subtract/static_subtract_container", "functional/ivy/elementwise/subtract/subtract_array", "functional/ivy/elementwise/subtract/subtract_container", "functional/ivy/elementwise/subtract/subtract_functional", "functional/ivy/elementwise/tan", "functional/ivy/elementwise/tan/static_tan_container", "functional/ivy/elementwise/tan/tan_array", "functional/ivy/elementwise/tan/tan_container", "functional/ivy/elementwise/tan/tan_functional", "functional/ivy/elementwise/tanh", "functional/ivy/elementwise/tanh/static_tanh_container", "functional/ivy/elementwise/tanh/tanh_array", "functional/ivy/elementwise/tanh/tanh_container", "functional/ivy/elementwise/tanh/tanh_functional", "functional/ivy/elementwise/trunc", "functional/ivy/elementwise/trunc/static_trunc_container", "functional/ivy/elementwise/trunc/trunc_array", "functional/ivy/elementwise/trunc/trunc_container", "functional/ivy/elementwise/trunc/trunc_functional", "functional/ivy/elementwise/trunc_divide", "functional/ivy/elementwise/trunc_divide/static_trunc_divide_container", "functional/ivy/elementwise/trunc_divide/trunc_divide_array", "functional/ivy/elementwise/trunc_divide/trunc_divide_container", "functional/ivy/elementwise/trunc_divide/trunc_divide_functional", "functional/ivy/experimental", "functional/ivy/experimental/NativeSparseArray", "functional/ivy/experimental/SparseArray", "functional/ivy/experimental/allclose", "functional/ivy/experimental/allclose/allclose_array", "functional/ivy/experimental/allclose/allclose_container", "functional/ivy/experimental/allclose/allclose_functional", "functional/ivy/experimental/allclose/static_allclose_container", "functional/ivy/experimental/atleast_1d", "functional/ivy/experimental/atleast_1d/atleast_1d_array", "functional/ivy/experimental/atleast_1d/atleast_1d_container", "functional/ivy/experimental/atleast_1d/atleast_1d_functional", "functional/ivy/experimental/atleast_1d/static_atleast_1d_container", "functional/ivy/experimental/atleast_2d", "functional/ivy/experimental/atleast_2d/atleast_2d_array", "functional/ivy/experimental/atleast_2d/atleast_2d_container", "functional/ivy/experimental/atleast_2d/atleast_2d_functional", "functional/ivy/experimental/atleast_2d/static_atleast_2d_container", "functional/ivy/experimental/atleast_3d", "functional/ivy/experimental/atleast_3d/atleast_3d_array", "functional/ivy/experimental/atleast_3d/atleast_3d_container", "functional/ivy/experimental/atleast_3d/atleast_3d_functional", "functional/ivy/experimental/atleast_3d/static_atleast_3d_container", "functional/ivy/experimental/avg_pool1d", "functional/ivy/experimental/avg_pool1d/avg_pool1d_array", "functional/ivy/experimental/avg_pool1d/avg_pool1d_container", "functional/ivy/experimental/avg_pool1d/avg_pool1d_functional", "functional/ivy/experimental/avg_pool1d/static_avg_pool1d_container", "functional/ivy/experimental/avg_pool2d", "functional/ivy/experimental/avg_pool2d/avg_pool2d_array", "functional/ivy/experimental/avg_pool2d/avg_pool2d_container", "functional/ivy/experimental/avg_pool2d/avg_pool2d_functional", "functional/ivy/experimental/avg_pool2d/static_avg_pool2d_container", "functional/ivy/experimental/avg_pool3d", "functional/ivy/experimental/avg_pool3d/avg_pool3d_array", "functional/ivy/experimental/avg_pool3d/avg_pool3d_container", "functional/ivy/experimental/avg_pool3d/avg_pool3d_functional", "functional/ivy/experimental/avg_pool3d/static_avg_pool3d_container", "functional/ivy/experimental/beta", "functional/ivy/experimental/count_nonzero", "functional/ivy/experimental/count_nonzero/count_nonzero_array", "functional/ivy/experimental/count_nonzero/count_nonzero_container", "functional/ivy/experimental/count_nonzero/count_nonzero_functional", "functional/ivy/experimental/count_nonzero/static_count_nonzero_container", "functional/ivy/experimental/dct", "functional/ivy/experimental/dct/dct_array", "functional/ivy/experimental/dct/dct_container", "functional/ivy/experimental/dct/dct_functional", "functional/ivy/experimental/dct/static_dct_container", "functional/ivy/experimental/diagflat", "functional/ivy/experimental/diagflat/diagflat_array", "functional/ivy/experimental/diagflat/diagflat_container", "functional/ivy/experimental/diagflat/diagflat_functional", "functional/ivy/experimental/diagflat/static_diagflat_container", "functional/ivy/experimental/diff", "functional/ivy/experimental/diff/diff_array", "functional/ivy/experimental/diff/diff_functional", "functional/ivy/experimental/diff/static_diff_container", "functional/ivy/experimental/dirichlet", "functional/ivy/experimental/dirichlet/dirichlet_array", "functional/ivy/experimental/dirichlet/dirichlet_container", "functional/ivy/experimental/dirichlet/dirichlet_functional", "functional/ivy/experimental/dirichlet/static_dirichlet_container", "functional/ivy/experimental/dsplit", "functional/ivy/experimental/dsplit/dsplit_array", "functional/ivy/experimental/dsplit/dsplit_container", "functional/ivy/experimental/dsplit/dsplit_functional", "functional/ivy/experimental/dsplit/static_dsplit_container", "functional/ivy/experimental/dstack", "functional/ivy/experimental/dstack/dstack_array", "functional/ivy/experimental/dstack/dstack_container", "functional/ivy/experimental/dstack/dstack_functional", "functional/ivy/experimental/dstack/static_dstack_container", "functional/ivy/experimental/exp2", "functional/ivy/experimental/exp2/exp2_array", "functional/ivy/experimental/exp2/exp2_container", "functional/ivy/experimental/exp2/exp2_functional", "functional/ivy/experimental/exp2/static_exp2_container", "functional/ivy/experimental/fft", "functional/ivy/experimental/fix", "functional/ivy/experimental/fix/fix_array", "functional/ivy/experimental/fix/fix_container", "functional/ivy/experimental/fix/fix_functional", "functional/ivy/experimental/fix/static_fix_container", "functional/ivy/experimental/flatten", "functional/ivy/experimental/flatten/flatten_array", "functional/ivy/experimental/flatten/flatten_container", "functional/ivy/experimental/flatten/flatten_functional", "functional/ivy/experimental/flatten/static_flatten_container", "functional/ivy/experimental/fliplr", "functional/ivy/experimental/fliplr/fliplr_array", "functional/ivy/experimental/fliplr/fliplr_container", "functional/ivy/experimental/fliplr/fliplr_functional", "functional/ivy/experimental/fliplr/static_fliplr_container", "functional/ivy/experimental/flipud", "functional/ivy/experimental/flipud/flipud_array", "functional/ivy/experimental/flipud/flipud_container", "functional/ivy/experimental/flipud/flipud_functional", "functional/ivy/experimental/flipud/static_flipud_container", "functional/ivy/experimental/float_power", "functional/ivy/experimental/float_power/float_power_array", "functional/ivy/experimental/float_power/float_power_container", "functional/ivy/experimental/float_power/float_power_functional", "functional/ivy/experimental/float_power/static_float_power_container", "functional/ivy/experimental/fmax", "functional/ivy/experimental/fmax/fmax_array", "functional/ivy/experimental/fmax/fmax_container", "functional/ivy/experimental/fmax/fmax_functional", "functional/ivy/experimental/fmax/static_fmax_container", "functional/ivy/experimental/fmod", "functional/ivy/experimental/fmod/fmod_array", "functional/ivy/experimental/fmod/fmod_container", "functional/ivy/experimental/fmod/fmod_functional", "functional/ivy/experimental/fmod/static_fmod_container", "functional/ivy/experimental/gamma", "functional/ivy/experimental/gcd", "functional/ivy/experimental/gcd/gcd_array", "functional/ivy/experimental/gcd/gcd_container", "functional/ivy/experimental/gcd/gcd_functional", "functional/ivy/experimental/gcd/static_gcd_container", "functional/ivy/experimental/gradient", "functional/ivy/experimental/gradient/gradient_array", "functional/ivy/experimental/gradient/gradient_container", "functional/ivy/experimental/gradient/gradient_functional", "functional/ivy/experimental/gradient/static_gradient_container", "functional/ivy/experimental/hamming_window", "functional/ivy/experimental/hamming_window/hamming_window_container", "functional/ivy/experimental/hamming_window/hamming_window_functional", "functional/ivy/experimental/hamming_window/static_hamming_window_container", "functional/ivy/experimental/hann_window", "functional/ivy/experimental/hann_window/hann_window_container", "functional/ivy/experimental/hann_window/hann_window_functional", "functional/ivy/experimental/hann_window/static_hann_window_container", "functional/ivy/experimental/heaviside", "functional/ivy/experimental/heaviside/heaviside_array", "functional/ivy/experimental/heaviside/heaviside_container", "functional/ivy/experimental/heaviside/heaviside_functional", "functional/ivy/experimental/heaviside/static_heaviside_container", "functional/ivy/experimental/hsplit", "functional/ivy/experimental/hsplit/hsplit_array", "functional/ivy/experimental/hsplit/hsplit_container", "functional/ivy/experimental/hsplit/hsplit_functional", "functional/ivy/experimental/hsplit/static_hsplit_container", "functional/ivy/experimental/hstack", "functional/ivy/experimental/hstack/hstack_array", "functional/ivy/experimental/hstack/hstack_container", "functional/ivy/experimental/hstack/hstack_functional", "functional/ivy/experimental/hstack/static_hstack_container", "functional/ivy/experimental/i0", "functional/ivy/experimental/i0/i0_array", "functional/ivy/experimental/i0/i0_container", "functional/ivy/experimental/i0/i0_functional", "functional/ivy/experimental/i0/static_i0_container", "functional/ivy/experimental/is_ivy_sparse_array", "functional/ivy/experimental/is_native_sparse_array", "functional/ivy/experimental/isclose", "functional/ivy/experimental/isclose/isclose_array", "functional/ivy/experimental/isclose/isclose_container", "functional/ivy/experimental/isclose/isclose_functional", "functional/ivy/experimental/isclose/static_isclose_container", "functional/ivy/experimental/isin", "functional/ivy/experimental/isin/isin_array", "functional/ivy/experimental/isin/isin_container", "functional/ivy/experimental/isin/isin_functional", "functional/ivy/experimental/isin/static_isin_container", "functional/ivy/experimental/isneginf", "functional/ivy/experimental/isneginf/isneginf_array", "functional/ivy/experimental/isneginf/isneginf_container", "functional/ivy/experimental/isneginf/isneginf_functional", "functional/ivy/experimental/isneginf/static_isneginf_container", "functional/ivy/experimental/isposinf", "functional/ivy/experimental/isposinf/isposinf_array", "functional/ivy/experimental/isposinf/isposinf_container", "functional/ivy/experimental/isposinf/isposinf_functional", "functional/ivy/experimental/isposinf/static_isposinf_container", "functional/ivy/experimental/kaiser_bessel_derived_window", "functional/ivy/experimental/kaiser_bessel_derived_window/kaiser_bessel_derived_window_container", "functional/ivy/experimental/kaiser_bessel_derived_window/kaiser_bessel_derived_window_functional", "functional/ivy/experimental/kaiser_bessel_derived_window/static_kaiser_bessel_derived_window_container", "functional/ivy/experimental/kaiser_window", "functional/ivy/experimental/kaiser_window/kaiser_window_container", "functional/ivy/experimental/kaiser_window/kaiser_window_functional", "functional/ivy/experimental/kaiser_window/static_kaiser_window_container", "functional/ivy/experimental/kron", "functional/ivy/experimental/kron/kron_array", "functional/ivy/experimental/kron/kron_container", "functional/ivy/experimental/kron/kron_functional", "functional/ivy/experimental/kron/static_kron_container", "functional/ivy/experimental/lcm", "functional/ivy/experimental/lcm/lcm_array", "functional/ivy/experimental/lcm/lcm_container", "functional/ivy/experimental/lcm/lcm_functional", "functional/ivy/experimental/lcm/static_lcm_container", "functional/ivy/experimental/logaddexp2", "functional/ivy/experimental/logaddexp2/logaddexp2_array", "functional/ivy/experimental/logaddexp2/logaddexp2_container", "functional/ivy/experimental/logaddexp2/logaddexp2_functional", "functional/ivy/experimental/logaddexp2/static_logaddexp2_container", "functional/ivy/experimental/max_pool1d", "functional/ivy/experimental/max_pool1d/max_pool1d_array", "functional/ivy/experimental/max_pool1d/max_pool1d_container", "functional/ivy/experimental/max_pool1d/max_pool1d_functional", "functional/ivy/experimental/max_pool1d/static_max_pool1d_container", "functional/ivy/experimental/max_pool2d", "functional/ivy/experimental/max_pool2d/max_pool2d_array", "functional/ivy/experimental/max_pool2d/max_pool2d_container", "functional/ivy/experimental/max_pool2d/max_pool2d_functional", "functional/ivy/experimental/max_pool2d/static_max_pool2d_container", "functional/ivy/experimental/max_pool3d", "functional/ivy/experimental/max_pool3d/max_pool3d_array", "functional/ivy/experimental/max_pool3d/max_pool3d_container", "functional/ivy/experimental/max_pool3d/max_pool3d_functional", "functional/ivy/experimental/max_pool3d/static_max_pool3d_container", "functional/ivy/experimental/median", "functional/ivy/experimental/median/median_array", "functional/ivy/experimental/median/median_container", "functional/ivy/experimental/median/median_functional", "functional/ivy/experimental/median/static_median_container", "functional/ivy/experimental/moveaxis", "functional/ivy/experimental/moveaxis/moveaxis_array", "functional/ivy/experimental/moveaxis/moveaxis_container", "functional/ivy/experimental/moveaxis/moveaxis_functional", "functional/ivy/experimental/moveaxis/static_moveaxis_container", "functional/ivy/experimental/msort", "functional/ivy/experimental/msort/msort_array", "functional/ivy/experimental/msort/msort_container", "functional/ivy/experimental/msort/msort_functional", "functional/ivy/experimental/msort/static_msort_container", "functional/ivy/experimental/nan_to_num", "functional/ivy/experimental/nan_to_num/nan_to_num_array", "functional/ivy/experimental/nan_to_num/nan_to_num_container", "functional/ivy/experimental/nan_to_num/nan_to_num_functional", "functional/ivy/experimental/nan_to_num/static_nan_to_num_container", "functional/ivy/experimental/nanmean", "functional/ivy/experimental/nanmean/nanmean_array", "functional/ivy/experimental/nanmean/nanmean_container", "functional/ivy/experimental/nanmean/nanmean_functional", "functional/ivy/experimental/nanmean/static_nanmean_container", "functional/ivy/experimental/nansum", "functional/ivy/experimental/nansum/nansum_array", "functional/ivy/experimental/nansum/nansum_container", "functional/ivy/experimental/nansum/nansum_functional", "functional/ivy/experimental/nansum/static_nansum_container", "functional/ivy/experimental/native_sparse_array", "functional/ivy/experimental/native_sparse_array_to_indices_values_and_shape", "functional/ivy/experimental/ndenumerate", "functional/ivy/experimental/ndindex", "functional/ivy/experimental/nextafter", "functional/ivy/experimental/nextafter/nextafter_array", "functional/ivy/experimental/nextafter/nextafter_container", "functional/ivy/experimental/nextafter/nextafter_functional", "functional/ivy/experimental/nextafter/static_nextafter_container", "functional/ivy/experimental/pad", "functional/ivy/experimental/pad/pad_array", "functional/ivy/experimental/pad/pad_container", "functional/ivy/experimental/pad/pad_functional", "functional/ivy/experimental/pad/static_pad_container", "functional/ivy/experimental/quantile", "functional/ivy/experimental/quantile/quantile_array", "functional/ivy/experimental/quantile/quantile_container", "functional/ivy/experimental/quantile/quantile_functional", "functional/ivy/experimental/quantile/static_quantile_container", "functional/ivy/experimental/rot90", "functional/ivy/experimental/rot90/rot90_array", "functional/ivy/experimental/rot90/rot90_container", "functional/ivy/experimental/rot90/rot90_functional", "functional/ivy/experimental/rot90/static_rot90_container", "functional/ivy/experimental/signbit", "functional/ivy/experimental/signbit/signbit_array", "functional/ivy/experimental/signbit/signbit_container", "functional/ivy/experimental/signbit/signbit_functional", "functional/ivy/experimental/signbit/static_signbit_container", "functional/ivy/experimental/sinc", "functional/ivy/experimental/sinc/sinc_array", "functional/ivy/experimental/sinc/sinc_container", "functional/ivy/experimental/sinc/sinc_functional", "functional/ivy/experimental/sinc/static_sinc_container", "functional/ivy/experimental/take_along_axis", "functional/ivy/experimental/take_along_axis/static_take_along_axis_container", "functional/ivy/experimental/take_along_axis/take_along_axis_array", "functional/ivy/experimental/take_along_axis/take_along_axis_container", "functional/ivy/experimental/take_along_axis/take_along_axis_functional", "functional/ivy/experimental/top_k", "functional/ivy/experimental/top_k/static_top_k_container", "functional/ivy/experimental/top_k/top_k_array", "functional/ivy/experimental/top_k/top_k_container", "functional/ivy/experimental/top_k/top_k_functional", "functional/ivy/experimental/trapz", "functional/ivy/experimental/trapz/trapz_array", "functional/ivy/experimental/trapz/trapz_functional", "functional/ivy/experimental/triu_indices", "functional/ivy/experimental/triu_indices/static_triu_indices_container", "functional/ivy/experimental/triu_indices/triu_indices_container", "functional/ivy/experimental/triu_indices/triu_indices_functional", "functional/ivy/experimental/unravel_index", "functional/ivy/experimental/unravel_index/static_unravel_index_container", "functional/ivy/experimental/unravel_index/unravel_index_array", "functional/ivy/experimental/unravel_index/unravel_index_container", "functional/ivy/experimental/unravel_index/unravel_index_functional", "functional/ivy/experimental/vorbis_window", "functional/ivy/experimental/vorbis_window/static_vorbis_window_container", "functional/ivy/experimental/vorbis_window/vorbis_window_container", "functional/ivy/experimental/vorbis_window/vorbis_window_functional", "functional/ivy/experimental/vsplit", "functional/ivy/experimental/vsplit/static_vsplit_container", "functional/ivy/experimental/vsplit/vsplit_array", "functional/ivy/experimental/vsplit/vsplit_container", "functional/ivy/experimental/vsplit/vsplit_functional", "functional/ivy/experimental/vstack", "functional/ivy/experimental/vstack/static_vstack_container", "functional/ivy/experimental/vstack/vstack_array", "functional/ivy/experimental/vstack/vstack_container", "functional/ivy/experimental/vstack/vstack_functional", "functional/ivy/experimental/zeta", "functional/ivy/experimental/zeta/static_zeta_container", "functional/ivy/experimental/zeta/zeta_array", "functional/ivy/experimental/zeta/zeta_container", "functional/ivy/experimental/zeta/zeta_functional", "functional/ivy/extensions", "functional/ivy/general", "functional/ivy/general/all_equal", "functional/ivy/general/all_equal/all_equal_array", "functional/ivy/general/all_equal/all_equal_container", "functional/ivy/general/all_equal/all_equal_functional", "functional/ivy/general/all_equal/static_all_equal_container", "functional/ivy/general/arg_info", "functional/ivy/general/arg_names", "functional/ivy/general/array_equal", "functional/ivy/general/array_equal/array_equal_array", "functional/ivy/general/array_equal/array_equal_functional", "functional/ivy/general/assert_supports_inplace", "functional/ivy/general/assert_supports_inplace/assert_supports_inplace_array", "functional/ivy/general/assert_supports_inplace/assert_supports_inplace_container", "functional/ivy/general/assert_supports_inplace/assert_supports_inplace_functional", "functional/ivy/general/assert_supports_inplace/static_assert_supports_inplace_container", "functional/ivy/general/cache_fn", "functional/ivy/general/clip_matrix_norm", "functional/ivy/general/clip_matrix_norm/clip_matrix_norm_array", "functional/ivy/general/clip_matrix_norm/clip_matrix_norm_container", "functional/ivy/general/clip_matrix_norm/clip_matrix_norm_functional", "functional/ivy/general/clip_matrix_norm/static_clip_matrix_norm_container", "functional/ivy/general/clip_vector_norm", "functional/ivy/general/clip_vector_norm/clip_vector_norm_array", "functional/ivy/general/clip_vector_norm/clip_vector_norm_container", "functional/ivy/general/clip_vector_norm/clip_vector_norm_functional", "functional/ivy/general/clip_vector_norm/static_clip_vector_norm_container", "functional/ivy/general/container_types", "functional/ivy/general/current_backend_str", "functional/ivy/general/default", "functional/ivy/general/default/default_array", "functional/ivy/general/default/default_functional", "functional/ivy/general/einops_rearrange", "functional/ivy/general/einops_rearrange/einops_rearrange_array", "functional/ivy/general/einops_rearrange/einops_rearrange_container", "functional/ivy/general/einops_rearrange/einops_rearrange_functional", "functional/ivy/general/einops_rearrange/static_einops_rearrange_container", "functional/ivy/general/einops_reduce", "functional/ivy/general/einops_reduce/einops_reduce_array", "functional/ivy/general/einops_reduce/einops_reduce_container", "functional/ivy/general/einops_reduce/einops_reduce_functional", "functional/ivy/general/einops_reduce/static_einops_reduce_container", "functional/ivy/general/einops_repeat", "functional/ivy/general/einops_repeat/einops_repeat_array", "functional/ivy/general/einops_repeat/einops_repeat_container", "functional/ivy/general/einops_repeat/einops_repeat_functional", "functional/ivy/general/einops_repeat/static_einops_repeat_container", "functional/ivy/general/exists", "functional/ivy/general/exists/exists_array", "functional/ivy/general/exists/exists_functional", "functional/ivy/general/fourier_encode", "functional/ivy/general/fourier_encode/fourier_encode_array", "functional/ivy/general/fourier_encode/fourier_encode_container", "functional/ivy/general/fourier_encode/fourier_encode_functional", "functional/ivy/general/fourier_encode/static_fourier_encode_container", "functional/ivy/general/function_supported_devices_and_dtypes", "functional/ivy/general/function_unsupported_devices_and_dtypes", "functional/ivy/general/gather", "functional/ivy/general/gather/gather_array", "functional/ivy/general/gather/gather_container", "functional/ivy/general/gather/gather_functional", "functional/ivy/general/gather/static_gather_container", "functional/ivy/general/gather_nd", "functional/ivy/general/gather_nd/gather_nd_array", "functional/ivy/general/gather_nd/gather_nd_container", "functional/ivy/general/gather_nd/gather_nd_functional", "functional/ivy/general/gather_nd/static_gather_nd_container", "functional/ivy/general/get_all_arrays_in_memory", "functional/ivy/general/get_array_mode", "functional/ivy/general/get_exception_trace_mode", "functional/ivy/general/get_item", "functional/ivy/general/get_min_base", "functional/ivy/general/get_min_denominator", "functional/ivy/general/get_nestable_mode", "functional/ivy/general/get_num_dims", "functional/ivy/general/get_num_dims/get_num_dims_array", "functional/ivy/general/get_num_dims/get_num_dims_container", "functional/ivy/general/get_num_dims/get_num_dims_functional", "functional/ivy/general/get_num_dims/static_get_num_dims_container", "functional/ivy/general/get_queue_timeout", "functional/ivy/general/get_referrers_recursive", "functional/ivy/general/get_show_func_wrapper_trace_mode", "functional/ivy/general/get_tmp_dir", "functional/ivy/general/has_nans", "functional/ivy/general/has_nans/has_nans_array", "functional/ivy/general/has_nans/has_nans_container", "functional/ivy/general/has_nans/has_nans_functional", "functional/ivy/general/has_nans/static_has_nans_container", "functional/ivy/general/inplace_arrays_supported", "functional/ivy/general/inplace_decrement", "functional/ivy/general/inplace_decrement/inplace_decrement_array", "functional/ivy/general/inplace_decrement/inplace_decrement_container", "functional/ivy/general/inplace_decrement/inplace_decrement_functional", "functional/ivy/general/inplace_decrement/static_inplace_decrement_container", "functional/ivy/general/inplace_increment", "functional/ivy/general/inplace_increment/inplace_increment_array", "functional/ivy/general/inplace_increment/inplace_increment_container", "functional/ivy/general/inplace_increment/inplace_increment_functional", "functional/ivy/general/inplace_increment/static_inplace_increment_container", "functional/ivy/general/inplace_update", "functional/ivy/general/inplace_update/inplace_update_array", "functional/ivy/general/inplace_update/inplace_update_container", "functional/ivy/general/inplace_update/inplace_update_functional", "functional/ivy/general/inplace_update/static_inplace_update_container", "functional/ivy/general/inplace_variables_supported", "functional/ivy/general/is_array", "functional/ivy/general/is_array/is_array_array", "functional/ivy/general/is_array/is_array_container", "functional/ivy/general/is_array/is_array_functional", "functional/ivy/general/is_array/static_is_array_container", "functional/ivy/general/is_ivy_array", "functional/ivy/general/is_ivy_array/is_ivy_array_array", "functional/ivy/general/is_ivy_array/is_ivy_array_container", "functional/ivy/general/is_ivy_array/is_ivy_array_functional", "functional/ivy/general/is_ivy_array/static_is_ivy_array_container", "functional/ivy/general/is_ivy_container", "functional/ivy/general/is_ivy_container/is_ivy_container_array", "functional/ivy/general/is_ivy_container/is_ivy_container_functional", "functional/ivy/general/is_native_array", "functional/ivy/general/is_native_array/is_native_array_array", "functional/ivy/general/is_native_array/is_native_array_container", "functional/ivy/general/is_native_array/is_native_array_functional", "functional/ivy/general/is_native_array/static_is_native_array_container", "functional/ivy/general/isscalar", "functional/ivy/general/match_kwargs", "functional/ivy/general/multiprocessing", "functional/ivy/general/num_arrays_in_memory", "functional/ivy/general/print_all_arrays_in_memory", "functional/ivy/general/scatter_flat", "functional/ivy/general/scatter_flat/scatter_flat_array", "functional/ivy/general/scatter_flat/scatter_flat_container", "functional/ivy/general/scatter_flat/scatter_flat_functional", "functional/ivy/general/scatter_flat/static_scatter_flat_container", "functional/ivy/general/scatter_nd", "functional/ivy/general/scatter_nd/scatter_nd_array", "functional/ivy/general/scatter_nd/scatter_nd_container", "functional/ivy/general/scatter_nd/scatter_nd_functional", "functional/ivy/general/scatter_nd/static_scatter_nd_container", "functional/ivy/general/set_array_mode", "functional/ivy/general/set_exception_trace_mode", "functional/ivy/general/set_min_base", "functional/ivy/general/set_min_denominator", "functional/ivy/general/set_nestable_mode", "functional/ivy/general/set_queue_timeout", "functional/ivy/general/set_shape_array_mode", "functional/ivy/general/set_show_func_wrapper_trace_mode", "functional/ivy/general/set_tmp_dir", "functional/ivy/general/shape", "functional/ivy/general/shape_array_mode", "functional/ivy/general/stable_divide", "functional/ivy/general/stable_divide/stable_divide_array", "functional/ivy/general/stable_divide/stable_divide_container", "functional/ivy/general/stable_divide/stable_divide_functional", "functional/ivy/general/stable_divide/static_stable_divide_container", "functional/ivy/general/stable_pow", "functional/ivy/general/stable_pow/stable_pow_array", "functional/ivy/general/stable_pow/stable_pow_container", "functional/ivy/general/stable_pow/stable_pow_functional", "functional/ivy/general/stable_pow/static_stable_pow_container", "functional/ivy/general/supports_inplace_updates", "functional/ivy/general/supports_inplace_updates/static_supports_inplace_updates_container", "functional/ivy/general/supports_inplace_updates/supports_inplace_updates_array", "functional/ivy/general/supports_inplace_updates/supports_inplace_updates_container", "functional/ivy/general/supports_inplace_updates/supports_inplace_updates_functional", "functional/ivy/general/to_ivy_shape", "functional/ivy/general/to_list", "functional/ivy/general/to_list/static_to_list_container", "functional/ivy/general/to_list/to_list_array", "functional/ivy/general/to_list/to_list_functional", "functional/ivy/general/to_native_shape", "functional/ivy/general/to_numpy", "functional/ivy/general/to_numpy/static_to_numpy_container", "functional/ivy/general/to_numpy/to_numpy_array", "functional/ivy/general/to_numpy/to_numpy_container", "functional/ivy/general/to_numpy/to_numpy_functional", "functional/ivy/general/to_scalar", "functional/ivy/general/to_scalar/static_to_scalar_container", "functional/ivy/general/to_scalar/to_scalar_array", "functional/ivy/general/to_scalar/to_scalar_container", "functional/ivy/general/to_scalar/to_scalar_functional", "functional/ivy/general/try_else_none", "functional/ivy/general/unset_array_mode", "functional/ivy/general/unset_exception_trace_mode", "functional/ivy/general/unset_nestable_mode", "functional/ivy/general/unset_queue_timeout", "functional/ivy/general/unset_shape_array_mode", "functional/ivy/general/unset_show_func_wrapper_trace_mode", "functional/ivy/general/value_is_nan", "functional/ivy/general/value_is_nan/static_value_is_nan_container", "functional/ivy/general/value_is_nan/value_is_nan_array", "functional/ivy/general/value_is_nan/value_is_nan_container", "functional/ivy/general/value_is_nan/value_is_nan_functional", "functional/ivy/general/vmap", "functional/ivy/gradients", "functional/ivy/gradients/GradientTracking", "functional/ivy/gradients/adam_step", "functional/ivy/gradients/adam_step/adam_step_array", "functional/ivy/gradients/adam_step/adam_step_container", "functional/ivy/gradients/adam_step/adam_step_functional", "functional/ivy/gradients/adam_update", "functional/ivy/gradients/adam_update/adam_update_array", "functional/ivy/gradients/adam_update/adam_update_container", "functional/ivy/gradients/adam_update/adam_update_functional", "functional/ivy/gradients/execute_with_gradients", "functional/ivy/gradients/grad", "functional/ivy/gradients/gradient_descent_update", "functional/ivy/gradients/gradient_descent_update/gradient_descent_update_array", "functional/ivy/gradients/gradient_descent_update/gradient_descent_update_container", "functional/ivy/gradients/gradient_descent_update/gradient_descent_update_functional", "functional/ivy/gradients/jac", "functional/ivy/gradients/lamb_update", "functional/ivy/gradients/lamb_update/lamb_update_array", "functional/ivy/gradients/lamb_update/lamb_update_container", "functional/ivy/gradients/lamb_update/lamb_update_functional", "functional/ivy/gradients/lars_update", "functional/ivy/gradients/lars_update/lars_update_array", "functional/ivy/gradients/lars_update/lars_update_container", "functional/ivy/gradients/lars_update/lars_update_functional", "functional/ivy/gradients/optimizer_update", "functional/ivy/gradients/optimizer_update/optimizer_update_array", "functional/ivy/gradients/optimizer_update/optimizer_update_container", "functional/ivy/gradients/optimizer_update/optimizer_update_functional", "functional/ivy/gradients/set_with_grads", "functional/ivy/gradients/stop_gradient", "functional/ivy/gradients/stop_gradient/static_stop_gradient_container", "functional/ivy/gradients/stop_gradient/stop_gradient_array", "functional/ivy/gradients/stop_gradient/stop_gradient_container", "functional/ivy/gradients/stop_gradient/stop_gradient_functional", "functional/ivy/gradients/unset_with_grads", "functional/ivy/gradients/value_and_grad", "functional/ivy/gradients/with_grads", "functional/ivy/layers", "functional/ivy/layers/conv", "functional/ivy/layers/conv1d", "functional/ivy/layers/conv1d/conv1d_array", "functional/ivy/layers/conv1d/conv1d_container", "functional/ivy/layers/conv1d/conv1d_functional", "functional/ivy/layers/conv1d/static_conv1d_container", "functional/ivy/layers/conv1d_transpose", "functional/ivy/layers/conv1d_transpose/conv1d_transpose_array", "functional/ivy/layers/conv1d_transpose/conv1d_transpose_container", "functional/ivy/layers/conv1d_transpose/conv1d_transpose_functional", "functional/ivy/layers/conv1d_transpose/static_conv1d_transpose_container", "functional/ivy/layers/conv2d", "functional/ivy/layers/conv2d/conv2d_array", "functional/ivy/layers/conv2d/conv2d_container", "functional/ivy/layers/conv2d/conv2d_functional", "functional/ivy/layers/conv2d/static_conv2d_container", "functional/ivy/layers/conv2d_transpose", "functional/ivy/layers/conv2d_transpose/conv2d_transpose_container", "functional/ivy/layers/conv2d_transpose/conv2d_transpose_functional", "functional/ivy/layers/conv2d_transpose/static_conv2d_transpose_container", "functional/ivy/layers/conv3d", "functional/ivy/layers/conv3d/conv3d_array", "functional/ivy/layers/conv3d/conv3d_container", "functional/ivy/layers/conv3d/conv3d_functional", "functional/ivy/layers/conv3d/static_conv3d_container", "functional/ivy/layers/conv3d_transpose", "functional/ivy/layers/conv3d_transpose/conv3d_transpose_array", "functional/ivy/layers/conv3d_transpose/conv3d_transpose_container", "functional/ivy/layers/conv3d_transpose/conv3d_transpose_functional", "functional/ivy/layers/conv3d_transpose/static_conv3d_transpose_container", "functional/ivy/layers/conv_general_dilated", "functional/ivy/layers/conv_general_transpose", "functional/ivy/layers/deconv_length", "functional/ivy/layers/depthwise_conv2d", "functional/ivy/layers/depthwise_conv2d/depthwise_conv2d_array", "functional/ivy/layers/depthwise_conv2d/depthwise_conv2d_container", "functional/ivy/layers/depthwise_conv2d/depthwise_conv2d_functional", "functional/ivy/layers/depthwise_conv2d/static_depthwise_conv2d_container", "functional/ivy/layers/dropout", "functional/ivy/layers/dropout/dropout_array", "functional/ivy/layers/dropout/dropout_container", "functional/ivy/layers/dropout/dropout_functional", "functional/ivy/layers/dropout/static_dropout_container", "functional/ivy/layers/dropout1d", "functional/ivy/layers/dropout1d/dropout1d_array", "functional/ivy/layers/dropout1d/dropout1d_container", "functional/ivy/layers/dropout1d/dropout1d_functional", "functional/ivy/layers/dropout1d/static_dropout1d_container", "functional/ivy/layers/get_x_data_format", "functional/ivy/layers/handle_padding", "functional/ivy/layers/linear", "functional/ivy/layers/linear/linear_array", "functional/ivy/layers/linear/linear_container", "functional/ivy/layers/linear/linear_functional", "functional/ivy/layers/linear/static_linear_container", "functional/ivy/layers/lstm_update", "functional/ivy/layers/lstm_update/lstm_update_array", "functional/ivy/layers/lstm_update/lstm_update_container", "functional/ivy/layers/lstm_update/lstm_update_functional", "functional/ivy/layers/lstm_update/static_lstm_update_container", "functional/ivy/layers/multi_head_attention", "functional/ivy/layers/multi_head_attention/multi_head_attention_array", "functional/ivy/layers/multi_head_attention/multi_head_attention_container", "functional/ivy/layers/multi_head_attention/multi_head_attention_functional", "functional/ivy/layers/multi_head_attention/static_multi_head_attention_container", "functional/ivy/layers/scaled_dot_product_attention", "functional/ivy/layers/scaled_dot_product_attention/scaled_dot_product_attention_array", "functional/ivy/layers/scaled_dot_product_attention/scaled_dot_product_attention_container", "functional/ivy/layers/scaled_dot_product_attention/scaled_dot_product_attention_functional", "functional/ivy/layers/scaled_dot_product_attention/static_scaled_dot_product_attention_container", "functional/ivy/linear_algebra", "functional/ivy/linear_algebra/cholesky", "functional/ivy/linear_algebra/cholesky/cholesky_array", "functional/ivy/linear_algebra/cholesky/cholesky_container", "functional/ivy/linear_algebra/cholesky/cholesky_functional", "functional/ivy/linear_algebra/cholesky/static_cholesky_container", "functional/ivy/linear_algebra/cross", "functional/ivy/linear_algebra/cross/cross_array", "functional/ivy/linear_algebra/cross/cross_container", "functional/ivy/linear_algebra/cross/cross_functional", "functional/ivy/linear_algebra/cross/static_cross_container", "functional/ivy/linear_algebra/det", "functional/ivy/linear_algebra/det/det_array", "functional/ivy/linear_algebra/det/det_container", "functional/ivy/linear_algebra/det/det_functional", "functional/ivy/linear_algebra/det/static_det_container", "functional/ivy/linear_algebra/diag", "functional/ivy/linear_algebra/diag/diag_array", "functional/ivy/linear_algebra/diag/diag_container", "functional/ivy/linear_algebra/diag/diag_functional", "functional/ivy/linear_algebra/diag/static_diag_container", "functional/ivy/linear_algebra/diagonal", "functional/ivy/linear_algebra/diagonal/diagonal_array", "functional/ivy/linear_algebra/diagonal/diagonal_container", "functional/ivy/linear_algebra/diagonal/diagonal_functional", "functional/ivy/linear_algebra/diagonal/static_diagonal_container", "functional/ivy/linear_algebra/eig", "functional/ivy/linear_algebra/eig/eig_array", "functional/ivy/linear_algebra/eig/eig_container", "functional/ivy/linear_algebra/eig/eig_functional", "functional/ivy/linear_algebra/eigh", "functional/ivy/linear_algebra/eigh/eigh_array", "functional/ivy/linear_algebra/eigh/eigh_container", "functional/ivy/linear_algebra/eigh/eigh_functional", "functional/ivy/linear_algebra/eigh/static_eigh_container", "functional/ivy/linear_algebra/eigvalsh", "functional/ivy/linear_algebra/eigvalsh/eigvalsh_array", "functional/ivy/linear_algebra/eigvalsh/eigvalsh_container", "functional/ivy/linear_algebra/eigvalsh/eigvalsh_functional", "functional/ivy/linear_algebra/eigvalsh/static_eigvalsh_container", "functional/ivy/linear_algebra/inner", "functional/ivy/linear_algebra/inner/inner_array", "functional/ivy/linear_algebra/inner/inner_container", "functional/ivy/linear_algebra/inner/inner_functional", "functional/ivy/linear_algebra/inner/static_inner_container", "functional/ivy/linear_algebra/inv", "functional/ivy/linear_algebra/inv/inv_array", "functional/ivy/linear_algebra/inv/inv_container", "functional/ivy/linear_algebra/inv/inv_functional", "functional/ivy/linear_algebra/inv/static_inv_container", "functional/ivy/linear_algebra/matmul", "functional/ivy/linear_algebra/matmul/matmul_array", "functional/ivy/linear_algebra/matmul/matmul_container", "functional/ivy/linear_algebra/matmul/matmul_functional", "functional/ivy/linear_algebra/matmul/static_matmul_container", "functional/ivy/linear_algebra/matrix_norm", "functional/ivy/linear_algebra/matrix_norm/matrix_norm_array", "functional/ivy/linear_algebra/matrix_norm/matrix_norm_container", "functional/ivy/linear_algebra/matrix_norm/matrix_norm_functional", "functional/ivy/linear_algebra/matrix_norm/static_matrix_norm_container", "functional/ivy/linear_algebra/matrix_power", "functional/ivy/linear_algebra/matrix_power/matrix_power_array", "functional/ivy/linear_algebra/matrix_power/matrix_power_container", "functional/ivy/linear_algebra/matrix_power/matrix_power_functional", "functional/ivy/linear_algebra/matrix_power/static_matrix_power_container", "functional/ivy/linear_algebra/matrix_rank", "functional/ivy/linear_algebra/matrix_rank/matrix_rank_array", "functional/ivy/linear_algebra/matrix_rank/matrix_rank_container", "functional/ivy/linear_algebra/matrix_rank/matrix_rank_functional", "functional/ivy/linear_algebra/matrix_rank/static_matrix_rank_container", "functional/ivy/linear_algebra/matrix_transpose", "functional/ivy/linear_algebra/matrix_transpose/matrix_transpose_array", "functional/ivy/linear_algebra/matrix_transpose/matrix_transpose_container", "functional/ivy/linear_algebra/matrix_transpose/matrix_transpose_functional", "functional/ivy/linear_algebra/matrix_transpose/static_matrix_transpose_container", "functional/ivy/linear_algebra/outer", "functional/ivy/linear_algebra/outer/outer_array", "functional/ivy/linear_algebra/outer/outer_container", "functional/ivy/linear_algebra/outer/outer_functional", "functional/ivy/linear_algebra/outer/static_outer_container", "functional/ivy/linear_algebra/pinv", "functional/ivy/linear_algebra/pinv/pinv_array", "functional/ivy/linear_algebra/pinv/pinv_container", "functional/ivy/linear_algebra/pinv/pinv_functional", "functional/ivy/linear_algebra/pinv/static_pinv_container", "functional/ivy/linear_algebra/qr", "functional/ivy/linear_algebra/qr/qr_array", "functional/ivy/linear_algebra/qr/qr_container", "functional/ivy/linear_algebra/qr/qr_functional", "functional/ivy/linear_algebra/qr/static_qr_container", "functional/ivy/linear_algebra/slogdet", "functional/ivy/linear_algebra/slogdet/slogdet_array", "functional/ivy/linear_algebra/slogdet/slogdet_container", "functional/ivy/linear_algebra/slogdet/slogdet_functional", "functional/ivy/linear_algebra/slogdet/static_slogdet_container", "functional/ivy/linear_algebra/solve", "functional/ivy/linear_algebra/solve/solve_array", "functional/ivy/linear_algebra/solve/solve_container", "functional/ivy/linear_algebra/solve/solve_functional", "functional/ivy/linear_algebra/solve/static_solve_container", "functional/ivy/linear_algebra/svd", "functional/ivy/linear_algebra/svd/static_svd_container", "functional/ivy/linear_algebra/svd/svd_array", "functional/ivy/linear_algebra/svd/svd_container", "functional/ivy/linear_algebra/svd/svd_functional", "functional/ivy/linear_algebra/svdvals", "functional/ivy/linear_algebra/svdvals/static_svdvals_container", "functional/ivy/linear_algebra/svdvals/svdvals_array", "functional/ivy/linear_algebra/svdvals/svdvals_container", "functional/ivy/linear_algebra/svdvals/svdvals_functional", "functional/ivy/linear_algebra/tensordot", "functional/ivy/linear_algebra/tensordot/static_tensordot_container", "functional/ivy/linear_algebra/tensordot/tensordot_container", "functional/ivy/linear_algebra/tensordot/tensordot_functional", "functional/ivy/linear_algebra/tensorsolve", "functional/ivy/linear_algebra/tensorsolve/tensorsolve_array", "functional/ivy/linear_algebra/tensorsolve/tensorsolve_container", "functional/ivy/linear_algebra/tensorsolve/tensorsolve_functional", "functional/ivy/linear_algebra/trace", "functional/ivy/linear_algebra/trace/static_trace_container", "functional/ivy/linear_algebra/trace/trace_array", "functional/ivy/linear_algebra/trace/trace_container", "functional/ivy/linear_algebra/trace/trace_functional", "functional/ivy/linear_algebra/vander", "functional/ivy/linear_algebra/vander/static_vander_container", "functional/ivy/linear_algebra/vander/vander_array", "functional/ivy/linear_algebra/vander/vander_container", "functional/ivy/linear_algebra/vander/vander_functional", "functional/ivy/linear_algebra/vecdot", "functional/ivy/linear_algebra/vecdot/static_vecdot_container", "functional/ivy/linear_algebra/vecdot/vecdot_array", "functional/ivy/linear_algebra/vecdot/vecdot_container", "functional/ivy/linear_algebra/vecdot/vecdot_functional", "functional/ivy/linear_algebra/vector_norm", "functional/ivy/linear_algebra/vector_norm/static_vector_norm_container", "functional/ivy/linear_algebra/vector_norm/vector_norm_array", "functional/ivy/linear_algebra/vector_norm/vector_norm_container", "functional/ivy/linear_algebra/vector_norm/vector_norm_functional", "functional/ivy/linear_algebra/vector_to_skew_symmetric_matrix", "functional/ivy/linear_algebra/vector_to_skew_symmetric_matrix/static_vector_to_skew_symmetric_matrix_container", "functional/ivy/linear_algebra/vector_to_skew_symmetric_matrix/vector_to_skew_symmetric_matrix_array", "functional/ivy/linear_algebra/vector_to_skew_symmetric_matrix/vector_to_skew_symmetric_matrix_container", "functional/ivy/linear_algebra/vector_to_skew_symmetric_matrix/vector_to_skew_symmetric_matrix_functional", "functional/ivy/losses", "functional/ivy/losses/binary_cross_entropy", "functional/ivy/losses/binary_cross_entropy/binary_cross_entropy_array", "functional/ivy/losses/binary_cross_entropy/binary_cross_entropy_container", "functional/ivy/losses/binary_cross_entropy/binary_cross_entropy_functional", "functional/ivy/losses/binary_cross_entropy/static_binary_cross_entropy_container", "functional/ivy/losses/binary_cross_entropy_with_logits", "functional/ivy/losses/cross_entropy", "functional/ivy/losses/cross_entropy/cross_entropy_array", "functional/ivy/losses/cross_entropy/cross_entropy_container", "functional/ivy/losses/cross_entropy/cross_entropy_functional", "functional/ivy/losses/cross_entropy/static_cross_entropy_container", "functional/ivy/losses/sparse_cross_entropy", "functional/ivy/losses/sparse_cross_entropy/sparse_cross_entropy_array", "functional/ivy/losses/sparse_cross_entropy/sparse_cross_entropy_container", "functional/ivy/losses/sparse_cross_entropy/sparse_cross_entropy_functional", "functional/ivy/losses/sparse_cross_entropy/static_sparse_cross_entropy_container", "functional/ivy/manipulation", "functional/ivy/manipulation/clip", "functional/ivy/manipulation/clip/clip_array", "functional/ivy/manipulation/clip/clip_container", "functional/ivy/manipulation/clip/clip_functional", "functional/ivy/manipulation/clip/static_clip_container", "functional/ivy/manipulation/concat", "functional/ivy/manipulation/concat/concat_array", "functional/ivy/manipulation/concat/concat_container", "functional/ivy/manipulation/concat/concat_functional", "functional/ivy/manipulation/concat/static_concat_container", "functional/ivy/manipulation/constant_pad", "functional/ivy/manipulation/constant_pad/constant_pad_array", "functional/ivy/manipulation/constant_pad/constant_pad_container", "functional/ivy/manipulation/constant_pad/constant_pad_functional", "functional/ivy/manipulation/constant_pad/static_constant_pad_container", "functional/ivy/manipulation/expand_dims", "functional/ivy/manipulation/expand_dims/expand_dims_array", "functional/ivy/manipulation/expand_dims/expand_dims_container", "functional/ivy/manipulation/expand_dims/expand_dims_functional", "functional/ivy/manipulation/expand_dims/static_expand_dims_container", "functional/ivy/manipulation/flip", "functional/ivy/manipulation/flip/flip_array", "functional/ivy/manipulation/flip/flip_container", "functional/ivy/manipulation/flip/flip_functional", "functional/ivy/manipulation/flip/static_flip_container", "functional/ivy/manipulation/permute_dims", "functional/ivy/manipulation/permute_dims/permute_dims_array", "functional/ivy/manipulation/permute_dims/permute_dims_container", "functional/ivy/manipulation/permute_dims/permute_dims_functional", "functional/ivy/manipulation/permute_dims/static_permute_dims_container", "functional/ivy/manipulation/repeat", "functional/ivy/manipulation/repeat/repeat_array", "functional/ivy/manipulation/repeat/repeat_container", "functional/ivy/manipulation/repeat/repeat_functional", "functional/ivy/manipulation/repeat/static_repeat_container", "functional/ivy/manipulation/reshape", "functional/ivy/manipulation/reshape/reshape_array", "functional/ivy/manipulation/reshape/reshape_container", "functional/ivy/manipulation/reshape/reshape_functional", "functional/ivy/manipulation/reshape/static_reshape_container", "functional/ivy/manipulation/roll", "functional/ivy/manipulation/roll/roll_array", "functional/ivy/manipulation/roll/roll_container", "functional/ivy/manipulation/roll/roll_functional", "functional/ivy/manipulation/roll/static_roll_container", "functional/ivy/manipulation/split", "functional/ivy/manipulation/split/split_array", "functional/ivy/manipulation/split/split_container", "functional/ivy/manipulation/split/split_functional", "functional/ivy/manipulation/split/static_split_container", "functional/ivy/manipulation/squeeze", "functional/ivy/manipulation/squeeze/squeeze_array", "functional/ivy/manipulation/squeeze/squeeze_container", "functional/ivy/manipulation/squeeze/squeeze_functional", "functional/ivy/manipulation/squeeze/static_squeeze_container", "functional/ivy/manipulation/stack", "functional/ivy/manipulation/stack/stack_array", "functional/ivy/manipulation/stack/stack_container", "functional/ivy/manipulation/stack/stack_functional", "functional/ivy/manipulation/stack/static_stack_container", "functional/ivy/manipulation/swapaxes", "functional/ivy/manipulation/swapaxes/static_swapaxes_container", "functional/ivy/manipulation/swapaxes/swapaxes_array", "functional/ivy/manipulation/swapaxes/swapaxes_container", "functional/ivy/manipulation/swapaxes/swapaxes_functional", "functional/ivy/manipulation/tile", "functional/ivy/manipulation/tile/static_tile_container", "functional/ivy/manipulation/tile/tile_array", "functional/ivy/manipulation/tile/tile_container", "functional/ivy/manipulation/tile/tile_functional", "functional/ivy/manipulation/unstack", "functional/ivy/manipulation/unstack/static_unstack_container", "functional/ivy/manipulation/unstack/unstack_array", "functional/ivy/manipulation/unstack/unstack_container", "functional/ivy/manipulation/unstack/unstack_functional", "functional/ivy/manipulation/zero_pad", "functional/ivy/manipulation/zero_pad/static_zero_pad_container", "functional/ivy/manipulation/zero_pad/zero_pad_array", "functional/ivy/manipulation/zero_pad/zero_pad_container", "functional/ivy/manipulation/zero_pad/zero_pad_functional", "functional/ivy/meta", "functional/ivy/meta/fomaml_step", "functional/ivy/meta/maml_step", "functional/ivy/meta/reptile_step", "functional/ivy/nest", "functional/ivy/nest/all_nested_indices", "functional/ivy/nest/copy_nest", "functional/ivy/nest/duplicate_array_index_chains", "functional/ivy/nest/index_nest", "functional/ivy/nest/insert_into_nest_at_index", "functional/ivy/nest/insert_into_nest_at_indices", "functional/ivy/nest/map", "functional/ivy/nest/map_nest_at_index", "functional/ivy/nest/map_nest_at_indices", "functional/ivy/nest/multi_index_nest", "functional/ivy/nest/nested_any", "functional/ivy/nest/nested_argwhere", "functional/ivy/nest/nested_map", "functional/ivy/nest/nested_multi_map", "functional/ivy/nest/prune_nest_at_index", "functional/ivy/nest/prune_nest_at_indices", "functional/ivy/nest/set_nest_at_index", "functional/ivy/nest/set_nest_at_indices", "functional/ivy/norms", "functional/ivy/norms/layer_norm", "functional/ivy/norms/layer_norm/layer_norm_array", "functional/ivy/norms/layer_norm/layer_norm_container", "functional/ivy/norms/layer_norm/layer_norm_functional", "functional/ivy/random", "functional/ivy/random/multinomial", "functional/ivy/random/multinomial/multinomial_array", "functional/ivy/random/multinomial/multinomial_container", "functional/ivy/random/multinomial/multinomial_functional", "functional/ivy/random/multinomial/static_multinomial_container", "functional/ivy/random/randint", "functional/ivy/random/randint/randint_array", "functional/ivy/random/randint/randint_container", "functional/ivy/random/randint/randint_functional", "functional/ivy/random/randint/static_randint_container", "functional/ivy/random/random_normal", "functional/ivy/random/random_normal/random_normal_array", "functional/ivy/random/random_normal/random_normal_container", "functional/ivy/random/random_normal/random_normal_functional", "functional/ivy/random/random_normal/static_random_normal_container", "functional/ivy/random/random_uniform", "functional/ivy/random/random_uniform/random_uniform_array", "functional/ivy/random/random_uniform/random_uniform_container", "functional/ivy/random/random_uniform/random_uniform_functional", "functional/ivy/random/random_uniform/static_random_uniform_container", "functional/ivy/random/seed", "functional/ivy/random/shuffle", "functional/ivy/random/shuffle/shuffle_array", "functional/ivy/random/shuffle/shuffle_container", "functional/ivy/random/shuffle/shuffle_functional", "functional/ivy/random/shuffle/static_shuffle_container", "functional/ivy/searching", "functional/ivy/searching/argmax", "functional/ivy/searching/argmax/argmax_array", "functional/ivy/searching/argmax/argmax_container", "functional/ivy/searching/argmax/argmax_functional", "functional/ivy/searching/argmax/static_argmax_container", "functional/ivy/searching/argmin", "functional/ivy/searching/argmin/argmin_array", "functional/ivy/searching/argmin/argmin_container", "functional/ivy/searching/argmin/argmin_functional", "functional/ivy/searching/argmin/static_argmin_container", "functional/ivy/searching/argwhere", "functional/ivy/searching/argwhere/argwhere_array", "functional/ivy/searching/argwhere/argwhere_container", "functional/ivy/searching/argwhere/argwhere_functional", "functional/ivy/searching/argwhere/static_argwhere_container", "functional/ivy/searching/nonzero", "functional/ivy/searching/nonzero/nonzero_array", "functional/ivy/searching/nonzero/nonzero_container", "functional/ivy/searching/nonzero/nonzero_functional", "functional/ivy/searching/nonzero/static_nonzero_container", "functional/ivy/searching/where", "functional/ivy/searching/where/static_where_container", "functional/ivy/searching/where/where_array", "functional/ivy/searching/where/where_container", "functional/ivy/searching/where/where_functional", "functional/ivy/set", "functional/ivy/set/unique_all", "functional/ivy/set/unique_all/static_unique_all_container", "functional/ivy/set/unique_all/unique_all_array", "functional/ivy/set/unique_all/unique_all_container", "functional/ivy/set/unique_all/unique_all_functional", "functional/ivy/set/unique_counts", "functional/ivy/set/unique_counts/static_unique_counts_container", "functional/ivy/set/unique_counts/unique_counts_array", "functional/ivy/set/unique_counts/unique_counts_container", "functional/ivy/set/unique_counts/unique_counts_functional", "functional/ivy/set/unique_inverse", "functional/ivy/set/unique_inverse/static_unique_inverse_container", "functional/ivy/set/unique_inverse/unique_inverse_array", "functional/ivy/set/unique_inverse/unique_inverse_container", "functional/ivy/set/unique_inverse/unique_inverse_functional", "functional/ivy/set/unique_values", "functional/ivy/set/unique_values/static_unique_values_container", "functional/ivy/set/unique_values/unique_values_array", "functional/ivy/set/unique_values/unique_values_container", "functional/ivy/set/unique_values/unique_values_functional", "functional/ivy/sorting", "functional/ivy/sorting/argsort", "functional/ivy/sorting/argsort/argsort_array", "functional/ivy/sorting/argsort/argsort_container", "functional/ivy/sorting/argsort/argsort_functional", "functional/ivy/sorting/argsort/static_argsort_container", "functional/ivy/sorting/searchsorted", "functional/ivy/sorting/searchsorted/searchsorted_array", "functional/ivy/sorting/searchsorted/searchsorted_container", "functional/ivy/sorting/searchsorted/searchsorted_functional", "functional/ivy/sorting/searchsorted/static_searchsorted_container", "functional/ivy/sorting/sort", "functional/ivy/sorting/sort/sort_array", "functional/ivy/sorting/sort/sort_container", "functional/ivy/sorting/sort/sort_functional", "functional/ivy/sorting/sort/static_sort_container", "functional/ivy/statistical", "functional/ivy/statistical/cumprod", "functional/ivy/statistical/cumprod/cumprod_array", "functional/ivy/statistical/cumprod/cumprod_container", "functional/ivy/statistical/cumprod/cumprod_functional", "functional/ivy/statistical/cumprod/static_cumprod_container", "functional/ivy/statistical/cumsum", "functional/ivy/statistical/cumsum/cumsum_array", "functional/ivy/statistical/cumsum/cumsum_container", "functional/ivy/statistical/cumsum/cumsum_functional", "functional/ivy/statistical/cumsum/static_cumsum_container", "functional/ivy/statistical/einsum", "functional/ivy/statistical/einsum/einsum_array", "functional/ivy/statistical/einsum/einsum_container", "functional/ivy/statistical/einsum/einsum_functional", "functional/ivy/statistical/max", "functional/ivy/statistical/max/max_array", "functional/ivy/statistical/max/max_container", "functional/ivy/statistical/max/max_functional", "functional/ivy/statistical/mean", "functional/ivy/statistical/mean/mean_array", "functional/ivy/statistical/mean/mean_container", "functional/ivy/statistical/mean/mean_functional", "functional/ivy/statistical/min", "functional/ivy/statistical/min/min_array", "functional/ivy/statistical/min/min_container", "functional/ivy/statistical/min/min_functional", "functional/ivy/statistical/prod", "functional/ivy/statistical/prod/prod_array", "functional/ivy/statistical/prod/prod_container", "functional/ivy/statistical/prod/prod_functional", "functional/ivy/statistical/prod/static_prod_container", "functional/ivy/statistical/std", "functional/ivy/statistical/std/std_array", "functional/ivy/statistical/std/std_container", "functional/ivy/statistical/std/std_functional", "functional/ivy/statistical/sum", "functional/ivy/statistical/sum/static_sum_container", "functional/ivy/statistical/sum/sum_array", "functional/ivy/statistical/sum/sum_container", "functional/ivy/statistical/sum/sum_functional", "functional/ivy/statistical/var", "functional/ivy/statistical/var/static_var_container", "functional/ivy/statistical/var/var_array", "functional/ivy/statistical/var/var_container", "functional/ivy/statistical/var/var_functional", "functional/ivy/utility", "functional/ivy/utility/all", "functional/ivy/utility/all/all_array", "functional/ivy/utility/all/all_container", "functional/ivy/utility/all/all_functional", "functional/ivy/utility/all/static_all_container", "functional/ivy/utility/any", "functional/ivy/utility/any/any_array", "functional/ivy/utility/any/any_container", "functional/ivy/utility/any/any_functional", "functional/ivy/utility/any/static_any_container", "glossary", "index", "index_append", "index_prepend", "inspection", "inspection/add_array_specs", "inspection/fn_array_spec", "related_work", "related_work/api_standards", "related_work/compiler_infrastructure", "related_work/exchange_formats", "related_work/frameworks", "related_work/graph_tracers", "related_work/ml_unifying_companies", "related_work/multi_vendor_compiler_frameworks", "related_work/vendor_specific_apis", "related_work/vendor_specific_compilers", "related_work/what_does_ivy_add", "related_work/wrapper_frameworks", "stateful", "stateful/activations", "stateful/activations/GEGLU", "stateful/activations/GELU", "stateful/converters", "stateful/converters/to_ivy_module", "stateful/initializers", "stateful/initializers/Constant", "stateful/initializers/FirstLayerSiren", "stateful/initializers/GlorotUniform", "stateful/initializers/Initializer", "stateful/initializers/KaimingNormal", "stateful/initializers/Ones", "stateful/initializers/Siren", "stateful/initializers/Uniform", "stateful/initializers/Zeros", "stateful/layers", "stateful/layers/Conv1D", "stateful/layers/Conv1DTranspose", "stateful/layers/Conv2D", "stateful/layers/Conv2DTranspose", "stateful/layers/Conv3D", "stateful/layers/Conv3DTranspose", "stateful/layers/DepthwiseConv2D", "stateful/layers/Dropout", "stateful/layers/LSTM", "stateful/layers/Linear", "stateful/layers/MultiHeadAttention", "stateful/module", "stateful/module/Module", "stateful/module/MyTFModule", "stateful/module/MyTorchModule", "stateful/norms", "stateful/norms/LayerNorm", "stateful/optimizers", "stateful/optimizers/Adam", "stateful/optimizers/LAMB", "stateful/optimizers/LARS", "stateful/optimizers/Optimizer", "stateful/optimizers/SGD", "stateful/sequential", "stateful/sequential/Sequential", "supported_frameworks", "verbosity", "verbosity/cprint"], "filenames": ["_version.rst", "assertions.rst", "assertions/check_all.rst", "assertions/check_all_or_any_fn.rst", "assertions/check_any.rst", "assertions/check_elem_in_list.rst", "assertions/check_equal.rst", "assertions/check_exists.rst", "assertions/check_false.rst", "assertions/check_fill_value_and_dtype_are_compatible.rst", "assertions/check_gather_input_valid.rst", "assertions/check_gather_nd_input_valid.rst", "assertions/check_greater.rst", "assertions/check_inplace_sizes_valid.rst", "assertions/check_isinstance.rst", "assertions/check_less.rst", "assertions/check_one_way_broadcastable.rst", "assertions/check_shape.rst", "assertions/check_true.rst", "backend_handler.rst", "backend_handler/ContextManager.rst", "backend_handler/choose_random_backend.rst", "backend_handler/clear_backend_stack.rst", "backend_handler/current_backend.rst", "backend_handler/fn_name_from_version_specific_fn_name.rst", "backend_handler/get_backend.rst", "backend_handler/set_backend.rst", "backend_handler/set_backend_to_specific_version.rst", "backend_handler/set_jax_backend.rst", "backend_handler/set_numpy_backend.rst", "backend_handler/set_tensorflow_backend.rst", "backend_handler/set_torch_backend.rst", "backend_handler/unset_backend.rst", "background.rst", "background/ml_explosion.rst", "background/standardization.rst", "background/why_unify.rst", "contributing.rst", "contributing/applied_libraries.rst", "contributing/building_the_docs.rst", "contributing/helpful_resources.rst", "contributing/open_tasks.rst", "contributing/setting_up.rst", "contributing/the_basics.rst", "data_classes.rst", "data_classes/array.rst", "data_classes/array/activations.rst", "data_classes/array/activations/ArrayWithActivations.rst", "data_classes/array/array.rst", "data_classes/array/array/Array.rst", "data_classes/array/conversions.rst", "data_classes/array/conversions/args_to_ivy.rst", "data_classes/array/conversions/args_to_native.rst", "data_classes/array/conversions/to_ivy.rst", "data_classes/array/conversions/to_native.rst", "data_classes/array/creation.rst", "data_classes/array/creation/ArrayWithCreation.rst", "data_classes/array/data_type.rst", "data_classes/array/data_type/ArrayWithDataTypes.rst", "data_classes/array/device.rst", "data_classes/array/device/ArrayWithDevice.rst", "data_classes/array/elementwise.rst", "data_classes/array/elementwise/ArrayWithElementwise.rst", "data_classes/array/experimental.rst", "data_classes/array/general.rst", "data_classes/array/general/ArrayWithGeneral.rst", "data_classes/array/gradients.rst", "data_classes/array/gradients/ArrayWithGradients.rst", "data_classes/array/image.rst", "data_classes/array/image/ArrayWithImage.rst", "data_classes/array/layers.rst", "data_classes/array/layers/ArrayWithLayers.rst", "data_classes/array/linear_algebra.rst", "data_classes/array/linear_algebra/ArrayWithLinearAlgebra.rst", "data_classes/array/losses.rst", "data_classes/array/losses/ArrayWithLosses.rst", "data_classes/array/manipulation.rst", "data_classes/array/manipulation/ArrayWithManipulation.rst", "data_classes/array/norms.rst", "data_classes/array/norms/ArrayWithNorms.rst", "data_classes/array/random.rst", "data_classes/array/random/ArrayWithRandom.rst", "data_classes/array/searching.rst", "data_classes/array/searching/ArrayWithSearching.rst", "data_classes/array/set.rst", "data_classes/array/set/ArrayWithSet.rst", "data_classes/array/sorting.rst", "data_classes/array/sorting/ArrayWithSorting.rst", "data_classes/array/statistical.rst", "data_classes/array/statistical/ArrayWithStatistical.rst", "data_classes/array/utility.rst", "data_classes/array/utility/ArrayWithUtility.rst", "data_classes/array/wrapping.rst", "data_classes/array/wrapping/add_ivy_array_instance_methods.rst", "data_classes/container.rst", "data_classes/container/activations.rst", "data_classes/container/activations/ContainerWithActivations.rst", "data_classes/container/base.rst", "data_classes/container/base/ContainerBase.rst", "data_classes/container/container.rst", "data_classes/container/container/Container.rst", "data_classes/container/conversions.rst", "data_classes/container/conversions/ContainerWithConversions.rst", "data_classes/container/creation.rst", "data_classes/container/creation/ContainerWithCreation.rst", "data_classes/container/data_type.rst", "data_classes/container/data_type/ContainerWithDataTypes.rst", "data_classes/container/device.rst", "data_classes/container/device/ContainerWithDevice.rst", "data_classes/container/elementwise.rst", "data_classes/container/elementwise/ContainerWithElementwise.rst", "data_classes/container/experimental.rst", "data_classes/container/general.rst", "data_classes/container/general/ContainerWithGeneral.rst", "data_classes/container/gradients.rst", "data_classes/container/gradients/ContainerWithGradients.rst", "data_classes/container/image.rst", "data_classes/container/image/ContainerWithImage.rst", "data_classes/container/layers.rst", "data_classes/container/layers/ContainerWithLayers.rst", "data_classes/container/linear_algebra.rst", "data_classes/container/linear_algebra/ContainerWithLinearAlgebra.rst", "data_classes/container/losses.rst", "data_classes/container/losses/ContainerWithLosses.rst", "data_classes/container/manipulation.rst", "data_classes/container/manipulation/ContainerWithManipulation.rst", "data_classes/container/norms.rst", "data_classes/container/norms/ContainerWithNorms.rst", "data_classes/container/random.rst", "data_classes/container/random/ContainerWithRandom.rst", "data_classes/container/searching.rst", "data_classes/container/searching/ContainerWithSearching.rst", "data_classes/container/set.rst", "data_classes/container/set/ContainerWithSet.rst", "data_classes/container/sorting.rst", "data_classes/container/sorting/ContainerWithSorting.rst", "data_classes/container/statistical.rst", "data_classes/container/statistical/ContainerWithStatistical.rst", "data_classes/container/utility.rst", "data_classes/container/utility/ContainerWithUtility.rst", "data_classes/container/wrapping.rst", "data_classes/container/wrapping/add_ivy_container_instance_methods.rst", "deep_dive.rst", "deep_dive/array_api_tests.rst", "deep_dive/arrays.rst", "deep_dive/backend_setting.rst", "deep_dive/containers.rst", "deep_dive/continuous_integration.rst", "deep_dive/data_types.rst", "deep_dive/devices.rst", "deep_dive/docstring_examples.rst", "deep_dive/docstrings.rst", "deep_dive/exception_handling.rst", "deep_dive/formatting.rst", "deep_dive/function_arguments.rst", "deep_dive/function_types.rst", "deep_dive/function_wrapping.rst", "deep_dive/inplace_updates.rst", "deep_dive/ivy_frontends.rst", "deep_dive/ivy_frontends_tests.rst", "deep_dive/ivy_tests.rst", "deep_dive/navigating_the_code.rst", "deep_dive/superset_behaviour.rst", "design.rst", "design/building_blocks.rst", "design/ivy_as_a_framework.rst", "design/ivy_as_a_framework/ivy_array.rst", "design/ivy_as_a_framework/ivy_container.rst", "design/ivy_as_a_framework/ivy_stateful_api.rst", "design/ivy_as_a_transpiler.rst", "docs/ivy.rst", "docs/ivy_builder.rst", "docs/ivy_ecosystem.rst", "docs/ivy_gym.rst", "docs/ivy_mech.rst", "docs/ivy_memory.rst", "docs/ivy_models.rst", "docs/ivy_robot.rst", "docs/ivy_vision.rst", "extensions.rst", "extensions/applied_libraries.rst", "faq.rst", "func_wrapper.rst", "func_wrapper/from_zero_dim_arrays_to_float.rst", "func_wrapper/handle_array_like.rst", "func_wrapper/handle_nans.rst", "func_wrapper/handle_nestable.rst", "func_wrapper/handle_out_argument.rst", "func_wrapper/infer_device.rst", "func_wrapper/infer_dtype.rst", "func_wrapper/inputs_to_ivy_arrays.rst", "func_wrapper/inputs_to_native_arrays.rst", "func_wrapper/integer_arrays_to_float.rst", "func_wrapper/outputs_to_ivy_arrays.rst", "func_wrapper/to_native_arrays_and_back.rst", "functional/ivy.rst", "functional/ivy/activations.rst", "functional/ivy/activations/deserialize.rst", "functional/ivy/activations/gelu.rst", "functional/ivy/activations/gelu/gelu_array.rst", "functional/ivy/activations/gelu/gelu_container.rst", "functional/ivy/activations/gelu/gelu_functional.rst", "functional/ivy/activations/gelu/static_gelu_container.rst", "functional/ivy/activations/get.rst", "functional/ivy/activations/leaky_relu.rst", "functional/ivy/activations/leaky_relu/leaky_relu_array.rst", "functional/ivy/activations/leaky_relu/leaky_relu_container.rst", "functional/ivy/activations/leaky_relu/leaky_relu_functional.rst", "functional/ivy/activations/leaky_relu/static_leaky_relu_container.rst", "functional/ivy/activations/log_softmax.rst", "functional/ivy/activations/log_softmax/log_softmax_array.rst", "functional/ivy/activations/log_softmax/log_softmax_container.rst", "functional/ivy/activations/log_softmax/log_softmax_functional.rst", "functional/ivy/activations/log_softmax/static_log_softmax_container.rst", "functional/ivy/activations/relu.rst", "functional/ivy/activations/relu/relu_array.rst", "functional/ivy/activations/relu/relu_container.rst", "functional/ivy/activations/relu/relu_functional.rst", "functional/ivy/activations/relu/static_relu_container.rst", "functional/ivy/activations/sigmoid.rst", "functional/ivy/activations/sigmoid/sigmoid_array.rst", "functional/ivy/activations/sigmoid/sigmoid_container.rst", "functional/ivy/activations/sigmoid/sigmoid_functional.rst", "functional/ivy/activations/sigmoid/static_sigmoid_container.rst", "functional/ivy/activations/softmax.rst", "functional/ivy/activations/softmax/softmax_array.rst", "functional/ivy/activations/softmax/softmax_container.rst", "functional/ivy/activations/softmax/softmax_functional.rst", "functional/ivy/activations/softmax/static_softmax_container.rst", "functional/ivy/activations/softplus.rst", "functional/ivy/activations/softplus/softplus_array.rst", "functional/ivy/activations/softplus/softplus_container.rst", "functional/ivy/activations/softplus/softplus_functional.rst", "functional/ivy/activations/softplus/static_softplus_container.rst", "functional/ivy/compilation.rst", "functional/ivy/compilation/compile.rst", "functional/ivy/constants.rst", "functional/ivy/creation.rst", "functional/ivy/creation/NestedSequence.rst", "functional/ivy/creation/arange.rst", "functional/ivy/creation/arange/arange_functional.rst", "functional/ivy/creation/arange/static_arange_container.rst", "functional/ivy/creation/asarray.rst", "functional/ivy/creation/asarray/asarray_array.rst", "functional/ivy/creation/asarray/asarray_functional.rst", "functional/ivy/creation/asarray/static_asarray_container.rst", "functional/ivy/creation/asarray_handle_nestable.rst", "functional/ivy/creation/asarray_infer_device.rst", "functional/ivy/creation/asarray_to_native_arrays_and_back.rst", "functional/ivy/creation/copy_array.rst", "functional/ivy/creation/copy_array/copy_array_array.rst", "functional/ivy/creation/copy_array/copy_array_functional.rst", "functional/ivy/creation/empty.rst", "functional/ivy/creation/empty_like.rst", "functional/ivy/creation/empty_like/empty_like_array.rst", "functional/ivy/creation/empty_like/empty_like_container.rst", "functional/ivy/creation/empty_like/empty_like_functional.rst", "functional/ivy/creation/empty_like/static_empty_like_container.rst", "functional/ivy/creation/eye.rst", "functional/ivy/creation/eye/eye_functional.rst", "functional/ivy/creation/eye/static_eye_container.rst", "functional/ivy/creation/from_dlpack.rst", "functional/ivy/creation/from_dlpack/from_dlpack_array.rst", "functional/ivy/creation/from_dlpack/from_dlpack_container.rst", "functional/ivy/creation/from_dlpack/from_dlpack_functional.rst", "functional/ivy/creation/from_dlpack/static_from_dlpack_container.rst", "functional/ivy/creation/full.rst", "functional/ivy/creation/full_like.rst", "functional/ivy/creation/full_like/full_like_array.rst", "functional/ivy/creation/full_like/full_like_container.rst", "functional/ivy/creation/full_like/full_like_functional.rst", "functional/ivy/creation/full_like/static_full_like_container.rst", "functional/ivy/creation/linspace.rst", "functional/ivy/creation/linspace/linspace_array.rst", "functional/ivy/creation/linspace/linspace_container.rst", "functional/ivy/creation/linspace/linspace_functional.rst", "functional/ivy/creation/linspace/static_linspace_container.rst", "functional/ivy/creation/logspace.rst", "functional/ivy/creation/logspace/logspace_functional.rst", "functional/ivy/creation/logspace/static_logspace_container.rst", "functional/ivy/creation/meshgrid.rst", "functional/ivy/creation/meshgrid/meshgrid_array.rst", "functional/ivy/creation/meshgrid/meshgrid_container.rst", "functional/ivy/creation/meshgrid/meshgrid_functional.rst", "functional/ivy/creation/meshgrid/static_meshgrid_container.rst", "functional/ivy/creation/native_array.rst", "functional/ivy/creation/native_array/native_array_array.rst", "functional/ivy/creation/native_array/native_array_container.rst", "functional/ivy/creation/native_array/native_array_functional.rst", "functional/ivy/creation/native_array/static_native_array_container.rst", "functional/ivy/creation/one_hot.rst", "functional/ivy/creation/one_hot/one_hot_array.rst", "functional/ivy/creation/one_hot/one_hot_container.rst", "functional/ivy/creation/one_hot/one_hot_functional.rst", "functional/ivy/creation/one_hot/static_one_hot_container.rst", "functional/ivy/creation/ones.rst", "functional/ivy/creation/ones/ones_functional.rst", "functional/ivy/creation/ones/static_ones_container.rst", "functional/ivy/creation/ones_like.rst", "functional/ivy/creation/ones_like/ones_like_array.rst", "functional/ivy/creation/ones_like/ones_like_container.rst", "functional/ivy/creation/ones_like/ones_like_functional.rst", "functional/ivy/creation/ones_like/static_ones_like_container.rst", "functional/ivy/creation/tril.rst", "functional/ivy/creation/tril/static_tril_container.rst", "functional/ivy/creation/tril/tril_array.rst", "functional/ivy/creation/tril/tril_container.rst", "functional/ivy/creation/tril/tril_functional.rst", "functional/ivy/creation/triu.rst", "functional/ivy/creation/triu/static_triu_container.rst", "functional/ivy/creation/triu/triu_array.rst", "functional/ivy/creation/triu/triu_container.rst", "functional/ivy/creation/triu/triu_functional.rst", "functional/ivy/creation/zeros.rst", "functional/ivy/creation/zeros/static_zeros_container.rst", "functional/ivy/creation/zeros/zeros_functional.rst", "functional/ivy/creation/zeros_like.rst", "functional/ivy/creation/zeros_like/static_zeros_like_container.rst", "functional/ivy/creation/zeros_like/zeros_like_array.rst", "functional/ivy/creation/zeros_like/zeros_like_container.rst", "functional/ivy/creation/zeros_like/zeros_like_functional.rst", "functional/ivy/data_type.rst", "functional/ivy/data_type/DefaultDtype.rst", "functional/ivy/data_type/DefaultFloatDtype.rst", "functional/ivy/data_type/DefaultIntDtype.rst", "functional/ivy/data_type/DefaultUintDtype.rst", "functional/ivy/data_type/as_ivy_dtype.rst", "functional/ivy/data_type/as_native_dtype.rst", "functional/ivy/data_type/astype.rst", "functional/ivy/data_type/astype/astype_array.rst", "functional/ivy/data_type/astype/astype_container.rst", "functional/ivy/data_type/astype/astype_functional.rst", "functional/ivy/data_type/astype/static_astype_container.rst", "functional/ivy/data_type/broadcast_arrays.rst", "functional/ivy/data_type/broadcast_arrays/broadcast_arrays_array.rst", "functional/ivy/data_type/broadcast_arrays/broadcast_arrays_container.rst", "functional/ivy/data_type/broadcast_arrays/broadcast_arrays_functional.rst", "functional/ivy/data_type/broadcast_arrays/static_broadcast_arrays_container.rst", "functional/ivy/data_type/broadcast_to.rst", "functional/ivy/data_type/broadcast_to/broadcast_to_array.rst", "functional/ivy/data_type/broadcast_to/broadcast_to_container.rst", "functional/ivy/data_type/broadcast_to/broadcast_to_functional.rst", "functional/ivy/data_type/broadcast_to/static_broadcast_to_container.rst", "functional/ivy/data_type/can_cast.rst", "functional/ivy/data_type/can_cast/can_cast_array.rst", "functional/ivy/data_type/can_cast/can_cast_container.rst", "functional/ivy/data_type/can_cast/can_cast_functional.rst", "functional/ivy/data_type/can_cast/static_can_cast_container.rst", "functional/ivy/data_type/check_float.rst", "functional/ivy/data_type/closest_valid_dtype.rst", "functional/ivy/data_type/default_dtype.rst", "functional/ivy/data_type/default_float_dtype.rst", "functional/ivy/data_type/default_float_dtype/default_float_dtype_functional.rst", "functional/ivy/data_type/default_float_dtype/static_default_float_dtype_container.rst", "functional/ivy/data_type/default_int_dtype.rst", "functional/ivy/data_type/default_uint_dtype.rst", "functional/ivy/data_type/dtype.rst", "functional/ivy/data_type/dtype/dtype_container.rst", "functional/ivy/data_type/dtype/dtype_functional.rst", "functional/ivy/data_type/dtype/static_dtype_container.rst", "functional/ivy/data_type/dtype_bits.rst", "functional/ivy/data_type/finfo.rst", "functional/ivy/data_type/finfo/finfo_array.rst", "functional/ivy/data_type/finfo/finfo_container.rst", "functional/ivy/data_type/finfo/finfo_functional.rst", "functional/ivy/data_type/finfo/static_finfo_container.rst", "functional/ivy/data_type/function_supported_dtypes.rst", "functional/ivy/data_type/function_supported_dtypes/function_supported_dtypes_functional.rst", "functional/ivy/data_type/function_supported_dtypes/static_function_supported_dtypes_container.rst", "functional/ivy/data_type/function_unsupported_dtypes.rst", "functional/ivy/data_type/function_unsupported_dtypes/function_unsupported_dtypes_functional.rst", "functional/ivy/data_type/function_unsupported_dtypes/static_function_unsupported_dtypes_container.rst", "functional/ivy/data_type/iinfo.rst", "functional/ivy/data_type/iinfo/iinfo_array.rst", "functional/ivy/data_type/iinfo/iinfo_container.rst", "functional/ivy/data_type/iinfo/iinfo_functional.rst", "functional/ivy/data_type/iinfo/static_iinfo_container.rst", "functional/ivy/data_type/infer_default_dtype.rst", "functional/ivy/data_type/invalid_dtype.rst", "functional/ivy/data_type/is_bool_dtype.rst", "functional/ivy/data_type/is_bool_dtype/is_bool_dtype_array.rst", "functional/ivy/data_type/is_bool_dtype/is_bool_dtype_container.rst", "functional/ivy/data_type/is_bool_dtype/is_bool_dtype_functional.rst", "functional/ivy/data_type/is_bool_dtype/static_is_bool_dtype_container.rst", "functional/ivy/data_type/is_float_dtype.rst", "functional/ivy/data_type/is_float_dtype/is_float_dtype_array.rst", "functional/ivy/data_type/is_float_dtype/is_float_dtype_container.rst", "functional/ivy/data_type/is_float_dtype/is_float_dtype_functional.rst", "functional/ivy/data_type/is_float_dtype/static_is_float_dtype_container.rst", "functional/ivy/data_type/is_int_dtype.rst", "functional/ivy/data_type/is_int_dtype/is_int_dtype_array.rst", "functional/ivy/data_type/is_int_dtype/is_int_dtype_container.rst", "functional/ivy/data_type/is_int_dtype/is_int_dtype_functional.rst", "functional/ivy/data_type/is_int_dtype/static_is_int_dtype_container.rst", "functional/ivy/data_type/is_uint_dtype.rst", "functional/ivy/data_type/is_uint_dtype/is_uint_dtype_array.rst", "functional/ivy/data_type/is_uint_dtype/is_uint_dtype_container.rst", "functional/ivy/data_type/is_uint_dtype/is_uint_dtype_functional.rst", "functional/ivy/data_type/is_uint_dtype/static_is_uint_dtype_container.rst", "functional/ivy/data_type/promote_types.rst", "functional/ivy/data_type/promote_types_of_inputs.rst", "functional/ivy/data_type/result_type.rst", "functional/ivy/data_type/result_type/result_type_array.rst", "functional/ivy/data_type/result_type/result_type_container.rst", "functional/ivy/data_type/result_type/result_type_functional.rst", "functional/ivy/data_type/result_type/static_result_type_container.rst", "functional/ivy/data_type/set_default_dtype.rst", "functional/ivy/data_type/set_default_float_dtype.rst", "functional/ivy/data_type/set_default_int_dtype.rst", "functional/ivy/data_type/set_default_uint_dtype.rst", "functional/ivy/data_type/type_promote_arrays.rst", "functional/ivy/data_type/unset_default_dtype.rst", "functional/ivy/data_type/unset_default_float_dtype.rst", "functional/ivy/data_type/unset_default_int_dtype.rst", "functional/ivy/data_type/unset_default_uint_dtype.rst", "functional/ivy/data_type/valid_dtype.rst", "functional/ivy/device.rst", "functional/ivy/device/DefaultDevice.rst", "functional/ivy/device/Profiler.rst", "functional/ivy/device/as_ivy_dev.rst", "functional/ivy/device/as_native_dev.rst", "functional/ivy/device/clear_mem_on_dev.rst", "functional/ivy/device/default_device.rst", "functional/ivy/device/dev.rst", "functional/ivy/device/dev/dev_array.rst", "functional/ivy/device/dev/dev_functional.rst", "functional/ivy/device/dev/static_dev_container.rst", "functional/ivy/device/dev_util.rst", "functional/ivy/device/function_supported_devices.rst", "functional/ivy/device/function_unsupported_devices.rst", "functional/ivy/device/get_all_ivy_arrays_on_dev.rst", "functional/ivy/device/gpu_is_available.rst", "functional/ivy/device/num_cpu_cores.rst", "functional/ivy/device/num_gpus.rst", "functional/ivy/device/num_ivy_arrays_on_dev.rst", "functional/ivy/device/percent_used_mem_on_dev.rst", "functional/ivy/device/print_all_ivy_arrays_on_dev.rst", "functional/ivy/device/set_default_device.rst", "functional/ivy/device/set_split_factor.rst", "functional/ivy/device/split_factor.rst", "functional/ivy/device/split_func_call.rst", "functional/ivy/device/to_device.rst", "functional/ivy/device/to_device/static_to_device_container.rst", "functional/ivy/device/to_device/to_device_array.rst", "functional/ivy/device/to_device/to_device_container.rst", "functional/ivy/device/to_device/to_device_functional.rst", "functional/ivy/device/total_mem_on_dev.rst", "functional/ivy/device/tpu_is_available.rst", "functional/ivy/device/unset_default_device.rst", "functional/ivy/device/used_mem_on_dev.rst", "functional/ivy/elementwise.rst", "functional/ivy/elementwise/abs.rst", "functional/ivy/elementwise/abs/abs_array.rst", "functional/ivy/elementwise/abs/abs_container.rst", "functional/ivy/elementwise/abs/abs_functional.rst", "functional/ivy/elementwise/abs/static_abs_container.rst", "functional/ivy/elementwise/acos.rst", "functional/ivy/elementwise/acos/acos_array.rst", "functional/ivy/elementwise/acos/acos_container.rst", "functional/ivy/elementwise/acos/acos_functional.rst", "functional/ivy/elementwise/acos/static_acos_container.rst", "functional/ivy/elementwise/acosh.rst", "functional/ivy/elementwise/acosh/acosh_array.rst", "functional/ivy/elementwise/acosh/acosh_container.rst", "functional/ivy/elementwise/acosh/acosh_functional.rst", "functional/ivy/elementwise/acosh/static_acosh_container.rst", "functional/ivy/elementwise/add.rst", "functional/ivy/elementwise/add/add_array.rst", "functional/ivy/elementwise/add/add_container.rst", "functional/ivy/elementwise/add/add_functional.rst", "functional/ivy/elementwise/add/static_add_container.rst", "functional/ivy/elementwise/asin.rst", "functional/ivy/elementwise/asin/asin_array.rst", "functional/ivy/elementwise/asin/asin_container.rst", "functional/ivy/elementwise/asin/asin_functional.rst", "functional/ivy/elementwise/asin/static_asin_container.rst", "functional/ivy/elementwise/asinh.rst", "functional/ivy/elementwise/asinh/asinh_array.rst", "functional/ivy/elementwise/asinh/asinh_container.rst", "functional/ivy/elementwise/asinh/asinh_functional.rst", "functional/ivy/elementwise/asinh/static_asinh_container.rst", "functional/ivy/elementwise/atan.rst", "functional/ivy/elementwise/atan/atan_array.rst", "functional/ivy/elementwise/atan/atan_container.rst", "functional/ivy/elementwise/atan/atan_functional.rst", "functional/ivy/elementwise/atan/static_atan_container.rst", "functional/ivy/elementwise/atan2.rst", "functional/ivy/elementwise/atan2/atan2_array.rst", "functional/ivy/elementwise/atan2/atan2_container.rst", "functional/ivy/elementwise/atan2/atan2_functional.rst", "functional/ivy/elementwise/atan2/static_atan2_container.rst", "functional/ivy/elementwise/atanh.rst", "functional/ivy/elementwise/atanh/atanh_array.rst", "functional/ivy/elementwise/atanh/atanh_container.rst", "functional/ivy/elementwise/atanh/atanh_functional.rst", "functional/ivy/elementwise/atanh/static_atanh_container.rst", "functional/ivy/elementwise/bitwise_and.rst", "functional/ivy/elementwise/bitwise_and/bitwise_and_array.rst", "functional/ivy/elementwise/bitwise_and/bitwise_and_container.rst", "functional/ivy/elementwise/bitwise_and/bitwise_and_functional.rst", "functional/ivy/elementwise/bitwise_and/static_bitwise_and_container.rst", "functional/ivy/elementwise/bitwise_invert.rst", "functional/ivy/elementwise/bitwise_invert/bitwise_invert_array.rst", "functional/ivy/elementwise/bitwise_invert/bitwise_invert_container.rst", "functional/ivy/elementwise/bitwise_invert/bitwise_invert_functional.rst", "functional/ivy/elementwise/bitwise_invert/static_bitwise_invert_container.rst", "functional/ivy/elementwise/bitwise_left_shift.rst", "functional/ivy/elementwise/bitwise_left_shift/bitwise_left_shift_array.rst", "functional/ivy/elementwise/bitwise_left_shift/bitwise_left_shift_container.rst", "functional/ivy/elementwise/bitwise_left_shift/bitwise_left_shift_functional.rst", "functional/ivy/elementwise/bitwise_left_shift/static_bitwise_left_shift_container.rst", "functional/ivy/elementwise/bitwise_or.rst", "functional/ivy/elementwise/bitwise_or/bitwise_or_array.rst", "functional/ivy/elementwise/bitwise_or/bitwise_or_container.rst", "functional/ivy/elementwise/bitwise_or/bitwise_or_functional.rst", "functional/ivy/elementwise/bitwise_or/static_bitwise_or_container.rst", "functional/ivy/elementwise/bitwise_right_shift.rst", "functional/ivy/elementwise/bitwise_right_shift/bitwise_right_shift_array.rst", "functional/ivy/elementwise/bitwise_right_shift/bitwise_right_shift_container.rst", "functional/ivy/elementwise/bitwise_right_shift/bitwise_right_shift_functional.rst", "functional/ivy/elementwise/bitwise_right_shift/static_bitwise_right_shift_container.rst", "functional/ivy/elementwise/bitwise_xor.rst", "functional/ivy/elementwise/bitwise_xor/bitwise_xor_array.rst", "functional/ivy/elementwise/bitwise_xor/bitwise_xor_container.rst", "functional/ivy/elementwise/bitwise_xor/bitwise_xor_functional.rst", "functional/ivy/elementwise/bitwise_xor/static_bitwise_xor_container.rst", "functional/ivy/elementwise/ceil.rst", "functional/ivy/elementwise/ceil/ceil_array.rst", "functional/ivy/elementwise/ceil/ceil_container.rst", "functional/ivy/elementwise/ceil/ceil_functional.rst", "functional/ivy/elementwise/ceil/static_ceil_container.rst", "functional/ivy/elementwise/cos.rst", "functional/ivy/elementwise/cos/cos_array.rst", "functional/ivy/elementwise/cos/cos_container.rst", "functional/ivy/elementwise/cos/cos_functional.rst", "functional/ivy/elementwise/cos/static_cos_container.rst", "functional/ivy/elementwise/cosh.rst", "functional/ivy/elementwise/cosh/cosh_array.rst", "functional/ivy/elementwise/cosh/cosh_container.rst", "functional/ivy/elementwise/cosh/cosh_functional.rst", "functional/ivy/elementwise/cosh/static_cosh_container.rst", "functional/ivy/elementwise/deg2rad.rst", "functional/ivy/elementwise/deg2rad/deg2rad_array.rst", "functional/ivy/elementwise/deg2rad/deg2rad_container.rst", "functional/ivy/elementwise/deg2rad/deg2rad_functional.rst", "functional/ivy/elementwise/deg2rad/static_deg2rad_container.rst", "functional/ivy/elementwise/divide.rst", "functional/ivy/elementwise/divide/divide_array.rst", "functional/ivy/elementwise/divide/divide_container.rst", "functional/ivy/elementwise/divide/divide_functional.rst", "functional/ivy/elementwise/divide/static_divide_container.rst", "functional/ivy/elementwise/equal.rst", "functional/ivy/elementwise/equal/equal_array.rst", "functional/ivy/elementwise/equal/equal_container.rst", "functional/ivy/elementwise/equal/equal_functional.rst", "functional/ivy/elementwise/equal/static_equal_container.rst", "functional/ivy/elementwise/erf.rst", "functional/ivy/elementwise/erf/erf_array.rst", "functional/ivy/elementwise/erf/erf_container.rst", "functional/ivy/elementwise/erf/erf_functional.rst", "functional/ivy/elementwise/erf/static_erf_container.rst", "functional/ivy/elementwise/exp.rst", "functional/ivy/elementwise/exp/exp_array.rst", "functional/ivy/elementwise/exp/exp_container.rst", "functional/ivy/elementwise/exp/exp_functional.rst", "functional/ivy/elementwise/exp/static_exp_container.rst", "functional/ivy/elementwise/expm1.rst", "functional/ivy/elementwise/expm1/expm1_array.rst", "functional/ivy/elementwise/expm1/expm1_container.rst", "functional/ivy/elementwise/expm1/expm1_functional.rst", "functional/ivy/elementwise/expm1/static_expm1_container.rst", "functional/ivy/elementwise/floor.rst", "functional/ivy/elementwise/floor/floor_array.rst", "functional/ivy/elementwise/floor/floor_container.rst", "functional/ivy/elementwise/floor/floor_functional.rst", "functional/ivy/elementwise/floor/static_floor_container.rst", "functional/ivy/elementwise/floor_divide.rst", "functional/ivy/elementwise/floor_divide/floor_divide_array.rst", "functional/ivy/elementwise/floor_divide/floor_divide_container.rst", "functional/ivy/elementwise/floor_divide/floor_divide_functional.rst", "functional/ivy/elementwise/floor_divide/static_floor_divide_container.rst", "functional/ivy/elementwise/greater.rst", "functional/ivy/elementwise/greater/greater_array.rst", "functional/ivy/elementwise/greater/greater_container.rst", "functional/ivy/elementwise/greater/greater_functional.rst", "functional/ivy/elementwise/greater/static_greater_container.rst", "functional/ivy/elementwise/greater_equal.rst", "functional/ivy/elementwise/greater_equal/greater_equal_array.rst", "functional/ivy/elementwise/greater_equal/greater_equal_container.rst", "functional/ivy/elementwise/greater_equal/greater_equal_functional.rst", "functional/ivy/elementwise/greater_equal/static_greater_equal_container.rst", "functional/ivy/elementwise/isfinite.rst", "functional/ivy/elementwise/isfinite/isfinite_array.rst", "functional/ivy/elementwise/isfinite/isfinite_container.rst", "functional/ivy/elementwise/isfinite/isfinite_functional.rst", "functional/ivy/elementwise/isfinite/static_isfinite_container.rst", "functional/ivy/elementwise/isinf.rst", "functional/ivy/elementwise/isinf/isinf_array.rst", "functional/ivy/elementwise/isinf/isinf_container.rst", "functional/ivy/elementwise/isinf/isinf_functional.rst", "functional/ivy/elementwise/isinf/static_isinf_container.rst", "functional/ivy/elementwise/isnan.rst", "functional/ivy/elementwise/isnan/isnan_array.rst", "functional/ivy/elementwise/isnan/isnan_container.rst", "functional/ivy/elementwise/isnan/isnan_functional.rst", "functional/ivy/elementwise/isnan/static_isnan_container.rst", "functional/ivy/elementwise/isreal.rst", "functional/ivy/elementwise/isreal/isreal_array.rst", "functional/ivy/elementwise/isreal/isreal_container.rst", "functional/ivy/elementwise/isreal/isreal_functional.rst", "functional/ivy/elementwise/isreal/static_isreal_container.rst", "functional/ivy/elementwise/less.rst", "functional/ivy/elementwise/less/less_array.rst", "functional/ivy/elementwise/less/less_container.rst", "functional/ivy/elementwise/less/less_functional.rst", "functional/ivy/elementwise/less/static_less_container.rst", "functional/ivy/elementwise/less_equal.rst", "functional/ivy/elementwise/less_equal/less_equal_array.rst", "functional/ivy/elementwise/less_equal/less_equal_container.rst", "functional/ivy/elementwise/less_equal/less_equal_functional.rst", "functional/ivy/elementwise/less_equal/static_less_equal_container.rst", "functional/ivy/elementwise/log.rst", "functional/ivy/elementwise/log/log_array.rst", "functional/ivy/elementwise/log/log_container.rst", "functional/ivy/elementwise/log/log_functional.rst", "functional/ivy/elementwise/log/static_log_container.rst", "functional/ivy/elementwise/log10.rst", "functional/ivy/elementwise/log10/log10_array.rst", "functional/ivy/elementwise/log10/log10_container.rst", "functional/ivy/elementwise/log10/log10_functional.rst", "functional/ivy/elementwise/log10/static_log10_container.rst", "functional/ivy/elementwise/log1p.rst", "functional/ivy/elementwise/log1p/log1p_array.rst", "functional/ivy/elementwise/log1p/log1p_container.rst", "functional/ivy/elementwise/log1p/log1p_functional.rst", "functional/ivy/elementwise/log1p/static_log1p_container.rst", "functional/ivy/elementwise/log2.rst", "functional/ivy/elementwise/log2/log2_array.rst", "functional/ivy/elementwise/log2/log2_container.rst", "functional/ivy/elementwise/log2/log2_functional.rst", "functional/ivy/elementwise/log2/static_log2_container.rst", "functional/ivy/elementwise/logaddexp.rst", "functional/ivy/elementwise/logaddexp/logaddexp_array.rst", "functional/ivy/elementwise/logaddexp/logaddexp_container.rst", "functional/ivy/elementwise/logaddexp/logaddexp_functional.rst", "functional/ivy/elementwise/logaddexp/static_logaddexp_container.rst", "functional/ivy/elementwise/logical_and.rst", "functional/ivy/elementwise/logical_and/logical_and_array.rst", "functional/ivy/elementwise/logical_and/logical_and_container.rst", "functional/ivy/elementwise/logical_and/logical_and_functional.rst", "functional/ivy/elementwise/logical_and/static_logical_and_container.rst", "functional/ivy/elementwise/logical_not.rst", "functional/ivy/elementwise/logical_not/logical_not_array.rst", "functional/ivy/elementwise/logical_not/logical_not_container.rst", "functional/ivy/elementwise/logical_not/logical_not_functional.rst", "functional/ivy/elementwise/logical_not/static_logical_not_container.rst", "functional/ivy/elementwise/logical_or.rst", "functional/ivy/elementwise/logical_or/logical_or_array.rst", "functional/ivy/elementwise/logical_or/logical_or_container.rst", "functional/ivy/elementwise/logical_or/logical_or_functional.rst", "functional/ivy/elementwise/logical_or/static_logical_or_container.rst", "functional/ivy/elementwise/logical_xor.rst", "functional/ivy/elementwise/logical_xor/logical_xor_array.rst", "functional/ivy/elementwise/logical_xor/logical_xor_container.rst", "functional/ivy/elementwise/logical_xor/logical_xor_functional.rst", "functional/ivy/elementwise/logical_xor/static_logical_xor_container.rst", "functional/ivy/elementwise/maximum.rst", "functional/ivy/elementwise/maximum/maximum_array.rst", "functional/ivy/elementwise/maximum/maximum_container.rst", "functional/ivy/elementwise/maximum/maximum_functional.rst", "functional/ivy/elementwise/maximum/static_maximum_container.rst", "functional/ivy/elementwise/minimum.rst", "functional/ivy/elementwise/minimum/minimum_array.rst", "functional/ivy/elementwise/minimum/minimum_container.rst", "functional/ivy/elementwise/minimum/minimum_functional.rst", "functional/ivy/elementwise/minimum/static_minimum_container.rst", "functional/ivy/elementwise/multiply.rst", "functional/ivy/elementwise/multiply/multiply_array.rst", "functional/ivy/elementwise/multiply/multiply_container.rst", "functional/ivy/elementwise/multiply/multiply_functional.rst", "functional/ivy/elementwise/multiply/static_multiply_container.rst", "functional/ivy/elementwise/negative.rst", "functional/ivy/elementwise/negative/negative_array.rst", "functional/ivy/elementwise/negative/negative_container.rst", "functional/ivy/elementwise/negative/negative_functional.rst", "functional/ivy/elementwise/negative/static_negative_container.rst", "functional/ivy/elementwise/not_equal.rst", "functional/ivy/elementwise/not_equal/not_equal_array.rst", "functional/ivy/elementwise/not_equal/not_equal_container.rst", "functional/ivy/elementwise/not_equal/not_equal_functional.rst", "functional/ivy/elementwise/not_equal/static_not_equal_container.rst", "functional/ivy/elementwise/positive.rst", "functional/ivy/elementwise/positive/positive_array.rst", "functional/ivy/elementwise/positive/positive_container.rst", "functional/ivy/elementwise/positive/positive_functional.rst", "functional/ivy/elementwise/positive/static_positive_container.rst", "functional/ivy/elementwise/pow.rst", "functional/ivy/elementwise/pow/pow_array.rst", "functional/ivy/elementwise/pow/pow_container.rst", "functional/ivy/elementwise/pow/pow_functional.rst", "functional/ivy/elementwise/pow/static_pow_container.rst", "functional/ivy/elementwise/rad2deg.rst", "functional/ivy/elementwise/rad2deg/rad2deg_array.rst", "functional/ivy/elementwise/rad2deg/rad2deg_container.rst", "functional/ivy/elementwise/rad2deg/rad2deg_functional.rst", "functional/ivy/elementwise/rad2deg/static_rad2deg_container.rst", "functional/ivy/elementwise/reciprocal.rst", "functional/ivy/elementwise/reciprocal/reciprocal_array.rst", "functional/ivy/elementwise/reciprocal/reciprocal_container.rst", "functional/ivy/elementwise/reciprocal/reciprocal_functional.rst", "functional/ivy/elementwise/reciprocal/static_reciprocal_container.rst", "functional/ivy/elementwise/remainder.rst", "functional/ivy/elementwise/remainder/remainder_array.rst", "functional/ivy/elementwise/remainder/remainder_container.rst", "functional/ivy/elementwise/remainder/remainder_functional.rst", "functional/ivy/elementwise/remainder/static_remainder_container.rst", "functional/ivy/elementwise/round.rst", "functional/ivy/elementwise/round/round_array.rst", "functional/ivy/elementwise/round/round_container.rst", "functional/ivy/elementwise/round/round_functional.rst", "functional/ivy/elementwise/round/static_round_container.rst", "functional/ivy/elementwise/sign.rst", "functional/ivy/elementwise/sign/sign_array.rst", "functional/ivy/elementwise/sign/sign_container.rst", "functional/ivy/elementwise/sign/sign_functional.rst", "functional/ivy/elementwise/sign/static_sign_container.rst", "functional/ivy/elementwise/sin.rst", "functional/ivy/elementwise/sin/sin_array.rst", "functional/ivy/elementwise/sin/sin_container.rst", "functional/ivy/elementwise/sin/sin_functional.rst", "functional/ivy/elementwise/sin/static_sin_container.rst", "functional/ivy/elementwise/sinh.rst", "functional/ivy/elementwise/sinh/sinh_array.rst", "functional/ivy/elementwise/sinh/sinh_container.rst", "functional/ivy/elementwise/sinh/sinh_functional.rst", "functional/ivy/elementwise/sinh/static_sinh_container.rst", "functional/ivy/elementwise/sqrt.rst", "functional/ivy/elementwise/sqrt/sqrt_array.rst", "functional/ivy/elementwise/sqrt/sqrt_container.rst", "functional/ivy/elementwise/sqrt/sqrt_functional.rst", "functional/ivy/elementwise/sqrt/static_sqrt_container.rst", "functional/ivy/elementwise/square.rst", "functional/ivy/elementwise/square/square_array.rst", "functional/ivy/elementwise/square/square_container.rst", "functional/ivy/elementwise/square/square_functional.rst", "functional/ivy/elementwise/square/static_square_container.rst", "functional/ivy/elementwise/subtract.rst", "functional/ivy/elementwise/subtract/static_subtract_container.rst", "functional/ivy/elementwise/subtract/subtract_array.rst", "functional/ivy/elementwise/subtract/subtract_container.rst", "functional/ivy/elementwise/subtract/subtract_functional.rst", "functional/ivy/elementwise/tan.rst", "functional/ivy/elementwise/tan/static_tan_container.rst", "functional/ivy/elementwise/tan/tan_array.rst", "functional/ivy/elementwise/tan/tan_container.rst", "functional/ivy/elementwise/tan/tan_functional.rst", "functional/ivy/elementwise/tanh.rst", "functional/ivy/elementwise/tanh/static_tanh_container.rst", "functional/ivy/elementwise/tanh/tanh_array.rst", "functional/ivy/elementwise/tanh/tanh_container.rst", "functional/ivy/elementwise/tanh/tanh_functional.rst", "functional/ivy/elementwise/trunc.rst", "functional/ivy/elementwise/trunc/static_trunc_container.rst", "functional/ivy/elementwise/trunc/trunc_array.rst", "functional/ivy/elementwise/trunc/trunc_container.rst", "functional/ivy/elementwise/trunc/trunc_functional.rst", "functional/ivy/elementwise/trunc_divide.rst", "functional/ivy/elementwise/trunc_divide/static_trunc_divide_container.rst", "functional/ivy/elementwise/trunc_divide/trunc_divide_array.rst", "functional/ivy/elementwise/trunc_divide/trunc_divide_container.rst", "functional/ivy/elementwise/trunc_divide/trunc_divide_functional.rst", "functional/ivy/experimental.rst", "functional/ivy/experimental/NativeSparseArray.rst", "functional/ivy/experimental/SparseArray.rst", "functional/ivy/experimental/allclose.rst", "functional/ivy/experimental/allclose/allclose_array.rst", "functional/ivy/experimental/allclose/allclose_container.rst", "functional/ivy/experimental/allclose/allclose_functional.rst", "functional/ivy/experimental/allclose/static_allclose_container.rst", "functional/ivy/experimental/atleast_1d.rst", "functional/ivy/experimental/atleast_1d/atleast_1d_array.rst", "functional/ivy/experimental/atleast_1d/atleast_1d_container.rst", "functional/ivy/experimental/atleast_1d/atleast_1d_functional.rst", "functional/ivy/experimental/atleast_1d/static_atleast_1d_container.rst", "functional/ivy/experimental/atleast_2d.rst", "functional/ivy/experimental/atleast_2d/atleast_2d_array.rst", "functional/ivy/experimental/atleast_2d/atleast_2d_container.rst", "functional/ivy/experimental/atleast_2d/atleast_2d_functional.rst", "functional/ivy/experimental/atleast_2d/static_atleast_2d_container.rst", "functional/ivy/experimental/atleast_3d.rst", "functional/ivy/experimental/atleast_3d/atleast_3d_array.rst", "functional/ivy/experimental/atleast_3d/atleast_3d_container.rst", "functional/ivy/experimental/atleast_3d/atleast_3d_functional.rst", "functional/ivy/experimental/atleast_3d/static_atleast_3d_container.rst", "functional/ivy/experimental/avg_pool1d.rst", "functional/ivy/experimental/avg_pool1d/avg_pool1d_array.rst", "functional/ivy/experimental/avg_pool1d/avg_pool1d_container.rst", "functional/ivy/experimental/avg_pool1d/avg_pool1d_functional.rst", "functional/ivy/experimental/avg_pool1d/static_avg_pool1d_container.rst", "functional/ivy/experimental/avg_pool2d.rst", "functional/ivy/experimental/avg_pool2d/avg_pool2d_array.rst", "functional/ivy/experimental/avg_pool2d/avg_pool2d_container.rst", "functional/ivy/experimental/avg_pool2d/avg_pool2d_functional.rst", "functional/ivy/experimental/avg_pool2d/static_avg_pool2d_container.rst", "functional/ivy/experimental/avg_pool3d.rst", "functional/ivy/experimental/avg_pool3d/avg_pool3d_array.rst", "functional/ivy/experimental/avg_pool3d/avg_pool3d_container.rst", "functional/ivy/experimental/avg_pool3d/avg_pool3d_functional.rst", "functional/ivy/experimental/avg_pool3d/static_avg_pool3d_container.rst", "functional/ivy/experimental/beta.rst", "functional/ivy/experimental/count_nonzero.rst", "functional/ivy/experimental/count_nonzero/count_nonzero_array.rst", "functional/ivy/experimental/count_nonzero/count_nonzero_container.rst", "functional/ivy/experimental/count_nonzero/count_nonzero_functional.rst", "functional/ivy/experimental/count_nonzero/static_count_nonzero_container.rst", "functional/ivy/experimental/dct.rst", "functional/ivy/experimental/dct/dct_array.rst", "functional/ivy/experimental/dct/dct_container.rst", "functional/ivy/experimental/dct/dct_functional.rst", "functional/ivy/experimental/dct/static_dct_container.rst", "functional/ivy/experimental/diagflat.rst", "functional/ivy/experimental/diagflat/diagflat_array.rst", "functional/ivy/experimental/diagflat/diagflat_container.rst", "functional/ivy/experimental/diagflat/diagflat_functional.rst", "functional/ivy/experimental/diagflat/static_diagflat_container.rst", "functional/ivy/experimental/diff.rst", "functional/ivy/experimental/diff/diff_array.rst", "functional/ivy/experimental/diff/diff_functional.rst", "functional/ivy/experimental/diff/static_diff_container.rst", "functional/ivy/experimental/dirichlet.rst", "functional/ivy/experimental/dirichlet/dirichlet_array.rst", "functional/ivy/experimental/dirichlet/dirichlet_container.rst", "functional/ivy/experimental/dirichlet/dirichlet_functional.rst", "functional/ivy/experimental/dirichlet/static_dirichlet_container.rst", "functional/ivy/experimental/dsplit.rst", "functional/ivy/experimental/dsplit/dsplit_array.rst", "functional/ivy/experimental/dsplit/dsplit_container.rst", "functional/ivy/experimental/dsplit/dsplit_functional.rst", "functional/ivy/experimental/dsplit/static_dsplit_container.rst", "functional/ivy/experimental/dstack.rst", "functional/ivy/experimental/dstack/dstack_array.rst", "functional/ivy/experimental/dstack/dstack_container.rst", "functional/ivy/experimental/dstack/dstack_functional.rst", "functional/ivy/experimental/dstack/static_dstack_container.rst", "functional/ivy/experimental/exp2.rst", "functional/ivy/experimental/exp2/exp2_array.rst", "functional/ivy/experimental/exp2/exp2_container.rst", "functional/ivy/experimental/exp2/exp2_functional.rst", "functional/ivy/experimental/exp2/static_exp2_container.rst", "functional/ivy/experimental/fft.rst", "functional/ivy/experimental/fix.rst", "functional/ivy/experimental/fix/fix_array.rst", "functional/ivy/experimental/fix/fix_container.rst", "functional/ivy/experimental/fix/fix_functional.rst", "functional/ivy/experimental/fix/static_fix_container.rst", "functional/ivy/experimental/flatten.rst", "functional/ivy/experimental/flatten/flatten_array.rst", "functional/ivy/experimental/flatten/flatten_container.rst", "functional/ivy/experimental/flatten/flatten_functional.rst", "functional/ivy/experimental/flatten/static_flatten_container.rst", "functional/ivy/experimental/fliplr.rst", "functional/ivy/experimental/fliplr/fliplr_array.rst", "functional/ivy/experimental/fliplr/fliplr_container.rst", "functional/ivy/experimental/fliplr/fliplr_functional.rst", "functional/ivy/experimental/fliplr/static_fliplr_container.rst", "functional/ivy/experimental/flipud.rst", "functional/ivy/experimental/flipud/flipud_array.rst", "functional/ivy/experimental/flipud/flipud_container.rst", "functional/ivy/experimental/flipud/flipud_functional.rst", "functional/ivy/experimental/flipud/static_flipud_container.rst", "functional/ivy/experimental/float_power.rst", "functional/ivy/experimental/float_power/float_power_array.rst", "functional/ivy/experimental/float_power/float_power_container.rst", "functional/ivy/experimental/float_power/float_power_functional.rst", "functional/ivy/experimental/float_power/static_float_power_container.rst", "functional/ivy/experimental/fmax.rst", "functional/ivy/experimental/fmax/fmax_array.rst", "functional/ivy/experimental/fmax/fmax_container.rst", "functional/ivy/experimental/fmax/fmax_functional.rst", "functional/ivy/experimental/fmax/static_fmax_container.rst", "functional/ivy/experimental/fmod.rst", "functional/ivy/experimental/fmod/fmod_array.rst", "functional/ivy/experimental/fmod/fmod_container.rst", "functional/ivy/experimental/fmod/fmod_functional.rst", "functional/ivy/experimental/fmod/static_fmod_container.rst", "functional/ivy/experimental/gamma.rst", "functional/ivy/experimental/gcd.rst", "functional/ivy/experimental/gcd/gcd_array.rst", "functional/ivy/experimental/gcd/gcd_container.rst", "functional/ivy/experimental/gcd/gcd_functional.rst", "functional/ivy/experimental/gcd/static_gcd_container.rst", "functional/ivy/experimental/gradient.rst", "functional/ivy/experimental/gradient/gradient_array.rst", "functional/ivy/experimental/gradient/gradient_container.rst", "functional/ivy/experimental/gradient/gradient_functional.rst", "functional/ivy/experimental/gradient/static_gradient_container.rst", "functional/ivy/experimental/hamming_window.rst", "functional/ivy/experimental/hamming_window/hamming_window_container.rst", "functional/ivy/experimental/hamming_window/hamming_window_functional.rst", "functional/ivy/experimental/hamming_window/static_hamming_window_container.rst", "functional/ivy/experimental/hann_window.rst", "functional/ivy/experimental/hann_window/hann_window_container.rst", "functional/ivy/experimental/hann_window/hann_window_functional.rst", "functional/ivy/experimental/hann_window/static_hann_window_container.rst", "functional/ivy/experimental/heaviside.rst", "functional/ivy/experimental/heaviside/heaviside_array.rst", "functional/ivy/experimental/heaviside/heaviside_container.rst", "functional/ivy/experimental/heaviside/heaviside_functional.rst", "functional/ivy/experimental/heaviside/static_heaviside_container.rst", "functional/ivy/experimental/hsplit.rst", "functional/ivy/experimental/hsplit/hsplit_array.rst", "functional/ivy/experimental/hsplit/hsplit_container.rst", "functional/ivy/experimental/hsplit/hsplit_functional.rst", "functional/ivy/experimental/hsplit/static_hsplit_container.rst", "functional/ivy/experimental/hstack.rst", "functional/ivy/experimental/hstack/hstack_array.rst", "functional/ivy/experimental/hstack/hstack_container.rst", "functional/ivy/experimental/hstack/hstack_functional.rst", "functional/ivy/experimental/hstack/static_hstack_container.rst", "functional/ivy/experimental/i0.rst", "functional/ivy/experimental/i0/i0_array.rst", "functional/ivy/experimental/i0/i0_container.rst", "functional/ivy/experimental/i0/i0_functional.rst", "functional/ivy/experimental/i0/static_i0_container.rst", "functional/ivy/experimental/is_ivy_sparse_array.rst", "functional/ivy/experimental/is_native_sparse_array.rst", "functional/ivy/experimental/isclose.rst", "functional/ivy/experimental/isclose/isclose_array.rst", "functional/ivy/experimental/isclose/isclose_container.rst", "functional/ivy/experimental/isclose/isclose_functional.rst", "functional/ivy/experimental/isclose/static_isclose_container.rst", "functional/ivy/experimental/isin.rst", "functional/ivy/experimental/isin/isin_array.rst", "functional/ivy/experimental/isin/isin_container.rst", "functional/ivy/experimental/isin/isin_functional.rst", "functional/ivy/experimental/isin/static_isin_container.rst", "functional/ivy/experimental/isneginf.rst", "functional/ivy/experimental/isneginf/isneginf_array.rst", "functional/ivy/experimental/isneginf/isneginf_container.rst", "functional/ivy/experimental/isneginf/isneginf_functional.rst", "functional/ivy/experimental/isneginf/static_isneginf_container.rst", "functional/ivy/experimental/isposinf.rst", "functional/ivy/experimental/isposinf/isposinf_array.rst", "functional/ivy/experimental/isposinf/isposinf_container.rst", "functional/ivy/experimental/isposinf/isposinf_functional.rst", "functional/ivy/experimental/isposinf/static_isposinf_container.rst", "functional/ivy/experimental/kaiser_bessel_derived_window.rst", "functional/ivy/experimental/kaiser_bessel_derived_window/kaiser_bessel_derived_window_container.rst", "functional/ivy/experimental/kaiser_bessel_derived_window/kaiser_bessel_derived_window_functional.rst", "functional/ivy/experimental/kaiser_bessel_derived_window/static_kaiser_bessel_derived_window_container.rst", "functional/ivy/experimental/kaiser_window.rst", "functional/ivy/experimental/kaiser_window/kaiser_window_container.rst", "functional/ivy/experimental/kaiser_window/kaiser_window_functional.rst", "functional/ivy/experimental/kaiser_window/static_kaiser_window_container.rst", "functional/ivy/experimental/kron.rst", "functional/ivy/experimental/kron/kron_array.rst", "functional/ivy/experimental/kron/kron_container.rst", "functional/ivy/experimental/kron/kron_functional.rst", "functional/ivy/experimental/kron/static_kron_container.rst", "functional/ivy/experimental/lcm.rst", "functional/ivy/experimental/lcm/lcm_array.rst", "functional/ivy/experimental/lcm/lcm_container.rst", "functional/ivy/experimental/lcm/lcm_functional.rst", "functional/ivy/experimental/lcm/static_lcm_container.rst", "functional/ivy/experimental/logaddexp2.rst", "functional/ivy/experimental/logaddexp2/logaddexp2_array.rst", "functional/ivy/experimental/logaddexp2/logaddexp2_container.rst", "functional/ivy/experimental/logaddexp2/logaddexp2_functional.rst", "functional/ivy/experimental/logaddexp2/static_logaddexp2_container.rst", "functional/ivy/experimental/max_pool1d.rst", "functional/ivy/experimental/max_pool1d/max_pool1d_array.rst", "functional/ivy/experimental/max_pool1d/max_pool1d_container.rst", "functional/ivy/experimental/max_pool1d/max_pool1d_functional.rst", "functional/ivy/experimental/max_pool1d/static_max_pool1d_container.rst", "functional/ivy/experimental/max_pool2d.rst", "functional/ivy/experimental/max_pool2d/max_pool2d_array.rst", "functional/ivy/experimental/max_pool2d/max_pool2d_container.rst", "functional/ivy/experimental/max_pool2d/max_pool2d_functional.rst", "functional/ivy/experimental/max_pool2d/static_max_pool2d_container.rst", "functional/ivy/experimental/max_pool3d.rst", "functional/ivy/experimental/max_pool3d/max_pool3d_array.rst", "functional/ivy/experimental/max_pool3d/max_pool3d_container.rst", "functional/ivy/experimental/max_pool3d/max_pool3d_functional.rst", "functional/ivy/experimental/max_pool3d/static_max_pool3d_container.rst", "functional/ivy/experimental/median.rst", "functional/ivy/experimental/median/median_array.rst", "functional/ivy/experimental/median/median_container.rst", "functional/ivy/experimental/median/median_functional.rst", "functional/ivy/experimental/median/static_median_container.rst", "functional/ivy/experimental/moveaxis.rst", "functional/ivy/experimental/moveaxis/moveaxis_array.rst", "functional/ivy/experimental/moveaxis/moveaxis_container.rst", "functional/ivy/experimental/moveaxis/moveaxis_functional.rst", "functional/ivy/experimental/moveaxis/static_moveaxis_container.rst", "functional/ivy/experimental/msort.rst", "functional/ivy/experimental/msort/msort_array.rst", "functional/ivy/experimental/msort/msort_container.rst", "functional/ivy/experimental/msort/msort_functional.rst", "functional/ivy/experimental/msort/static_msort_container.rst", "functional/ivy/experimental/nan_to_num.rst", "functional/ivy/experimental/nan_to_num/nan_to_num_array.rst", "functional/ivy/experimental/nan_to_num/nan_to_num_container.rst", "functional/ivy/experimental/nan_to_num/nan_to_num_functional.rst", "functional/ivy/experimental/nan_to_num/static_nan_to_num_container.rst", "functional/ivy/experimental/nanmean.rst", "functional/ivy/experimental/nanmean/nanmean_array.rst", "functional/ivy/experimental/nanmean/nanmean_container.rst", "functional/ivy/experimental/nanmean/nanmean_functional.rst", "functional/ivy/experimental/nanmean/static_nanmean_container.rst", "functional/ivy/experimental/nansum.rst", "functional/ivy/experimental/nansum/nansum_array.rst", "functional/ivy/experimental/nansum/nansum_container.rst", "functional/ivy/experimental/nansum/nansum_functional.rst", "functional/ivy/experimental/nansum/static_nansum_container.rst", "functional/ivy/experimental/native_sparse_array.rst", "functional/ivy/experimental/native_sparse_array_to_indices_values_and_shape.rst", "functional/ivy/experimental/ndenumerate.rst", "functional/ivy/experimental/ndindex.rst", "functional/ivy/experimental/nextafter.rst", "functional/ivy/experimental/nextafter/nextafter_array.rst", "functional/ivy/experimental/nextafter/nextafter_container.rst", "functional/ivy/experimental/nextafter/nextafter_functional.rst", "functional/ivy/experimental/nextafter/static_nextafter_container.rst", "functional/ivy/experimental/pad.rst", "functional/ivy/experimental/pad/pad_array.rst", "functional/ivy/experimental/pad/pad_container.rst", "functional/ivy/experimental/pad/pad_functional.rst", "functional/ivy/experimental/pad/static_pad_container.rst", "functional/ivy/experimental/quantile.rst", "functional/ivy/experimental/quantile/quantile_array.rst", "functional/ivy/experimental/quantile/quantile_container.rst", "functional/ivy/experimental/quantile/quantile_functional.rst", "functional/ivy/experimental/quantile/static_quantile_container.rst", "functional/ivy/experimental/rot90.rst", "functional/ivy/experimental/rot90/rot90_array.rst", "functional/ivy/experimental/rot90/rot90_container.rst", "functional/ivy/experimental/rot90/rot90_functional.rst", "functional/ivy/experimental/rot90/static_rot90_container.rst", "functional/ivy/experimental/signbit.rst", "functional/ivy/experimental/signbit/signbit_array.rst", "functional/ivy/experimental/signbit/signbit_container.rst", "functional/ivy/experimental/signbit/signbit_functional.rst", "functional/ivy/experimental/signbit/static_signbit_container.rst", "functional/ivy/experimental/sinc.rst", "functional/ivy/experimental/sinc/sinc_array.rst", "functional/ivy/experimental/sinc/sinc_container.rst", "functional/ivy/experimental/sinc/sinc_functional.rst", "functional/ivy/experimental/sinc/static_sinc_container.rst", "functional/ivy/experimental/take_along_axis.rst", "functional/ivy/experimental/take_along_axis/static_take_along_axis_container.rst", "functional/ivy/experimental/take_along_axis/take_along_axis_array.rst", "functional/ivy/experimental/take_along_axis/take_along_axis_container.rst", "functional/ivy/experimental/take_along_axis/take_along_axis_functional.rst", "functional/ivy/experimental/top_k.rst", "functional/ivy/experimental/top_k/static_top_k_container.rst", "functional/ivy/experimental/top_k/top_k_array.rst", "functional/ivy/experimental/top_k/top_k_container.rst", "functional/ivy/experimental/top_k/top_k_functional.rst", "functional/ivy/experimental/trapz.rst", "functional/ivy/experimental/trapz/trapz_array.rst", "functional/ivy/experimental/trapz/trapz_functional.rst", "functional/ivy/experimental/triu_indices.rst", "functional/ivy/experimental/triu_indices/static_triu_indices_container.rst", "functional/ivy/experimental/triu_indices/triu_indices_container.rst", "functional/ivy/experimental/triu_indices/triu_indices_functional.rst", "functional/ivy/experimental/unravel_index.rst", "functional/ivy/experimental/unravel_index/static_unravel_index_container.rst", "functional/ivy/experimental/unravel_index/unravel_index_array.rst", "functional/ivy/experimental/unravel_index/unravel_index_container.rst", "functional/ivy/experimental/unravel_index/unravel_index_functional.rst", "functional/ivy/experimental/vorbis_window.rst", "functional/ivy/experimental/vorbis_window/static_vorbis_window_container.rst", "functional/ivy/experimental/vorbis_window/vorbis_window_container.rst", "functional/ivy/experimental/vorbis_window/vorbis_window_functional.rst", "functional/ivy/experimental/vsplit.rst", "functional/ivy/experimental/vsplit/static_vsplit_container.rst", "functional/ivy/experimental/vsplit/vsplit_array.rst", "functional/ivy/experimental/vsplit/vsplit_container.rst", "functional/ivy/experimental/vsplit/vsplit_functional.rst", "functional/ivy/experimental/vstack.rst", "functional/ivy/experimental/vstack/static_vstack_container.rst", "functional/ivy/experimental/vstack/vstack_array.rst", "functional/ivy/experimental/vstack/vstack_container.rst", "functional/ivy/experimental/vstack/vstack_functional.rst", "functional/ivy/experimental/zeta.rst", "functional/ivy/experimental/zeta/static_zeta_container.rst", "functional/ivy/experimental/zeta/zeta_array.rst", "functional/ivy/experimental/zeta/zeta_container.rst", "functional/ivy/experimental/zeta/zeta_functional.rst", "functional/ivy/extensions.rst", "functional/ivy/general.rst", "functional/ivy/general/all_equal.rst", "functional/ivy/general/all_equal/all_equal_array.rst", "functional/ivy/general/all_equal/all_equal_container.rst", "functional/ivy/general/all_equal/all_equal_functional.rst", "functional/ivy/general/all_equal/static_all_equal_container.rst", "functional/ivy/general/arg_info.rst", "functional/ivy/general/arg_names.rst", "functional/ivy/general/array_equal.rst", "functional/ivy/general/array_equal/array_equal_array.rst", "functional/ivy/general/array_equal/array_equal_functional.rst", "functional/ivy/general/assert_supports_inplace.rst", "functional/ivy/general/assert_supports_inplace/assert_supports_inplace_array.rst", "functional/ivy/general/assert_supports_inplace/assert_supports_inplace_container.rst", "functional/ivy/general/assert_supports_inplace/assert_supports_inplace_functional.rst", "functional/ivy/general/assert_supports_inplace/static_assert_supports_inplace_container.rst", "functional/ivy/general/cache_fn.rst", "functional/ivy/general/clip_matrix_norm.rst", "functional/ivy/general/clip_matrix_norm/clip_matrix_norm_array.rst", "functional/ivy/general/clip_matrix_norm/clip_matrix_norm_container.rst", "functional/ivy/general/clip_matrix_norm/clip_matrix_norm_functional.rst", "functional/ivy/general/clip_matrix_norm/static_clip_matrix_norm_container.rst", "functional/ivy/general/clip_vector_norm.rst", "functional/ivy/general/clip_vector_norm/clip_vector_norm_array.rst", "functional/ivy/general/clip_vector_norm/clip_vector_norm_container.rst", "functional/ivy/general/clip_vector_norm/clip_vector_norm_functional.rst", "functional/ivy/general/clip_vector_norm/static_clip_vector_norm_container.rst", "functional/ivy/general/container_types.rst", "functional/ivy/general/current_backend_str.rst", "functional/ivy/general/default.rst", "functional/ivy/general/default/default_array.rst", "functional/ivy/general/default/default_functional.rst", "functional/ivy/general/einops_rearrange.rst", "functional/ivy/general/einops_rearrange/einops_rearrange_array.rst", "functional/ivy/general/einops_rearrange/einops_rearrange_container.rst", "functional/ivy/general/einops_rearrange/einops_rearrange_functional.rst", "functional/ivy/general/einops_rearrange/static_einops_rearrange_container.rst", "functional/ivy/general/einops_reduce.rst", "functional/ivy/general/einops_reduce/einops_reduce_array.rst", "functional/ivy/general/einops_reduce/einops_reduce_container.rst", "functional/ivy/general/einops_reduce/einops_reduce_functional.rst", "functional/ivy/general/einops_reduce/static_einops_reduce_container.rst", "functional/ivy/general/einops_repeat.rst", "functional/ivy/general/einops_repeat/einops_repeat_array.rst", "functional/ivy/general/einops_repeat/einops_repeat_container.rst", "functional/ivy/general/einops_repeat/einops_repeat_functional.rst", "functional/ivy/general/einops_repeat/static_einops_repeat_container.rst", "functional/ivy/general/exists.rst", "functional/ivy/general/exists/exists_array.rst", "functional/ivy/general/exists/exists_functional.rst", "functional/ivy/general/fourier_encode.rst", "functional/ivy/general/fourier_encode/fourier_encode_array.rst", "functional/ivy/general/fourier_encode/fourier_encode_container.rst", "functional/ivy/general/fourier_encode/fourier_encode_functional.rst", "functional/ivy/general/fourier_encode/static_fourier_encode_container.rst", "functional/ivy/general/function_supported_devices_and_dtypes.rst", "functional/ivy/general/function_unsupported_devices_and_dtypes.rst", "functional/ivy/general/gather.rst", "functional/ivy/general/gather/gather_array.rst", "functional/ivy/general/gather/gather_container.rst", "functional/ivy/general/gather/gather_functional.rst", "functional/ivy/general/gather/static_gather_container.rst", "functional/ivy/general/gather_nd.rst", "functional/ivy/general/gather_nd/gather_nd_array.rst", "functional/ivy/general/gather_nd/gather_nd_container.rst", "functional/ivy/general/gather_nd/gather_nd_functional.rst", "functional/ivy/general/gather_nd/static_gather_nd_container.rst", "functional/ivy/general/get_all_arrays_in_memory.rst", "functional/ivy/general/get_array_mode.rst", "functional/ivy/general/get_exception_trace_mode.rst", "functional/ivy/general/get_item.rst", "functional/ivy/general/get_min_base.rst", "functional/ivy/general/get_min_denominator.rst", "functional/ivy/general/get_nestable_mode.rst", "functional/ivy/general/get_num_dims.rst", "functional/ivy/general/get_num_dims/get_num_dims_array.rst", "functional/ivy/general/get_num_dims/get_num_dims_container.rst", "functional/ivy/general/get_num_dims/get_num_dims_functional.rst", "functional/ivy/general/get_num_dims/static_get_num_dims_container.rst", "functional/ivy/general/get_queue_timeout.rst", "functional/ivy/general/get_referrers_recursive.rst", "functional/ivy/general/get_show_func_wrapper_trace_mode.rst", "functional/ivy/general/get_tmp_dir.rst", "functional/ivy/general/has_nans.rst", "functional/ivy/general/has_nans/has_nans_array.rst", "functional/ivy/general/has_nans/has_nans_container.rst", "functional/ivy/general/has_nans/has_nans_functional.rst", "functional/ivy/general/has_nans/static_has_nans_container.rst", "functional/ivy/general/inplace_arrays_supported.rst", "functional/ivy/general/inplace_decrement.rst", "functional/ivy/general/inplace_decrement/inplace_decrement_array.rst", "functional/ivy/general/inplace_decrement/inplace_decrement_container.rst", "functional/ivy/general/inplace_decrement/inplace_decrement_functional.rst", "functional/ivy/general/inplace_decrement/static_inplace_decrement_container.rst", "functional/ivy/general/inplace_increment.rst", "functional/ivy/general/inplace_increment/inplace_increment_array.rst", "functional/ivy/general/inplace_increment/inplace_increment_container.rst", "functional/ivy/general/inplace_increment/inplace_increment_functional.rst", "functional/ivy/general/inplace_increment/static_inplace_increment_container.rst", "functional/ivy/general/inplace_update.rst", "functional/ivy/general/inplace_update/inplace_update_array.rst", "functional/ivy/general/inplace_update/inplace_update_container.rst", "functional/ivy/general/inplace_update/inplace_update_functional.rst", "functional/ivy/general/inplace_update/static_inplace_update_container.rst", "functional/ivy/general/inplace_variables_supported.rst", "functional/ivy/general/is_array.rst", "functional/ivy/general/is_array/is_array_array.rst", "functional/ivy/general/is_array/is_array_container.rst", "functional/ivy/general/is_array/is_array_functional.rst", "functional/ivy/general/is_array/static_is_array_container.rst", "functional/ivy/general/is_ivy_array.rst", "functional/ivy/general/is_ivy_array/is_ivy_array_array.rst", "functional/ivy/general/is_ivy_array/is_ivy_array_container.rst", "functional/ivy/general/is_ivy_array/is_ivy_array_functional.rst", "functional/ivy/general/is_ivy_array/static_is_ivy_array_container.rst", "functional/ivy/general/is_ivy_container.rst", "functional/ivy/general/is_ivy_container/is_ivy_container_array.rst", "functional/ivy/general/is_ivy_container/is_ivy_container_functional.rst", "functional/ivy/general/is_native_array.rst", "functional/ivy/general/is_native_array/is_native_array_array.rst", "functional/ivy/general/is_native_array/is_native_array_container.rst", "functional/ivy/general/is_native_array/is_native_array_functional.rst", "functional/ivy/general/is_native_array/static_is_native_array_container.rst", "functional/ivy/general/isscalar.rst", "functional/ivy/general/match_kwargs.rst", "functional/ivy/general/multiprocessing.rst", "functional/ivy/general/num_arrays_in_memory.rst", "functional/ivy/general/print_all_arrays_in_memory.rst", "functional/ivy/general/scatter_flat.rst", "functional/ivy/general/scatter_flat/scatter_flat_array.rst", "functional/ivy/general/scatter_flat/scatter_flat_container.rst", "functional/ivy/general/scatter_flat/scatter_flat_functional.rst", "functional/ivy/general/scatter_flat/static_scatter_flat_container.rst", "functional/ivy/general/scatter_nd.rst", "functional/ivy/general/scatter_nd/scatter_nd_array.rst", "functional/ivy/general/scatter_nd/scatter_nd_container.rst", "functional/ivy/general/scatter_nd/scatter_nd_functional.rst", "functional/ivy/general/scatter_nd/static_scatter_nd_container.rst", "functional/ivy/general/set_array_mode.rst", "functional/ivy/general/set_exception_trace_mode.rst", "functional/ivy/general/set_min_base.rst", "functional/ivy/general/set_min_denominator.rst", "functional/ivy/general/set_nestable_mode.rst", "functional/ivy/general/set_queue_timeout.rst", "functional/ivy/general/set_shape_array_mode.rst", "functional/ivy/general/set_show_func_wrapper_trace_mode.rst", "functional/ivy/general/set_tmp_dir.rst", "functional/ivy/general/shape.rst", "functional/ivy/general/shape_array_mode.rst", "functional/ivy/general/stable_divide.rst", "functional/ivy/general/stable_divide/stable_divide_array.rst", "functional/ivy/general/stable_divide/stable_divide_container.rst", "functional/ivy/general/stable_divide/stable_divide_functional.rst", "functional/ivy/general/stable_divide/static_stable_divide_container.rst", "functional/ivy/general/stable_pow.rst", "functional/ivy/general/stable_pow/stable_pow_array.rst", "functional/ivy/general/stable_pow/stable_pow_container.rst", "functional/ivy/general/stable_pow/stable_pow_functional.rst", "functional/ivy/general/stable_pow/static_stable_pow_container.rst", "functional/ivy/general/supports_inplace_updates.rst", "functional/ivy/general/supports_inplace_updates/static_supports_inplace_updates_container.rst", "functional/ivy/general/supports_inplace_updates/supports_inplace_updates_array.rst", "functional/ivy/general/supports_inplace_updates/supports_inplace_updates_container.rst", "functional/ivy/general/supports_inplace_updates/supports_inplace_updates_functional.rst", "functional/ivy/general/to_ivy_shape.rst", "functional/ivy/general/to_list.rst", "functional/ivy/general/to_list/static_to_list_container.rst", "functional/ivy/general/to_list/to_list_array.rst", "functional/ivy/general/to_list/to_list_functional.rst", "functional/ivy/general/to_native_shape.rst", "functional/ivy/general/to_numpy.rst", "functional/ivy/general/to_numpy/static_to_numpy_container.rst", "functional/ivy/general/to_numpy/to_numpy_array.rst", "functional/ivy/general/to_numpy/to_numpy_container.rst", "functional/ivy/general/to_numpy/to_numpy_functional.rst", "functional/ivy/general/to_scalar.rst", "functional/ivy/general/to_scalar/static_to_scalar_container.rst", "functional/ivy/general/to_scalar/to_scalar_array.rst", "functional/ivy/general/to_scalar/to_scalar_container.rst", "functional/ivy/general/to_scalar/to_scalar_functional.rst", "functional/ivy/general/try_else_none.rst", "functional/ivy/general/unset_array_mode.rst", "functional/ivy/general/unset_exception_trace_mode.rst", "functional/ivy/general/unset_nestable_mode.rst", "functional/ivy/general/unset_queue_timeout.rst", "functional/ivy/general/unset_shape_array_mode.rst", "functional/ivy/general/unset_show_func_wrapper_trace_mode.rst", "functional/ivy/general/value_is_nan.rst", "functional/ivy/general/value_is_nan/static_value_is_nan_container.rst", "functional/ivy/general/value_is_nan/value_is_nan_array.rst", "functional/ivy/general/value_is_nan/value_is_nan_container.rst", "functional/ivy/general/value_is_nan/value_is_nan_functional.rst", "functional/ivy/general/vmap.rst", "functional/ivy/gradients.rst", "functional/ivy/gradients/GradientTracking.rst", "functional/ivy/gradients/adam_step.rst", "functional/ivy/gradients/adam_step/adam_step_array.rst", "functional/ivy/gradients/adam_step/adam_step_container.rst", "functional/ivy/gradients/adam_step/adam_step_functional.rst", "functional/ivy/gradients/adam_update.rst", "functional/ivy/gradients/adam_update/adam_update_array.rst", "functional/ivy/gradients/adam_update/adam_update_container.rst", "functional/ivy/gradients/adam_update/adam_update_functional.rst", "functional/ivy/gradients/execute_with_gradients.rst", "functional/ivy/gradients/grad.rst", "functional/ivy/gradients/gradient_descent_update.rst", "functional/ivy/gradients/gradient_descent_update/gradient_descent_update_array.rst", "functional/ivy/gradients/gradient_descent_update/gradient_descent_update_container.rst", "functional/ivy/gradients/gradient_descent_update/gradient_descent_update_functional.rst", "functional/ivy/gradients/jac.rst", "functional/ivy/gradients/lamb_update.rst", "functional/ivy/gradients/lamb_update/lamb_update_array.rst", "functional/ivy/gradients/lamb_update/lamb_update_container.rst", "functional/ivy/gradients/lamb_update/lamb_update_functional.rst", "functional/ivy/gradients/lars_update.rst", "functional/ivy/gradients/lars_update/lars_update_array.rst", "functional/ivy/gradients/lars_update/lars_update_container.rst", "functional/ivy/gradients/lars_update/lars_update_functional.rst", "functional/ivy/gradients/optimizer_update.rst", "functional/ivy/gradients/optimizer_update/optimizer_update_array.rst", "functional/ivy/gradients/optimizer_update/optimizer_update_container.rst", "functional/ivy/gradients/optimizer_update/optimizer_update_functional.rst", "functional/ivy/gradients/set_with_grads.rst", "functional/ivy/gradients/stop_gradient.rst", "functional/ivy/gradients/stop_gradient/static_stop_gradient_container.rst", "functional/ivy/gradients/stop_gradient/stop_gradient_array.rst", "functional/ivy/gradients/stop_gradient/stop_gradient_container.rst", "functional/ivy/gradients/stop_gradient/stop_gradient_functional.rst", "functional/ivy/gradients/unset_with_grads.rst", "functional/ivy/gradients/value_and_grad.rst", "functional/ivy/gradients/with_grads.rst", "functional/ivy/layers.rst", "functional/ivy/layers/conv.rst", "functional/ivy/layers/conv1d.rst", "functional/ivy/layers/conv1d/conv1d_array.rst", "functional/ivy/layers/conv1d/conv1d_container.rst", "functional/ivy/layers/conv1d/conv1d_functional.rst", "functional/ivy/layers/conv1d/static_conv1d_container.rst", "functional/ivy/layers/conv1d_transpose.rst", "functional/ivy/layers/conv1d_transpose/conv1d_transpose_array.rst", "functional/ivy/layers/conv1d_transpose/conv1d_transpose_container.rst", "functional/ivy/layers/conv1d_transpose/conv1d_transpose_functional.rst", "functional/ivy/layers/conv1d_transpose/static_conv1d_transpose_container.rst", "functional/ivy/layers/conv2d.rst", "functional/ivy/layers/conv2d/conv2d_array.rst", "functional/ivy/layers/conv2d/conv2d_container.rst", "functional/ivy/layers/conv2d/conv2d_functional.rst", "functional/ivy/layers/conv2d/static_conv2d_container.rst", "functional/ivy/layers/conv2d_transpose.rst", "functional/ivy/layers/conv2d_transpose/conv2d_transpose_container.rst", "functional/ivy/layers/conv2d_transpose/conv2d_transpose_functional.rst", "functional/ivy/layers/conv2d_transpose/static_conv2d_transpose_container.rst", "functional/ivy/layers/conv3d.rst", "functional/ivy/layers/conv3d/conv3d_array.rst", "functional/ivy/layers/conv3d/conv3d_container.rst", "functional/ivy/layers/conv3d/conv3d_functional.rst", "functional/ivy/layers/conv3d/static_conv3d_container.rst", "functional/ivy/layers/conv3d_transpose.rst", "functional/ivy/layers/conv3d_transpose/conv3d_transpose_array.rst", "functional/ivy/layers/conv3d_transpose/conv3d_transpose_container.rst", "functional/ivy/layers/conv3d_transpose/conv3d_transpose_functional.rst", "functional/ivy/layers/conv3d_transpose/static_conv3d_transpose_container.rst", "functional/ivy/layers/conv_general_dilated.rst", "functional/ivy/layers/conv_general_transpose.rst", "functional/ivy/layers/deconv_length.rst", "functional/ivy/layers/depthwise_conv2d.rst", "functional/ivy/layers/depthwise_conv2d/depthwise_conv2d_array.rst", "functional/ivy/layers/depthwise_conv2d/depthwise_conv2d_container.rst", "functional/ivy/layers/depthwise_conv2d/depthwise_conv2d_functional.rst", "functional/ivy/layers/depthwise_conv2d/static_depthwise_conv2d_container.rst", "functional/ivy/layers/dropout.rst", "functional/ivy/layers/dropout/dropout_array.rst", "functional/ivy/layers/dropout/dropout_container.rst", "functional/ivy/layers/dropout/dropout_functional.rst", "functional/ivy/layers/dropout/static_dropout_container.rst", "functional/ivy/layers/dropout1d.rst", "functional/ivy/layers/dropout1d/dropout1d_array.rst", "functional/ivy/layers/dropout1d/dropout1d_container.rst", "functional/ivy/layers/dropout1d/dropout1d_functional.rst", "functional/ivy/layers/dropout1d/static_dropout1d_container.rst", "functional/ivy/layers/get_x_data_format.rst", "functional/ivy/layers/handle_padding.rst", "functional/ivy/layers/linear.rst", "functional/ivy/layers/linear/linear_array.rst", "functional/ivy/layers/linear/linear_container.rst", "functional/ivy/layers/linear/linear_functional.rst", "functional/ivy/layers/linear/static_linear_container.rst", "functional/ivy/layers/lstm_update.rst", "functional/ivy/layers/lstm_update/lstm_update_array.rst", "functional/ivy/layers/lstm_update/lstm_update_container.rst", "functional/ivy/layers/lstm_update/lstm_update_functional.rst", "functional/ivy/layers/lstm_update/static_lstm_update_container.rst", "functional/ivy/layers/multi_head_attention.rst", "functional/ivy/layers/multi_head_attention/multi_head_attention_array.rst", "functional/ivy/layers/multi_head_attention/multi_head_attention_container.rst", "functional/ivy/layers/multi_head_attention/multi_head_attention_functional.rst", "functional/ivy/layers/multi_head_attention/static_multi_head_attention_container.rst", "functional/ivy/layers/scaled_dot_product_attention.rst", "functional/ivy/layers/scaled_dot_product_attention/scaled_dot_product_attention_array.rst", "functional/ivy/layers/scaled_dot_product_attention/scaled_dot_product_attention_container.rst", "functional/ivy/layers/scaled_dot_product_attention/scaled_dot_product_attention_functional.rst", "functional/ivy/layers/scaled_dot_product_attention/static_scaled_dot_product_attention_container.rst", "functional/ivy/linear_algebra.rst", "functional/ivy/linear_algebra/cholesky.rst", "functional/ivy/linear_algebra/cholesky/cholesky_array.rst", "functional/ivy/linear_algebra/cholesky/cholesky_container.rst", "functional/ivy/linear_algebra/cholesky/cholesky_functional.rst", "functional/ivy/linear_algebra/cholesky/static_cholesky_container.rst", "functional/ivy/linear_algebra/cross.rst", "functional/ivy/linear_algebra/cross/cross_array.rst", "functional/ivy/linear_algebra/cross/cross_container.rst", "functional/ivy/linear_algebra/cross/cross_functional.rst", "functional/ivy/linear_algebra/cross/static_cross_container.rst", "functional/ivy/linear_algebra/det.rst", "functional/ivy/linear_algebra/det/det_array.rst", "functional/ivy/linear_algebra/det/det_container.rst", "functional/ivy/linear_algebra/det/det_functional.rst", "functional/ivy/linear_algebra/det/static_det_container.rst", "functional/ivy/linear_algebra/diag.rst", "functional/ivy/linear_algebra/diag/diag_array.rst", "functional/ivy/linear_algebra/diag/diag_container.rst", "functional/ivy/linear_algebra/diag/diag_functional.rst", "functional/ivy/linear_algebra/diag/static_diag_container.rst", "functional/ivy/linear_algebra/diagonal.rst", "functional/ivy/linear_algebra/diagonal/diagonal_array.rst", "functional/ivy/linear_algebra/diagonal/diagonal_container.rst", "functional/ivy/linear_algebra/diagonal/diagonal_functional.rst", "functional/ivy/linear_algebra/diagonal/static_diagonal_container.rst", "functional/ivy/linear_algebra/eig.rst", "functional/ivy/linear_algebra/eig/eig_array.rst", "functional/ivy/linear_algebra/eig/eig_container.rst", "functional/ivy/linear_algebra/eig/eig_functional.rst", "functional/ivy/linear_algebra/eigh.rst", "functional/ivy/linear_algebra/eigh/eigh_array.rst", "functional/ivy/linear_algebra/eigh/eigh_container.rst", "functional/ivy/linear_algebra/eigh/eigh_functional.rst", "functional/ivy/linear_algebra/eigh/static_eigh_container.rst", "functional/ivy/linear_algebra/eigvalsh.rst", "functional/ivy/linear_algebra/eigvalsh/eigvalsh_array.rst", "functional/ivy/linear_algebra/eigvalsh/eigvalsh_container.rst", "functional/ivy/linear_algebra/eigvalsh/eigvalsh_functional.rst", "functional/ivy/linear_algebra/eigvalsh/static_eigvalsh_container.rst", "functional/ivy/linear_algebra/inner.rst", "functional/ivy/linear_algebra/inner/inner_array.rst", "functional/ivy/linear_algebra/inner/inner_container.rst", "functional/ivy/linear_algebra/inner/inner_functional.rst", "functional/ivy/linear_algebra/inner/static_inner_container.rst", "functional/ivy/linear_algebra/inv.rst", "functional/ivy/linear_algebra/inv/inv_array.rst", "functional/ivy/linear_algebra/inv/inv_container.rst", "functional/ivy/linear_algebra/inv/inv_functional.rst", "functional/ivy/linear_algebra/inv/static_inv_container.rst", "functional/ivy/linear_algebra/matmul.rst", "functional/ivy/linear_algebra/matmul/matmul_array.rst", "functional/ivy/linear_algebra/matmul/matmul_container.rst", "functional/ivy/linear_algebra/matmul/matmul_functional.rst", "functional/ivy/linear_algebra/matmul/static_matmul_container.rst", "functional/ivy/linear_algebra/matrix_norm.rst", "functional/ivy/linear_algebra/matrix_norm/matrix_norm_array.rst", "functional/ivy/linear_algebra/matrix_norm/matrix_norm_container.rst", "functional/ivy/linear_algebra/matrix_norm/matrix_norm_functional.rst", "functional/ivy/linear_algebra/matrix_norm/static_matrix_norm_container.rst", "functional/ivy/linear_algebra/matrix_power.rst", "functional/ivy/linear_algebra/matrix_power/matrix_power_array.rst", "functional/ivy/linear_algebra/matrix_power/matrix_power_container.rst", "functional/ivy/linear_algebra/matrix_power/matrix_power_functional.rst", "functional/ivy/linear_algebra/matrix_power/static_matrix_power_container.rst", "functional/ivy/linear_algebra/matrix_rank.rst", "functional/ivy/linear_algebra/matrix_rank/matrix_rank_array.rst", "functional/ivy/linear_algebra/matrix_rank/matrix_rank_container.rst", "functional/ivy/linear_algebra/matrix_rank/matrix_rank_functional.rst", "functional/ivy/linear_algebra/matrix_rank/static_matrix_rank_container.rst", "functional/ivy/linear_algebra/matrix_transpose.rst", "functional/ivy/linear_algebra/matrix_transpose/matrix_transpose_array.rst", "functional/ivy/linear_algebra/matrix_transpose/matrix_transpose_container.rst", "functional/ivy/linear_algebra/matrix_transpose/matrix_transpose_functional.rst", "functional/ivy/linear_algebra/matrix_transpose/static_matrix_transpose_container.rst", "functional/ivy/linear_algebra/outer.rst", "functional/ivy/linear_algebra/outer/outer_array.rst", "functional/ivy/linear_algebra/outer/outer_container.rst", "functional/ivy/linear_algebra/outer/outer_functional.rst", "functional/ivy/linear_algebra/outer/static_outer_container.rst", "functional/ivy/linear_algebra/pinv.rst", "functional/ivy/linear_algebra/pinv/pinv_array.rst", "functional/ivy/linear_algebra/pinv/pinv_container.rst", "functional/ivy/linear_algebra/pinv/pinv_functional.rst", "functional/ivy/linear_algebra/pinv/static_pinv_container.rst", "functional/ivy/linear_algebra/qr.rst", "functional/ivy/linear_algebra/qr/qr_array.rst", "functional/ivy/linear_algebra/qr/qr_container.rst", "functional/ivy/linear_algebra/qr/qr_functional.rst", "functional/ivy/linear_algebra/qr/static_qr_container.rst", "functional/ivy/linear_algebra/slogdet.rst", "functional/ivy/linear_algebra/slogdet/slogdet_array.rst", "functional/ivy/linear_algebra/slogdet/slogdet_container.rst", "functional/ivy/linear_algebra/slogdet/slogdet_functional.rst", "functional/ivy/linear_algebra/slogdet/static_slogdet_container.rst", "functional/ivy/linear_algebra/solve.rst", "functional/ivy/linear_algebra/solve/solve_array.rst", "functional/ivy/linear_algebra/solve/solve_container.rst", "functional/ivy/linear_algebra/solve/solve_functional.rst", "functional/ivy/linear_algebra/solve/static_solve_container.rst", "functional/ivy/linear_algebra/svd.rst", "functional/ivy/linear_algebra/svd/static_svd_container.rst", "functional/ivy/linear_algebra/svd/svd_array.rst", "functional/ivy/linear_algebra/svd/svd_container.rst", "functional/ivy/linear_algebra/svd/svd_functional.rst", "functional/ivy/linear_algebra/svdvals.rst", "functional/ivy/linear_algebra/svdvals/static_svdvals_container.rst", "functional/ivy/linear_algebra/svdvals/svdvals_array.rst", "functional/ivy/linear_algebra/svdvals/svdvals_container.rst", "functional/ivy/linear_algebra/svdvals/svdvals_functional.rst", "functional/ivy/linear_algebra/tensordot.rst", "functional/ivy/linear_algebra/tensordot/static_tensordot_container.rst", "functional/ivy/linear_algebra/tensordot/tensordot_container.rst", "functional/ivy/linear_algebra/tensordot/tensordot_functional.rst", "functional/ivy/linear_algebra/tensorsolve.rst", "functional/ivy/linear_algebra/tensorsolve/tensorsolve_array.rst", "functional/ivy/linear_algebra/tensorsolve/tensorsolve_container.rst", "functional/ivy/linear_algebra/tensorsolve/tensorsolve_functional.rst", "functional/ivy/linear_algebra/trace.rst", "functional/ivy/linear_algebra/trace/static_trace_container.rst", "functional/ivy/linear_algebra/trace/trace_array.rst", "functional/ivy/linear_algebra/trace/trace_container.rst", "functional/ivy/linear_algebra/trace/trace_functional.rst", "functional/ivy/linear_algebra/vander.rst", "functional/ivy/linear_algebra/vander/static_vander_container.rst", "functional/ivy/linear_algebra/vander/vander_array.rst", "functional/ivy/linear_algebra/vander/vander_container.rst", "functional/ivy/linear_algebra/vander/vander_functional.rst", "functional/ivy/linear_algebra/vecdot.rst", "functional/ivy/linear_algebra/vecdot/static_vecdot_container.rst", "functional/ivy/linear_algebra/vecdot/vecdot_array.rst", "functional/ivy/linear_algebra/vecdot/vecdot_container.rst", "functional/ivy/linear_algebra/vecdot/vecdot_functional.rst", "functional/ivy/linear_algebra/vector_norm.rst", "functional/ivy/linear_algebra/vector_norm/static_vector_norm_container.rst", "functional/ivy/linear_algebra/vector_norm/vector_norm_array.rst", "functional/ivy/linear_algebra/vector_norm/vector_norm_container.rst", "functional/ivy/linear_algebra/vector_norm/vector_norm_functional.rst", "functional/ivy/linear_algebra/vector_to_skew_symmetric_matrix.rst", "functional/ivy/linear_algebra/vector_to_skew_symmetric_matrix/static_vector_to_skew_symmetric_matrix_container.rst", "functional/ivy/linear_algebra/vector_to_skew_symmetric_matrix/vector_to_skew_symmetric_matrix_array.rst", "functional/ivy/linear_algebra/vector_to_skew_symmetric_matrix/vector_to_skew_symmetric_matrix_container.rst", "functional/ivy/linear_algebra/vector_to_skew_symmetric_matrix/vector_to_skew_symmetric_matrix_functional.rst", "functional/ivy/losses.rst", "functional/ivy/losses/binary_cross_entropy.rst", "functional/ivy/losses/binary_cross_entropy/binary_cross_entropy_array.rst", "functional/ivy/losses/binary_cross_entropy/binary_cross_entropy_container.rst", "functional/ivy/losses/binary_cross_entropy/binary_cross_entropy_functional.rst", "functional/ivy/losses/binary_cross_entropy/static_binary_cross_entropy_container.rst", "functional/ivy/losses/binary_cross_entropy_with_logits.rst", "functional/ivy/losses/cross_entropy.rst", "functional/ivy/losses/cross_entropy/cross_entropy_array.rst", "functional/ivy/losses/cross_entropy/cross_entropy_container.rst", "functional/ivy/losses/cross_entropy/cross_entropy_functional.rst", "functional/ivy/losses/cross_entropy/static_cross_entropy_container.rst", "functional/ivy/losses/sparse_cross_entropy.rst", "functional/ivy/losses/sparse_cross_entropy/sparse_cross_entropy_array.rst", "functional/ivy/losses/sparse_cross_entropy/sparse_cross_entropy_container.rst", "functional/ivy/losses/sparse_cross_entropy/sparse_cross_entropy_functional.rst", "functional/ivy/losses/sparse_cross_entropy/static_sparse_cross_entropy_container.rst", "functional/ivy/manipulation.rst", "functional/ivy/manipulation/clip.rst", "functional/ivy/manipulation/clip/clip_array.rst", "functional/ivy/manipulation/clip/clip_container.rst", "functional/ivy/manipulation/clip/clip_functional.rst", "functional/ivy/manipulation/clip/static_clip_container.rst", "functional/ivy/manipulation/concat.rst", "functional/ivy/manipulation/concat/concat_array.rst", "functional/ivy/manipulation/concat/concat_container.rst", "functional/ivy/manipulation/concat/concat_functional.rst", "functional/ivy/manipulation/concat/static_concat_container.rst", "functional/ivy/manipulation/constant_pad.rst", "functional/ivy/manipulation/constant_pad/constant_pad_array.rst", "functional/ivy/manipulation/constant_pad/constant_pad_container.rst", "functional/ivy/manipulation/constant_pad/constant_pad_functional.rst", "functional/ivy/manipulation/constant_pad/static_constant_pad_container.rst", "functional/ivy/manipulation/expand_dims.rst", "functional/ivy/manipulation/expand_dims/expand_dims_array.rst", "functional/ivy/manipulation/expand_dims/expand_dims_container.rst", "functional/ivy/manipulation/expand_dims/expand_dims_functional.rst", "functional/ivy/manipulation/expand_dims/static_expand_dims_container.rst", "functional/ivy/manipulation/flip.rst", "functional/ivy/manipulation/flip/flip_array.rst", "functional/ivy/manipulation/flip/flip_container.rst", "functional/ivy/manipulation/flip/flip_functional.rst", "functional/ivy/manipulation/flip/static_flip_container.rst", "functional/ivy/manipulation/permute_dims.rst", "functional/ivy/manipulation/permute_dims/permute_dims_array.rst", "functional/ivy/manipulation/permute_dims/permute_dims_container.rst", "functional/ivy/manipulation/permute_dims/permute_dims_functional.rst", "functional/ivy/manipulation/permute_dims/static_permute_dims_container.rst", "functional/ivy/manipulation/repeat.rst", "functional/ivy/manipulation/repeat/repeat_array.rst", "functional/ivy/manipulation/repeat/repeat_container.rst", "functional/ivy/manipulation/repeat/repeat_functional.rst", "functional/ivy/manipulation/repeat/static_repeat_container.rst", "functional/ivy/manipulation/reshape.rst", "functional/ivy/manipulation/reshape/reshape_array.rst", "functional/ivy/manipulation/reshape/reshape_container.rst", "functional/ivy/manipulation/reshape/reshape_functional.rst", "functional/ivy/manipulation/reshape/static_reshape_container.rst", "functional/ivy/manipulation/roll.rst", "functional/ivy/manipulation/roll/roll_array.rst", "functional/ivy/manipulation/roll/roll_container.rst", "functional/ivy/manipulation/roll/roll_functional.rst", "functional/ivy/manipulation/roll/static_roll_container.rst", "functional/ivy/manipulation/split.rst", "functional/ivy/manipulation/split/split_array.rst", "functional/ivy/manipulation/split/split_container.rst", "functional/ivy/manipulation/split/split_functional.rst", "functional/ivy/manipulation/split/static_split_container.rst", "functional/ivy/manipulation/squeeze.rst", "functional/ivy/manipulation/squeeze/squeeze_array.rst", "functional/ivy/manipulation/squeeze/squeeze_container.rst", "functional/ivy/manipulation/squeeze/squeeze_functional.rst", "functional/ivy/manipulation/squeeze/static_squeeze_container.rst", "functional/ivy/manipulation/stack.rst", "functional/ivy/manipulation/stack/stack_array.rst", "functional/ivy/manipulation/stack/stack_container.rst", "functional/ivy/manipulation/stack/stack_functional.rst", "functional/ivy/manipulation/stack/static_stack_container.rst", "functional/ivy/manipulation/swapaxes.rst", "functional/ivy/manipulation/swapaxes/static_swapaxes_container.rst", "functional/ivy/manipulation/swapaxes/swapaxes_array.rst", "functional/ivy/manipulation/swapaxes/swapaxes_container.rst", "functional/ivy/manipulation/swapaxes/swapaxes_functional.rst", "functional/ivy/manipulation/tile.rst", "functional/ivy/manipulation/tile/static_tile_container.rst", "functional/ivy/manipulation/tile/tile_array.rst", "functional/ivy/manipulation/tile/tile_container.rst", "functional/ivy/manipulation/tile/tile_functional.rst", "functional/ivy/manipulation/unstack.rst", "functional/ivy/manipulation/unstack/static_unstack_container.rst", "functional/ivy/manipulation/unstack/unstack_array.rst", "functional/ivy/manipulation/unstack/unstack_container.rst", "functional/ivy/manipulation/unstack/unstack_functional.rst", "functional/ivy/manipulation/zero_pad.rst", "functional/ivy/manipulation/zero_pad/static_zero_pad_container.rst", "functional/ivy/manipulation/zero_pad/zero_pad_array.rst", "functional/ivy/manipulation/zero_pad/zero_pad_container.rst", "functional/ivy/manipulation/zero_pad/zero_pad_functional.rst", "functional/ivy/meta.rst", "functional/ivy/meta/fomaml_step.rst", "functional/ivy/meta/maml_step.rst", "functional/ivy/meta/reptile_step.rst", "functional/ivy/nest.rst", "functional/ivy/nest/all_nested_indices.rst", "functional/ivy/nest/copy_nest.rst", "functional/ivy/nest/duplicate_array_index_chains.rst", "functional/ivy/nest/index_nest.rst", "functional/ivy/nest/insert_into_nest_at_index.rst", "functional/ivy/nest/insert_into_nest_at_indices.rst", "functional/ivy/nest/map.rst", "functional/ivy/nest/map_nest_at_index.rst", "functional/ivy/nest/map_nest_at_indices.rst", "functional/ivy/nest/multi_index_nest.rst", "functional/ivy/nest/nested_any.rst", "functional/ivy/nest/nested_argwhere.rst", "functional/ivy/nest/nested_map.rst", "functional/ivy/nest/nested_multi_map.rst", "functional/ivy/nest/prune_nest_at_index.rst", "functional/ivy/nest/prune_nest_at_indices.rst", "functional/ivy/nest/set_nest_at_index.rst", "functional/ivy/nest/set_nest_at_indices.rst", "functional/ivy/norms.rst", "functional/ivy/norms/layer_norm.rst", "functional/ivy/norms/layer_norm/layer_norm_array.rst", "functional/ivy/norms/layer_norm/layer_norm_container.rst", "functional/ivy/norms/layer_norm/layer_norm_functional.rst", "functional/ivy/random.rst", "functional/ivy/random/multinomial.rst", "functional/ivy/random/multinomial/multinomial_array.rst", "functional/ivy/random/multinomial/multinomial_container.rst", "functional/ivy/random/multinomial/multinomial_functional.rst", "functional/ivy/random/multinomial/static_multinomial_container.rst", "functional/ivy/random/randint.rst", "functional/ivy/random/randint/randint_array.rst", "functional/ivy/random/randint/randint_container.rst", "functional/ivy/random/randint/randint_functional.rst", "functional/ivy/random/randint/static_randint_container.rst", "functional/ivy/random/random_normal.rst", "functional/ivy/random/random_normal/random_normal_array.rst", "functional/ivy/random/random_normal/random_normal_container.rst", "functional/ivy/random/random_normal/random_normal_functional.rst", "functional/ivy/random/random_normal/static_random_normal_container.rst", "functional/ivy/random/random_uniform.rst", "functional/ivy/random/random_uniform/random_uniform_array.rst", "functional/ivy/random/random_uniform/random_uniform_container.rst", "functional/ivy/random/random_uniform/random_uniform_functional.rst", "functional/ivy/random/random_uniform/static_random_uniform_container.rst", "functional/ivy/random/seed.rst", "functional/ivy/random/shuffle.rst", "functional/ivy/random/shuffle/shuffle_array.rst", "functional/ivy/random/shuffle/shuffle_container.rst", "functional/ivy/random/shuffle/shuffle_functional.rst", "functional/ivy/random/shuffle/static_shuffle_container.rst", "functional/ivy/searching.rst", "functional/ivy/searching/argmax.rst", "functional/ivy/searching/argmax/argmax_array.rst", "functional/ivy/searching/argmax/argmax_container.rst", "functional/ivy/searching/argmax/argmax_functional.rst", "functional/ivy/searching/argmax/static_argmax_container.rst", "functional/ivy/searching/argmin.rst", "functional/ivy/searching/argmin/argmin_array.rst", "functional/ivy/searching/argmin/argmin_container.rst", "functional/ivy/searching/argmin/argmin_functional.rst", "functional/ivy/searching/argmin/static_argmin_container.rst", "functional/ivy/searching/argwhere.rst", "functional/ivy/searching/argwhere/argwhere_array.rst", "functional/ivy/searching/argwhere/argwhere_container.rst", "functional/ivy/searching/argwhere/argwhere_functional.rst", "functional/ivy/searching/argwhere/static_argwhere_container.rst", "functional/ivy/searching/nonzero.rst", "functional/ivy/searching/nonzero/nonzero_array.rst", "functional/ivy/searching/nonzero/nonzero_container.rst", "functional/ivy/searching/nonzero/nonzero_functional.rst", "functional/ivy/searching/nonzero/static_nonzero_container.rst", "functional/ivy/searching/where.rst", "functional/ivy/searching/where/static_where_container.rst", "functional/ivy/searching/where/where_array.rst", "functional/ivy/searching/where/where_container.rst", "functional/ivy/searching/where/where_functional.rst", "functional/ivy/set.rst", "functional/ivy/set/unique_all.rst", "functional/ivy/set/unique_all/static_unique_all_container.rst", "functional/ivy/set/unique_all/unique_all_array.rst", "functional/ivy/set/unique_all/unique_all_container.rst", "functional/ivy/set/unique_all/unique_all_functional.rst", "functional/ivy/set/unique_counts.rst", "functional/ivy/set/unique_counts/static_unique_counts_container.rst", "functional/ivy/set/unique_counts/unique_counts_array.rst", "functional/ivy/set/unique_counts/unique_counts_container.rst", "functional/ivy/set/unique_counts/unique_counts_functional.rst", "functional/ivy/set/unique_inverse.rst", "functional/ivy/set/unique_inverse/static_unique_inverse_container.rst", "functional/ivy/set/unique_inverse/unique_inverse_array.rst", "functional/ivy/set/unique_inverse/unique_inverse_container.rst", "functional/ivy/set/unique_inverse/unique_inverse_functional.rst", "functional/ivy/set/unique_values.rst", "functional/ivy/set/unique_values/static_unique_values_container.rst", "functional/ivy/set/unique_values/unique_values_array.rst", "functional/ivy/set/unique_values/unique_values_container.rst", "functional/ivy/set/unique_values/unique_values_functional.rst", "functional/ivy/sorting.rst", "functional/ivy/sorting/argsort.rst", "functional/ivy/sorting/argsort/argsort_array.rst", "functional/ivy/sorting/argsort/argsort_container.rst", "functional/ivy/sorting/argsort/argsort_functional.rst", "functional/ivy/sorting/argsort/static_argsort_container.rst", "functional/ivy/sorting/searchsorted.rst", "functional/ivy/sorting/searchsorted/searchsorted_array.rst", "functional/ivy/sorting/searchsorted/searchsorted_container.rst", "functional/ivy/sorting/searchsorted/searchsorted_functional.rst", "functional/ivy/sorting/searchsorted/static_searchsorted_container.rst", "functional/ivy/sorting/sort.rst", "functional/ivy/sorting/sort/sort_array.rst", "functional/ivy/sorting/sort/sort_container.rst", "functional/ivy/sorting/sort/sort_functional.rst", "functional/ivy/sorting/sort/static_sort_container.rst", "functional/ivy/statistical.rst", "functional/ivy/statistical/cumprod.rst", "functional/ivy/statistical/cumprod/cumprod_array.rst", "functional/ivy/statistical/cumprod/cumprod_container.rst", "functional/ivy/statistical/cumprod/cumprod_functional.rst", "functional/ivy/statistical/cumprod/static_cumprod_container.rst", "functional/ivy/statistical/cumsum.rst", "functional/ivy/statistical/cumsum/cumsum_array.rst", "functional/ivy/statistical/cumsum/cumsum_container.rst", "functional/ivy/statistical/cumsum/cumsum_functional.rst", "functional/ivy/statistical/cumsum/static_cumsum_container.rst", "functional/ivy/statistical/einsum.rst", "functional/ivy/statistical/einsum/einsum_array.rst", "functional/ivy/statistical/einsum/einsum_container.rst", "functional/ivy/statistical/einsum/einsum_functional.rst", "functional/ivy/statistical/max.rst", "functional/ivy/statistical/max/max_array.rst", "functional/ivy/statistical/max/max_container.rst", "functional/ivy/statistical/max/max_functional.rst", "functional/ivy/statistical/mean.rst", "functional/ivy/statistical/mean/mean_array.rst", "functional/ivy/statistical/mean/mean_container.rst", "functional/ivy/statistical/mean/mean_functional.rst", "functional/ivy/statistical/min.rst", "functional/ivy/statistical/min/min_array.rst", "functional/ivy/statistical/min/min_container.rst", "functional/ivy/statistical/min/min_functional.rst", "functional/ivy/statistical/prod.rst", "functional/ivy/statistical/prod/prod_array.rst", "functional/ivy/statistical/prod/prod_container.rst", "functional/ivy/statistical/prod/prod_functional.rst", "functional/ivy/statistical/prod/static_prod_container.rst", "functional/ivy/statistical/std.rst", "functional/ivy/statistical/std/std_array.rst", "functional/ivy/statistical/std/std_container.rst", "functional/ivy/statistical/std/std_functional.rst", "functional/ivy/statistical/sum.rst", "functional/ivy/statistical/sum/static_sum_container.rst", "functional/ivy/statistical/sum/sum_array.rst", "functional/ivy/statistical/sum/sum_container.rst", "functional/ivy/statistical/sum/sum_functional.rst", "functional/ivy/statistical/var.rst", "functional/ivy/statistical/var/static_var_container.rst", "functional/ivy/statistical/var/var_array.rst", "functional/ivy/statistical/var/var_container.rst", "functional/ivy/statistical/var/var_functional.rst", "functional/ivy/utility.rst", "functional/ivy/utility/all.rst", "functional/ivy/utility/all/all_array.rst", "functional/ivy/utility/all/all_container.rst", "functional/ivy/utility/all/all_functional.rst", "functional/ivy/utility/all/static_all_container.rst", "functional/ivy/utility/any.rst", "functional/ivy/utility/any/any_array.rst", "functional/ivy/utility/any/any_container.rst", "functional/ivy/utility/any/any_functional.rst", "functional/ivy/utility/any/static_any_container.rst", "glossary.rst", "index.rst", "index_append.rst", "index_prepend.rst", "inspection.rst", "inspection/add_array_specs.rst", "inspection/fn_array_spec.rst", "related_work.rst", "related_work/api_standards.rst", "related_work/compiler_infrastructure.rst", "related_work/exchange_formats.rst", "related_work/frameworks.rst", "related_work/graph_tracers.rst", "related_work/ml_unifying_companies.rst", "related_work/multi_vendor_compiler_frameworks.rst", "related_work/vendor_specific_apis.rst", "related_work/vendor_specific_compilers.rst", "related_work/what_does_ivy_add.rst", "related_work/wrapper_frameworks.rst", "stateful.rst", "stateful/activations.rst", "stateful/activations/GEGLU.rst", "stateful/activations/GELU.rst", "stateful/converters.rst", "stateful/converters/to_ivy_module.rst", "stateful/initializers.rst", "stateful/initializers/Constant.rst", "stateful/initializers/FirstLayerSiren.rst", "stateful/initializers/GlorotUniform.rst", "stateful/initializers/Initializer.rst", "stateful/initializers/KaimingNormal.rst", "stateful/initializers/Ones.rst", "stateful/initializers/Siren.rst", "stateful/initializers/Uniform.rst", "stateful/initializers/Zeros.rst", "stateful/layers.rst", "stateful/layers/Conv1D.rst", "stateful/layers/Conv1DTranspose.rst", "stateful/layers/Conv2D.rst", "stateful/layers/Conv2DTranspose.rst", "stateful/layers/Conv3D.rst", "stateful/layers/Conv3DTranspose.rst", "stateful/layers/DepthwiseConv2D.rst", "stateful/layers/Dropout.rst", "stateful/layers/LSTM.rst", "stateful/layers/Linear.rst", "stateful/layers/MultiHeadAttention.rst", "stateful/module.rst", "stateful/module/Module.rst", "stateful/module/MyTFModule.rst", "stateful/module/MyTorchModule.rst", "stateful/norms.rst", "stateful/norms/LayerNorm.rst", "stateful/optimizers.rst", "stateful/optimizers/Adam.rst", "stateful/optimizers/LAMB.rst", "stateful/optimizers/LARS.rst", "stateful/optimizers/Optimizer.rst", "stateful/optimizers/SGD.rst", "stateful/sequential.rst", "stateful/sequential/Sequential.rst", "supported_frameworks.rst", "verbosity.rst", "verbosity/cprint.rst"], "titles": ["&lt;no title&gt;", "Assertions", "check_all", "check_all_or_any_fn", "check_any", "check_elem_in_list", "check_equal", "check_exists", "check_false", "check_fill_value_and_dtype_are_compatible", "check_gather_input_valid", "check_gather_nd_input_valid", "check_greater", "check_inplace_sizes_valid", "check_isinstance", "check_less", "check_one_way_broadcastable", "check_shape", "check_true", "Backend handler", "ContextManager", "choose_random_backend", "clear_backend_stack", "current_backend", "fn_name_from_version_specific_fn_name", "get_backend", "set_backend", "set_backend_to_specific_version", "set_jax_backend", "set_numpy_backend", "set_tensorflow_backend", "set_torch_backend", "unset_backend", "Background", "ML Explosion", "Standardization", "Why Unify?", "Contributing", "Applied Libraries", "Building the Docs", "Helpful Resources", "Open Tasks", "Setting Up", "The Basics", "Data classes", "Array", "Activations", "ArrayWithActivations", "Array", "&lt;no title&gt;", "Conversions", "args_to_ivy", "args_to_native", "to_ivy", "to_native", "Creation", "ArrayWithCreation", "Data type", "ArrayWithDataTypes", "Device", "ArrayWithDevice", "Elementwise", "ArrayWithElementwise", "Experimental", "General", "ArrayWithGeneral", "Gradients", "ArrayWithGradients", "Image", "ArrayWithImage", "Layers", "ArrayWithLayers", "Linear algebra", "ArrayWithLinearAlgebra", "Losses", "ArrayWithLosses", "Manipulation", "ArrayWithManipulation", "Norms", "ArrayWithNorms", "Random", "ArrayWithRandom", "Searching", "ArrayWithSearching", "Set", "ArrayWithSet", "Sorting", "ArrayWithSorting", "Statistical", "ArrayWithStatistical", "Utility", "ArrayWithUtility", "Wrapping", "add_ivy_array_instance_methods", "Container", "Activations", "ContainerWithActivations", "Base", "ContainerBase", "Container", "&lt;no title&gt;", "Conversions", "ContainerWithConversions", "Creation", "ContainerWithCreation", "Data type", "ContainerWithDataTypes", "Device", "ContainerWithDevice", "Elementwise", "ContainerWithElementwise", "Experimental", "General", "ContainerWithGeneral", "Gradients", "ContainerWithGradients", "Image", "ContainerWithImage", "Layers", "ContainerWithLayers", "Linear algebra", "ContainerWithLinearAlgebra", "Losses", "ContainerWithLosses", "Manipulation", "ContainerWithManipulation", "Norms", "ContainerWithNorms", "Random", "ContainerWithRandom", "Searching", "ContainerWithSearching", "Set", "ContainerWithSet", "Sorting", "ContainerWithSorting", "Statistical", "ContainerWithStatistical", "Utility", "ContainerWithUtility", "Wrapping", "add_ivy_container_instance_methods", "Deep Dive", "Array API Tests", "Arrays", "Backend Setting", "Containers", "Continuous Integration", "Data Types", "Devices", "Docstring Examples", "Docstrings", "Exception Handling", "Formatting", "Function Arguments", "Function Types", "Function Wrapping", "Inplace Updates", "Ivy Frontends", "Ivy Frontend Tests", "Ivy Tests", "Navigating the Code", "Superset Behaviour", "Design", "Building Blocks", "Ivy as a Framework", "Ivy Array", "Ivy Container", "Ivy Stateful API", "Ivy as a Transpiler", "Ivy", "Ivy builder", "Ivy ecosystem", "Ivy gym", "Ivy mech", "Ivy memory", "Ivy models", "Ivy robot", "Ivy vision", "Extensions", "Applied Libraries", "FAQ", "Func wrapper", "from_zero_dim_arrays_to_float", "handle_array_like", "handle_nans", "handle_nestable", "handle_out_argument", "infer_device", "infer_dtype", "inputs_to_ivy_arrays", "inputs_to_native_arrays", "integer_arrays_to_float", "outputs_to_ivy_arrays", "to_native_arrays_and_back", "&lt;no title&gt;", "Activations", "deserialize", "gelu", "ivy.Array.gelu", "ivy.Container.gelu", "ivy.gelu", "ivy.Container.static_gelu", "get", "leaky_relu", "ivy.Array.leaky_relu", "ivy.Container.leaky_relu", "ivy.leaky_relu", "ivy.Container.static_leaky_relu", "log_softmax", "ivy.Array.log_softmax", "ivy.Container.log_softmax", "ivy.log_softmax", "ivy.Container.static_log_softmax", "relu", "ivy.Array.relu", "ivy.Container.relu", "ivy.relu", "ivy.Container.static_relu", "sigmoid", "ivy.Array.sigmoid", "ivy.Container.sigmoid", "ivy.sigmoid", "ivy.Container.static_sigmoid", "softmax", "ivy.Array.softmax", "ivy.Container.softmax", "ivy.softmax", "ivy.Container.static_softmax", "softplus", "ivy.Array.softplus", "ivy.Container.softplus", "ivy.softplus", "ivy.Container.static_softplus", "Compilation", "compile", "Constants", "Creation", "NestedSequence", "arange", "ivy.arange", "ivy.Container.static_arange", "asarray", "ivy.Array.asarray", "ivy.asarray", "ivy.Container.static_asarray", "asarray_handle_nestable", "asarray_infer_device", "asarray_to_native_arrays_and_back", "copy_array", "ivy.Array.copy_array", "ivy.copy_array", "empty", "empty_like", "ivy.Array.empty_like", "ivy.Container.empty_like", "ivy.empty_like", "ivy.Container.static_empty_like", "eye", "ivy.eye", "ivy.Container.static_eye", "from_dlpack", "ivy.Array.from_dlpack", "ivy.Container.from_dlpack", "ivy.from_dlpack", "ivy.Container.static_from_dlpack", "full", "full_like", "ivy.Array.full_like", "ivy.Container.full_like", "ivy.full_like", "ivy.Container.static_full_like", "linspace", "ivy.Array.linspace", "ivy.Container.linspace", "ivy.linspace", "ivy.Container.static_linspace", "logspace", "ivy.logspace", "ivy.Container.static_logspace", "meshgrid", "ivy.Array.meshgrid", "ivy.Container.meshgrid", "ivy.meshgrid", "ivy.Container.static_meshgrid", "native_array", "ivy.Array.native_array", "ivy.Container.native_array", "ivy.native_array", "ivy.Container.static_native_array", "one_hot", "ivy.Array.one_hot", "ivy.Container.one_hot", "ivy.one_hot", "ivy.Container.static_one_hot", "ones", "ivy.ones", "ivy.Container.static_ones", "ones_like", "ivy.Array.ones_like", "ivy.Container.ones_like", "ivy.ones_like", "ivy.Container.static_ones_like", "tril", "ivy.Container.static_tril", "ivy.Array.tril", "ivy.Container.tril", "ivy.tril", "triu", "ivy.Container.static_triu", "ivy.Array.triu", "ivy.Container.triu", "ivy.triu", "zeros", "ivy.Container.static_zeros", "ivy.zeros", "zeros_like", "ivy.Container.static_zeros_like", "ivy.Array.zeros_like", "ivy.Container.zeros_like", "ivy.zeros_like", "Data type", "DefaultDtype", "DefaultFloatDtype", "DefaultIntDtype", "DefaultUintDtype", "as_ivy_dtype", "as_native_dtype", "astype", "ivy.Array.astype", "ivy.Container.astype", "ivy.astype", "ivy.Container.static_astype", "broadcast_arrays", "ivy.Array.broadcast_arrays", "ivy.Container.broadcast_arrays", "ivy.broadcast_arrays", "ivy.Container.static_broadcast_arrays", "broadcast_to", "ivy.Array.broadcast_to", "ivy.Container.broadcast_to", "ivy.broadcast_to", "ivy.Container.static_broadcast_to", "can_cast", "ivy.Array.can_cast", "ivy.Container.can_cast", "ivy.can_cast", "ivy.Container.static_can_cast", "check_float", "closest_valid_dtype", "default_dtype", "default_float_dtype", "ivy.default_float_dtype", "ivy.Container.static_default_float_dtype", "default_int_dtype", "default_uint_dtype", "dtype", "ivy.Container.dtype", "ivy.dtype", "ivy.Container.static_dtype", "dtype_bits", "finfo", "ivy.Array.finfo", "ivy.Container.finfo", "ivy.finfo", "ivy.Container.static_finfo", "function_supported_dtypes", "ivy.function_supported_dtypes", "ivy.Container.static_function_supported_dtypes", "function_unsupported_dtypes", "ivy.function_unsupported_dtypes", "ivy.Container.static_function_unsupported_dtypes", "iinfo", "ivy.Array.iinfo", "ivy.Container.iinfo", "ivy.iinfo", "ivy.Container.static_iinfo", "infer_default_dtype", "invalid_dtype", "is_bool_dtype", "ivy.Array.is_bool_dtype", "ivy.Container.is_bool_dtype", "ivy.is_bool_dtype", "ivy.Container.static_is_bool_dtype", "is_float_dtype", "ivy.Array.is_float_dtype", "ivy.Container.is_float_dtype", "ivy.is_float_dtype", "ivy.Container.static_is_float_dtype", "is_int_dtype", "ivy.Array.is_int_dtype", "ivy.Container.is_int_dtype", "ivy.is_int_dtype", "ivy.Container.static_is_int_dtype", "is_uint_dtype", "ivy.Array.is_uint_dtype", "ivy.Container.is_uint_dtype", "ivy.is_uint_dtype", "ivy.Container.static_is_uint_dtype", "promote_types", "promote_types_of_inputs", "result_type", "ivy.Array.result_type", "ivy.Container.result_type", "ivy.result_type", "ivy.Container.static_result_type", "set_default_dtype", "set_default_float_dtype", "set_default_int_dtype", "set_default_uint_dtype", "type_promote_arrays", "unset_default_dtype", "unset_default_float_dtype", "unset_default_int_dtype", "unset_default_uint_dtype", "valid_dtype", "Device", "DefaultDevice", "Profiler", "as_ivy_dev", "as_native_dev", "clear_mem_on_dev", "default_device", "dev", "ivy.Array.dev", "ivy.dev", "ivy.Container.static_dev", "dev_util", "function_supported_devices", "function_unsupported_devices", "get_all_ivy_arrays_on_dev", "gpu_is_available", "num_cpu_cores", "num_gpus", "num_ivy_arrays_on_dev", "percent_used_mem_on_dev", "print_all_ivy_arrays_on_dev", "set_default_device", "set_split_factor", "split_factor", "split_func_call", "to_device", "ivy.Container.static_to_device", "ivy.Array.to_device", "ivy.Container.to_device", "ivy.to_device", "total_mem_on_dev", "tpu_is_available", "unset_default_device", "used_mem_on_dev", "Elementwise", "abs", "ivy.Array.abs", "ivy.Container.abs", "ivy.abs", "ivy.Container.static_abs", "acos", "ivy.Array.acos", "ivy.Container.acos", "ivy.acos", "ivy.Container.static_acos", "acosh", "ivy.Array.acosh", "ivy.Container.acosh", "ivy.acosh", "ivy.Container.static_acosh", "add", "ivy.Array.add", "ivy.Container.add", "ivy.add", "ivy.Container.static_add", "asin", "ivy.Array.asin", "ivy.Container.asin", "ivy.asin", "ivy.Container.static_asin", "asinh", "ivy.Array.asinh", "ivy.Container.asinh", "ivy.asinh", "ivy.Container.static_asinh", "atan", "ivy.Array.atan", "ivy.Container.atan", "ivy.atan", "ivy.Container.static_atan", "atan2", "ivy.Array.atan2", "ivy.Container.atan2", "ivy.atan2", "ivy.Container.static_atan2", "atanh", "ivy.Array.atanh", "ivy.Container.atanh", "ivy.atanh", "ivy.Container.static_atanh", "bitwise_and", "ivy.Array.bitwise_and", "ivy.Container.bitwise_and", "ivy.bitwise_and", "ivy.Container.static_bitwise_and", "bitwise_invert", "ivy.Array.bitwise_invert", "ivy.Container.bitwise_invert", "ivy.bitwise_invert", "ivy.Container.static_bitwise_invert", "bitwise_left_shift", "ivy.Array.bitwise_left_shift", "ivy.Container.bitwise_left_shift", "ivy.bitwise_left_shift", "ivy.Container.static_bitwise_left_shift", "bitwise_or", "ivy.Array.bitwise_or", "ivy.Container.bitwise_or", "ivy.bitwise_or", "ivy.Container.static_bitwise_or", "bitwise_right_shift", "ivy.Array.bitwise_right_shift", "ivy.Container.bitwise_right_shift", "ivy.bitwise_right_shift", "ivy.Container.static_bitwise_right_shift", "bitwise_xor", "ivy.Array.bitwise_xor", "ivy.Container.bitwise_xor", "ivy.bitwise_xor", "ivy.Container.static_bitwise_xor", "ceil", "ivy.Array.ceil", "ivy.Container.ceil", "ivy.ceil", "ivy.Container.static_ceil", "cos", "ivy.Array.cos", "ivy.Container.cos", "ivy.cos", "ivy.Container.static_cos", "cosh", "ivy.Array.cosh", "ivy.Container.cosh", "ivy.cosh", "ivy.Container.static_cosh", "deg2rad", "ivy.Array.deg2rad", "ivy.Container.deg2rad", "ivy.deg2rad", "ivy.Container.static_deg2rad", "divide", "ivy.Array.divide", "ivy.Container.divide", "ivy.divide", "ivy.Container.static_divide", "equal", "ivy.Array.equal", "ivy.Container.equal", "ivy.equal", "ivy.Container.static_equal", "erf", "ivy.Array.erf", "ivy.Container.erf", "ivy.erf", "ivy.Container.static_erf", "exp", "ivy.Array.exp", "ivy.Container.exp", "ivy.exp", "ivy.Container.static_exp", "expm1", "ivy.Array.expm1", "ivy.Container.expm1", "ivy.expm1", "ivy.Container.static_expm1", "floor", "ivy.Array.floor", "ivy.Container.floor", "ivy.floor", "ivy.Container.static_floor", "floor_divide", "ivy.Array.floor_divide", "ivy.Container.floor_divide", "ivy.floor_divide", "ivy.Container.static_floor_divide", "greater", "ivy.Array.greater", "ivy.Container.greater", "ivy.greater", "ivy.Container.static_greater", "greater_equal", "ivy.Array.greater_equal", "ivy.Container.greater_equal", "ivy.greater_equal", "ivy.Container.static_greater_equal", "isfinite", "ivy.Array.isfinite", "ivy.Container.isfinite", "ivy.isfinite", "ivy.Container.static_isfinite", "isinf", "ivy.Array.isinf", "ivy.Container.isinf", "ivy.isinf", "ivy.Container.static_isinf", "isnan", "ivy.Array.isnan", "ivy.Container.isnan", "ivy.isnan", "ivy.Container.static_isnan", "isreal", "ivy.Array.isreal", "ivy.Container.isreal", "ivy.isreal", "ivy.Container.static_isreal", "less", "ivy.Array.less", "ivy.Container.less", "ivy.less", "ivy.Container.static_less", "less_equal", "ivy.Array.less_equal", "ivy.Container.less_equal", "ivy.less_equal", "ivy.Container.static_less_equal", "log", "ivy.Array.log", "ivy.Container.log", "ivy.log", "ivy.Container.static_log", "log10", "ivy.Array.log10", "ivy.Container.log10", "ivy.log10", "ivy.Container.static_log10", "log1p", "ivy.Array.log1p", "ivy.Container.log1p", "ivy.log1p", "ivy.Container.static_log1p", "log2", "ivy.Array.log2", "ivy.Container.log2", "ivy.log2", "ivy.Container.static_log2", "logaddexp", "ivy.Array.logaddexp", "ivy.Container.logaddexp", "ivy.logaddexp", "ivy.Container.static_logaddexp", "logical_and", "ivy.Array.logical_and", "ivy.Container.logical_and", "ivy.logical_and", "ivy.Container.static_logical_and", "logical_not", "ivy.Array.logical_not", "ivy.Container.logical_not", "ivy.logical_not", "ivy.Container.static_logical_not", "logical_or", "ivy.Array.logical_or", "ivy.Container.logical_or", "ivy.logical_or", "ivy.Container.static_logical_or", "logical_xor", "ivy.Array.logical_xor", "ivy.Container.logical_xor", "ivy.logical_xor", "ivy.Container.static_logical_xor", "maximum", "ivy.Array.maximum", "ivy.Container.maximum", "ivy.maximum", "ivy.Container.static_maximum", "minimum", "ivy.Array.minimum", "ivy.Container.minimum", "ivy.minimum", "ivy.Container.static_minimum", "multiply", "ivy.Array.multiply", "ivy.Container.multiply", "ivy.multiply", "ivy.Container.static_multiply", "negative", "ivy.Array.negative", "ivy.Container.negative", "ivy.negative", "ivy.Container.static_negative", "not_equal", "ivy.Array.not_equal", "ivy.Container.not_equal", "ivy.not_equal", "ivy.Container.static_not_equal", "positive", "ivy.Array.positive", "ivy.Container.positive", "ivy.positive", "ivy.Container.static_positive", "pow", "ivy.Array.pow", "ivy.Container.pow", "ivy.pow", "ivy.Container.static_pow", "rad2deg", "ivy.Array.rad2deg", "ivy.Container.rad2deg", "ivy.rad2deg", "ivy.Container.static_rad2deg", "reciprocal", "ivy.Array.reciprocal", "ivy.Container.reciprocal", "ivy.reciprocal", "ivy.Container.static_reciprocal", "remainder", "ivy.Array.remainder", "ivy.Container.remainder", "ivy.remainder", "ivy.Container.static_remainder", "round", "ivy.Array.round", "ivy.Container.round", "ivy.round", "ivy.Container.static_round", "sign", "ivy.Array.sign", "ivy.Container.sign", "ivy.sign", "ivy.Container.static_sign", "sin", "ivy.Array.sin", "ivy.Container.sin", "ivy.sin", "ivy.Container.static_sin", "sinh", "ivy.Array.sinh", "ivy.Container.sinh", "ivy.sinh", "ivy.Container.static_sinh", "sqrt", "ivy.Array.sqrt", "ivy.Container.sqrt", "ivy.sqrt", "ivy.Container.static_sqrt", "square", "ivy.Array.square", "ivy.Container.square", "ivy.square", "ivy.Container.static_square", "subtract", "ivy.Container.static_subtract", "ivy.Array.subtract", "ivy.Container.subtract", "ivy.subtract", "tan", "ivy.Container.static_tan", "ivy.Array.tan", "ivy.Container.tan", "ivy.tan", "tanh", "ivy.Container.static_tanh", "ivy.Array.tanh", "ivy.Container.tanh", "ivy.tanh", "trunc", "ivy.Container.static_trunc", "ivy.Array.trunc", "ivy.Container.trunc", "ivy.trunc", "trunc_divide", "ivy.Container.static_trunc_divide", "ivy.Array.trunc_divide", "ivy.Container.trunc_divide", "ivy.trunc_divide", "Experimental", "NativeSparseArray", "SparseArray", "allclose", "ivy.Array.allclose", "ivy.Container.allclose", "ivy.allclose", "ivy.Container.static_allclose", "atleast_1d", "ivy.Array.atleast_1d", "ivy.Container.atleast_1d", "ivy.atleast_1d", "ivy.Container.static_atleast_1d", "atleast_2d", "ivy.Array.atleast_2d", "ivy.Container.atleast_2d", "ivy.atleast_2d", "ivy.Container.static_atleast_2d", "atleast_3d", "ivy.Array.atleast_3d", "ivy.Container.atleast_3d", "ivy.atleast_3d", "ivy.Container.static_atleast_3d", "avg_pool1d", "ivy.Array.avg_pool1d", "ivy.Container.avg_pool1d", "ivy.avg_pool1d", "ivy.Container.static_avg_pool1d", "avg_pool2d", "ivy.Array.avg_pool2d", "ivy.Container.avg_pool2d", "ivy.avg_pool2d", "ivy.Container.static_avg_pool2d", "avg_pool3d", "ivy.Array.avg_pool3d", "ivy.Container.avg_pool3d", "ivy.avg_pool3d", "ivy.Container.static_avg_pool3d", "beta", "count_nonzero", "ivy.Array.count_nonzero", "ivy.Container.count_nonzero", "ivy.count_nonzero", "ivy.Container.static_count_nonzero", "dct", "ivy.Array.dct", "ivy.Container.dct", "ivy.dct", "ivy.Container.static_dct", "diagflat", "ivy.Array.diagflat", "ivy.Container.diagflat", "ivy.diagflat", "ivy.Container.static_diagflat", "diff", "ivy.Array.diff", "ivy.diff", "ivy.Container.static_diff", "dirichlet", "ivy.Array.dirichlet", "ivy.Container.dirichlet", "ivy.dirichlet", "ivy.Container.static_dirichlet", "dsplit", "ivy.Array.dsplit", "ivy.Container.dsplit", "ivy.dsplit", "ivy.Container.static_dsplit", "dstack", "ivy.Array.dstack", "ivy.Container.dstack", "ivy.dstack", "ivy.Container.static_dstack", "exp2", "ivy.Array.exp2", "ivy.Container.exp2", "ivy.exp2", "ivy.Container.static_exp2", "fft", "fix", "ivy.Array.fix", "ivy.Container.fix", "ivy.fix", "ivy.Container.static_fix", "flatten", "ivy.Array.flatten", "ivy.Container.flatten", "ivy.flatten", "ivy.Container.static_flatten", "fliplr", "ivy.Array.fliplr", "ivy.Container.fliplr", "ivy.fliplr", "ivy.Container.static_fliplr", "flipud", "ivy.Array.flipud", "ivy.Container.flipud", "ivy.flipud", "ivy.Container.static_flipud", "float_power", "ivy.Array.float_power", "ivy.Container.float_power", "ivy.float_power", "ivy.Container.static_float_power", "fmax", "ivy.Array.fmax", "ivy.Container.fmax", "ivy.fmax", "ivy.Container.static_fmax", "fmod", "ivy.Array.fmod", "ivy.Container.fmod", "ivy.fmod", "ivy.Container.static_fmod", "gamma", "gcd", "ivy.Array.gcd", "ivy.Container.gcd", "ivy.gcd", "ivy.Container.static_gcd", "gradient", "ivy.Array.gradient", "ivy.Container.gradient", "ivy.gradient", "ivy.Container.static_gradient", "hamming_window", "ivy.Container.hamming_window", "ivy.hamming_window", "ivy.Container.static_hamming_window", "hann_window", "ivy.Container.hann_window", "ivy.hann_window", "ivy.Container.static_hann_window", "heaviside", "ivy.Array.heaviside", "ivy.Container.heaviside", "ivy.heaviside", "ivy.Container.static_heaviside", "hsplit", "ivy.Array.hsplit", "ivy.Container.hsplit", "ivy.hsplit", "ivy.Container.static_hsplit", "hstack", "ivy.Array.hstack", "ivy.Container.hstack", "ivy.hstack", "ivy.Container.static_hstack", "i0", "ivy.Array.i0", "ivy.Container.i0", "ivy.i0", "ivy.Container.static_i0", "is_ivy_sparse_array", "is_native_sparse_array", "isclose", "ivy.Array.isclose", "ivy.Container.isclose", "ivy.isclose", "ivy.Container.static_isclose", "isin", "ivy.Array.isin", "ivy.Container.isin", "ivy.isin", "ivy.Container.static_isin", "isneginf", "ivy.Array.isneginf", "ivy.Container.isneginf", "ivy.isneginf", "ivy.Container.static_isneginf", "isposinf", "ivy.Array.isposinf", "ivy.Container.isposinf", "ivy.isposinf", "ivy.Container.static_isposinf", "kaiser_bessel_derived_window", "ivy.Container.kaiser_bessel_derived_window", "ivy.kaiser_bessel_derived_window", "ivy.Container.static_kaiser_bessel_derived_window", "kaiser_window", "ivy.Container.kaiser_window", "ivy.kaiser_window", "ivy.Container.static_kaiser_window", "kron", "ivy.Array.kron", "ivy.Container.kron", "ivy.kron", "ivy.Container.static_kron", "lcm", "ivy.Array.lcm", "ivy.Container.lcm", "ivy.lcm", "ivy.Container.static_lcm", "logaddexp2", "ivy.Array.logaddexp2", "ivy.Container.logaddexp2", "ivy.logaddexp2", "ivy.Container.static_logaddexp2", "max_pool1d", "ivy.Array.max_pool1d", "ivy.Container.max_pool1d", "ivy.max_pool1d", "ivy.Container.static_max_pool1d", "max_pool2d", "ivy.Array.max_pool2d", "ivy.Container.max_pool2d", "ivy.max_pool2d", "ivy.Container.static_max_pool2d", "max_pool3d", "ivy.Array.max_pool3d", "ivy.Container.max_pool3d", "ivy.max_pool3d", "ivy.Container.static_max_pool3d", "median", "ivy.Array.median", "ivy.Container.median", "ivy.median", "ivy.Container.static_median", "moveaxis", "ivy.Array.moveaxis", "ivy.Container.moveaxis", "ivy.moveaxis", "ivy.Container.static_moveaxis", "msort", "ivy.Array.msort", "ivy.Container.msort", "ivy.msort", "ivy.Container.static_msort", "nan_to_num", "ivy.Array.nan_to_num", "ivy.Container.nan_to_num", "ivy.nan_to_num", "ivy.Container.static_nan_to_num", "nanmean", "ivy.Array.nanmean", "ivy.Container.nanmean", "ivy.nanmean", "ivy.Container.static_nanmean", "nansum", "ivy.Array.nansum", "ivy.Container.nansum", "ivy.nansum", "ivy.Container.static_nansum", "native_sparse_array", "native_sparse_array_to_indices_values_and_shape", "ndenumerate", "ndindex", "nextafter", "ivy.Array.nextafter", "ivy.Container.nextafter", "ivy.nextafter", "ivy.Container.static_nextafter", "pad", "ivy.Array.pad", "ivy.Container.pad", "ivy.pad", "ivy.Container.static_pad", "quantile", "ivy.Array.quantile", "ivy.Container.quantile", "ivy.quantile", "ivy.Container.static_quantile", "rot90", "ivy.Array.rot90", "ivy.Container.rot90", "ivy.rot90", "ivy.Container.static_rot90", "signbit", "ivy.Array.signbit", "ivy.Container.signbit", "ivy.signbit", "ivy.Container.static_signbit", "sinc", "ivy.Array.sinc", "ivy.Container.sinc", "ivy.sinc", "ivy.Container.static_sinc", "take_along_axis", "ivy.Container.static_take_along_axis", "ivy.Array.take_along_axis", "ivy.Container.take_along_axis", "ivy.take_along_axis", "top_k", "ivy.Container.static_top_k", "ivy.Array.top_k", "ivy.Container.top_k", "ivy.top_k", "trapz", "ivy.Array.trapz", "ivy.trapz", "triu_indices", "ivy.Container.static_triu_indices", "ivy.Container.triu_indices", "ivy.triu_indices", "unravel_index", "ivy.Container.static_unravel_index", "ivy.Array.unravel_index", "ivy.Container.unravel_index", "ivy.unravel_index", "vorbis_window", "ivy.Container.static_vorbis_window", "ivy.Container.vorbis_window", "ivy.vorbis_window", "vsplit", "ivy.Container.static_vsplit", "ivy.Array.vsplit", "ivy.Container.vsplit", "ivy.vsplit", "vstack", "ivy.Container.static_vstack", "ivy.Array.vstack", "ivy.Container.vstack", "ivy.vstack", "zeta", "ivy.Container.static_zeta", "ivy.Array.zeta", "ivy.Container.zeta", "ivy.zeta", "&lt;no title&gt;", "General", "all_equal", "ivy.Array.all_equal", "ivy.Container.all_equal", "ivy.all_equal", "ivy.Container.static_all_equal", "arg_info", "arg_names", "array_equal", "ivy.Array.array_equal", "ivy.array_equal", "assert_supports_inplace", "ivy.Array.assert_supports_inplace", "ivy.Container.assert_supports_inplace", "ivy.assert_supports_inplace", "ivy.Container.static_assert_supports_inplace", "cache_fn", "clip_matrix_norm", "ivy.Array.clip_matrix_norm", "ivy.Container.clip_matrix_norm", "ivy.clip_matrix_norm", "ivy.Container.static_clip_matrix_norm", "clip_vector_norm", "ivy.Array.clip_vector_norm", "ivy.Container.clip_vector_norm", "ivy.clip_vector_norm", "ivy.Container.static_clip_vector_norm", "container_types", "current_backend_str", "default", "ivy.Array.default", "ivy.default", "einops_rearrange", "ivy.Array.einops_rearrange", "ivy.Container.einops_rearrange", "ivy.einops_rearrange", "ivy.Container.static_einops_rearrange", "einops_reduce", "ivy.Array.einops_reduce", "ivy.Container.einops_reduce", "ivy.einops_reduce", "ivy.Container.static_einops_reduce", "einops_repeat", "ivy.Array.einops_repeat", "ivy.Container.einops_repeat", "ivy.einops_repeat", "ivy.Container.static_einops_repeat", "exists", "ivy.Array.exists", "ivy.exists", "fourier_encode", "ivy.Array.fourier_encode", "ivy.Container.fourier_encode", "ivy.fourier_encode", "ivy.Container.static_fourier_encode", "function_supported_devices_and_dtypes", "function_unsupported_devices_and_dtypes", "gather", "ivy.Array.gather", "ivy.Container.gather", "ivy.gather", "ivy.Container.static_gather", "gather_nd", "ivy.Array.gather_nd", "ivy.Container.gather_nd", "ivy.gather_nd", "ivy.Container.static_gather_nd", "get_all_arrays_in_memory", "get_array_mode", "get_exception_trace_mode", "get_item", "get_min_base", "get_min_denominator", "get_nestable_mode", "get_num_dims", "ivy.Array.get_num_dims", "ivy.Container.get_num_dims", "ivy.get_num_dims", "ivy.Container.static_get_num_dims", "get_queue_timeout", "get_referrers_recursive", "get_show_func_wrapper_trace_mode", "get_tmp_dir", "has_nans", "ivy.Array.has_nans", "ivy.Container.has_nans", "ivy.has_nans", "ivy.Container.static_has_nans", "inplace_arrays_supported", "inplace_decrement", "ivy.Array.inplace_decrement", "ivy.Container.inplace_decrement", "ivy.inplace_decrement", "ivy.Container.static_inplace_decrement", "inplace_increment", "ivy.Array.inplace_increment", "ivy.Container.inplace_increment", "ivy.inplace_increment", "ivy.Container.static_inplace_increment", "inplace_update", "ivy.Array.inplace_update", "ivy.Container.inplace_update", "ivy.inplace_update", "ivy.Container.static_inplace_update", "inplace_variables_supported", "is_array", "ivy.Array.is_array", "ivy.Container.is_array", "ivy.is_array", "ivy.Container.static_is_array", "is_ivy_array", "ivy.Array.is_ivy_array", "ivy.Container.is_ivy_array", "ivy.is_ivy_array", "ivy.Container.static_is_ivy_array", "is_ivy_container", "ivy.Array.is_ivy_container", "ivy.is_ivy_container", "is_native_array", "ivy.Array.is_native_array", "ivy.Container.is_native_array", "ivy.is_native_array", "ivy.Container.static_is_native_array", "isscalar", "match_kwargs", "multiprocessing", "num_arrays_in_memory", "print_all_arrays_in_memory", "scatter_flat", "ivy.Array.scatter_flat", "ivy.Container.scatter_flat", "ivy.scatter_flat", "ivy.Container.static_scatter_flat", "scatter_nd", "ivy.Array.scatter_nd", "ivy.Container.scatter_nd", "ivy.scatter_nd", "ivy.Container.static_scatter_nd", "set_array_mode", "set_exception_trace_mode", "set_min_base", "set_min_denominator", "set_nestable_mode", "set_queue_timeout", "set_shape_array_mode", "set_show_func_wrapper_trace_mode", "set_tmp_dir", "shape", "shape_array_mode", "stable_divide", "ivy.Array.stable_divide", "ivy.Container.stable_divide", "ivy.stable_divide", "ivy.Container.static_stable_divide", "stable_pow", "ivy.Array.stable_pow", "ivy.Container.stable_pow", "ivy.stable_pow", "ivy.Container.static_stable_pow", "supports_inplace_updates", "ivy.Container.static_supports_inplace_updates", "ivy.Array.supports_inplace_updates", "ivy.Container.supports_inplace_updates", "ivy.supports_inplace_updates", "to_ivy_shape", "to_list", "ivy.Container.static_to_list", "ivy.Array.to_list", "ivy.to_list", "to_native_shape", "to_numpy", "ivy.Container.static_to_numpy", "ivy.Array.to_numpy", "ivy.Container.to_numpy", "ivy.to_numpy", "to_scalar", "ivy.Container.static_to_scalar", "ivy.Array.to_scalar", "ivy.Container.to_scalar", "ivy.to_scalar", "try_else_none", "unset_array_mode", "unset_exception_trace_mode", "unset_nestable_mode", "unset_queue_timeout", "unset_shape_array_mode", "unset_show_func_wrapper_trace_mode", "value_is_nan", "ivy.Container.static_value_is_nan", "ivy.Array.value_is_nan", "ivy.Container.value_is_nan", "ivy.value_is_nan", "vmap", "Gradients", "GradientTracking", "adam_step", "ivy.Array.adam_step", "ivy.Container.adam_step", "ivy.adam_step", "adam_update", "ivy.Array.adam_update", "ivy.Container.adam_update", "ivy.adam_update", "execute_with_gradients", "grad", "gradient_descent_update", "ivy.Array.gradient_descent_update", "ivy.Container.gradient_descent_update", "ivy.gradient_descent_update", "jac", "lamb_update", "ivy.Array.lamb_update", "ivy.Container.lamb_update", "ivy.lamb_update", "lars_update", "ivy.Array.lars_update", "ivy.Container.lars_update", "ivy.lars_update", "optimizer_update", "ivy.Array.optimizer_update", "ivy.Container.optimizer_update", "ivy.optimizer_update", "set_with_grads", "stop_gradient", "ivy.Container.static_stop_gradient", "ivy.Array.stop_gradient", "ivy.Container.stop_gradient", "ivy.stop_gradient", "unset_with_grads", "value_and_grad", "with_grads", "Layers", "conv", "conv1d", "ivy.Array.conv1d", "ivy.Container.conv1d", "ivy.conv1d", "ivy.Container.static_conv1d", "conv1d_transpose", "ivy.Array.conv1d_transpose", "ivy.Container.conv1d_transpose", "ivy.conv1d_transpose", "ivy.Container.static_conv1d_transpose", "conv2d", "ivy.Array.conv2d", "ivy.Container.conv2d", "ivy.conv2d", "ivy.Container.static_conv2d", "conv2d_transpose", "ivy.Container.conv2d_transpose", "ivy.conv2d_transpose", "ivy.Container.static_conv2d_transpose", "conv3d", "ivy.Array.conv3d", "ivy.Container.conv3d", "ivy.conv3d", "ivy.Container.static_conv3d", "conv3d_transpose", "ivy.Array.conv3d_transpose", "ivy.Container.conv3d_transpose", "ivy.conv3d_transpose", "ivy.Container.static_conv3d_transpose", "conv_general_dilated", "conv_general_transpose", "deconv_length", "depthwise_conv2d", "ivy.Array.depthwise_conv2d", "ivy.Container.depthwise_conv2d", "ivy.depthwise_conv2d", "ivy.Container.static_depthwise_conv2d", "dropout", "ivy.Array.dropout", "ivy.Container.dropout", "ivy.dropout", "ivy.Container.static_dropout", "dropout1d", "ivy.Array.dropout1d", "ivy.Container.dropout1d", "ivy.dropout1d", "ivy.Container.static_dropout1d", "get_x_data_format", "handle_padding", "linear", "ivy.Array.linear", "ivy.Container.linear", "ivy.linear", "ivy.Container.static_linear", "lstm_update", "ivy.Array.lstm_update", "ivy.Container.lstm_update", "ivy.lstm_update", "ivy.Container.static_lstm_update", "multi_head_attention", "ivy.Array.multi_head_attention", "ivy.Container.multi_head_attention", "ivy.multi_head_attention", "ivy.Container.static_multi_head_attention", "scaled_dot_product_attention", "ivy.Array.scaled_dot_product_attention", "ivy.Container.scaled_dot_product_attention", "ivy.scaled_dot_product_attention", "ivy.Container.static_scaled_dot_product_attention", "Linear algebra", "cholesky", "ivy.Array.cholesky", "ivy.Container.cholesky", "ivy.cholesky", "ivy.Container.static_cholesky", "cross", "ivy.Array.cross", "ivy.Container.cross", "ivy.cross", "ivy.Container.static_cross", "det", "ivy.Array.det", "ivy.Container.det", "ivy.det", "ivy.Container.static_det", "diag", "ivy.Array.diag", "ivy.Container.diag", "ivy.diag", "ivy.Container.static_diag", "diagonal", "ivy.Array.diagonal", "ivy.Container.diagonal", "ivy.diagonal", "ivy.Container.static_diagonal", "eig", "ivy.Array.eig", "ivy.Container.eig", "ivy.eig", "eigh", "ivy.Array.eigh", "ivy.Container.eigh", "ivy.eigh", "ivy.Container.static_eigh", "eigvalsh", "ivy.Array.eigvalsh", "ivy.Container.eigvalsh", "ivy.eigvalsh", "ivy.Container.static_eigvalsh", "inner", "ivy.Array.inner", "ivy.Container.inner", "ivy.inner", "ivy.Container.static_inner", "inv", "ivy.Array.inv", "ivy.Container.inv", "ivy.inv", "ivy.Container.static_inv", "matmul", "ivy.Array.matmul", "ivy.Container.matmul", "ivy.matmul", "ivy.Container.static_matmul", "matrix_norm", "ivy.Array.matrix_norm", "ivy.Container.matrix_norm", "ivy.matrix_norm", "ivy.Container.static_matrix_norm", "matrix_power", "ivy.Array.matrix_power", "ivy.Container.matrix_power", "ivy.matrix_power", "ivy.Container.static_matrix_power", "matrix_rank", "ivy.Array.matrix_rank", "ivy.Container.matrix_rank", "ivy.matrix_rank", "ivy.Container.static_matrix_rank", "matrix_transpose", "ivy.Array.matrix_transpose", "ivy.Container.matrix_transpose", "ivy.matrix_transpose", "ivy.Container.static_matrix_transpose", "outer", "ivy.Array.outer", "ivy.Container.outer", "ivy.outer", "ivy.Container.static_outer", "pinv", "ivy.Array.pinv", "ivy.Container.pinv", "ivy.pinv", "ivy.Container.static_pinv", "qr", "ivy.Array.qr", "ivy.Container.qr", "ivy.qr", "ivy.Container.static_qr", "slogdet", "ivy.Array.slogdet", "ivy.Container.slogdet", "ivy.slogdet", "ivy.Container.static_slogdet", "solve", "ivy.Array.solve", "ivy.Container.solve", "ivy.solve", "ivy.Container.static_solve", "svd", "ivy.Container.static_svd", "ivy.Array.svd", "ivy.Container.svd", "ivy.svd", "svdvals", "ivy.Container.static_svdvals", "ivy.Array.svdvals", "ivy.Container.svdvals", "ivy.svdvals", "tensordot", "ivy.Container.static_tensordot", "ivy.Container.tensordot", "ivy.tensordot", "tensorsolve", "ivy.Array.tensorsolve", "ivy.Container.tensorsolve", "ivy.tensorsolve", "trace", "ivy.Container.static_trace", "ivy.Array.trace", "ivy.Container.trace", "ivy.trace", "vander", "ivy.Container.static_vander", "ivy.Array.vander", "ivy.Container.vander", "ivy.vander", "vecdot", "ivy.Container.static_vecdot", "ivy.Array.vecdot", "ivy.Container.vecdot", "ivy.vecdot", "vector_norm", "ivy.Container.static_vector_norm", "ivy.Array.vector_norm", "ivy.Container.vector_norm", "ivy.vector_norm", "vector_to_skew_symmetric_matrix", "ivy.Container.static_vector_to_skew_symmetric_matrix", "ivy.Array.vector_to_skew_symmetric_matrix", "ivy.Container.vector_to_skew_symmetric_matrix", "ivy.vector_to_skew_symmetric_matrix", "Losses", "binary_cross_entropy", "ivy.Array.binary_cross_entropy", "ivy.Container.binary_cross_entropy", "ivy.binary_cross_entropy", "ivy.Container.static_binary_cross_entropy", "binary_cross_entropy_with_logits", "cross_entropy", "ivy.Array.cross_entropy", "ivy.Container.cross_entropy", "ivy.cross_entropy", "ivy.Container.static_cross_entropy", "sparse_cross_entropy", "ivy.Array.sparse_cross_entropy", "ivy.Container.sparse_cross_entropy", "ivy.sparse_cross_entropy", "ivy.Container.static_sparse_cross_entropy", "Manipulation", "clip", "ivy.Array.clip", "ivy.Container.clip", "ivy.clip", "ivy.Container.static_clip", "concat", "ivy.Array.concat", "ivy.Container.concat", "ivy.concat", "ivy.Container.static_concat", "constant_pad", "ivy.Array.constant_pad", "ivy.Container.constant_pad", "ivy.constant_pad", "ivy.Container.static_constant_pad", "expand_dims", "ivy.Array.expand_dims", "ivy.Container.expand_dims", "ivy.expand_dims", "ivy.Container.static_expand_dims", "flip", "ivy.Array.flip", "ivy.Container.flip", "ivy.flip", "ivy.Container.static_flip", "permute_dims", "ivy.Array.permute_dims", "ivy.Container.permute_dims", "ivy.permute_dims", "ivy.Container.static_permute_dims", "repeat", "ivy.Array.repeat", "ivy.Container.repeat", "ivy.repeat", "ivy.Container.static_repeat", "reshape", "ivy.Array.reshape", "ivy.Container.reshape", "ivy.reshape", "ivy.Container.static_reshape", "roll", "ivy.Array.roll", "ivy.Container.roll", "ivy.roll", "ivy.Container.static_roll", "split", "ivy.Array.split", "ivy.Container.split", "ivy.split", "ivy.Container.static_split", "squeeze", "ivy.Array.squeeze", "ivy.Container.squeeze", "ivy.squeeze", "ivy.Container.static_squeeze", "stack", "ivy.Array.stack", "ivy.Container.stack", "ivy.stack", "ivy.Container.static_stack", "swapaxes", "ivy.Container.static_swapaxes", "ivy.Array.swapaxes", "ivy.Container.swapaxes", "ivy.swapaxes", "tile", "ivy.Container.static_tile", "ivy.Array.tile", "ivy.Container.tile", "ivy.tile", "unstack", "ivy.Container.static_unstack", "ivy.Array.unstack", "ivy.Container.unstack", "ivy.unstack", "zero_pad", "ivy.Container.static_zero_pad", "ivy.Array.zero_pad", "ivy.Container.zero_pad", "ivy.zero_pad", "Meta", "fomaml_step", "maml_step", "reptile_step", "Nest", "all_nested_indices", "copy_nest", "duplicate_array_index_chains", "index_nest", "insert_into_nest_at_index", "insert_into_nest_at_indices", "map", "map_nest_at_index", "map_nest_at_indices", "multi_index_nest", "nested_any", "nested_argwhere", "nested_map", "nested_multi_map", "prune_nest_at_index", "prune_nest_at_indices", "set_nest_at_index", "set_nest_at_indices", "Norms", "layer_norm", "ivy.Array.layer_norm", "ivy.Container.layer_norm", "ivy.layer_norm", "Random", "multinomial", "ivy.Array.multinomial", "ivy.Container.multinomial", "ivy.multinomial", "ivy.Container.static_multinomial", "randint", "ivy.Array.randint", "ivy.Container.randint", "ivy.randint", "ivy.Container.static_randint", "random_normal", "ivy.Array.random_normal", "ivy.Container.random_normal", "ivy.random_normal", "ivy.Container.static_random_normal", "random_uniform", "ivy.Array.random_uniform", "ivy.Container.random_uniform", "ivy.random_uniform", "ivy.Container.static_random_uniform", "seed", "shuffle", "ivy.Array.shuffle", "ivy.Container.shuffle", "ivy.shuffle", "ivy.Container.static_shuffle", "Searching", "argmax", "ivy.Array.argmax", "ivy.Container.argmax", "ivy.argmax", "ivy.Container.static_argmax", "argmin", "ivy.Array.argmin", "ivy.Container.argmin", "ivy.argmin", "ivy.Container.static_argmin", "argwhere", "ivy.Array.argwhere", "ivy.Container.argwhere", "ivy.argwhere", "ivy.Container.static_argwhere", "nonzero", "ivy.Array.nonzero", "ivy.Container.nonzero", "ivy.nonzero", "ivy.Container.static_nonzero", "where", "ivy.Container.static_where", "ivy.Array.where", "ivy.Container.where", "ivy.where", "Set", "unique_all", "ivy.Container.static_unique_all", "ivy.Array.unique_all", "ivy.Container.unique_all", "ivy.unique_all", "unique_counts", "ivy.Container.static_unique_counts", "ivy.Array.unique_counts", "ivy.Container.unique_counts", "ivy.unique_counts", "unique_inverse", "ivy.Container.static_unique_inverse", "ivy.Array.unique_inverse", "ivy.Container.unique_inverse", "ivy.unique_inverse", "unique_values", "ivy.Container.static_unique_values", "ivy.Array.unique_values", "ivy.Container.unique_values", "ivy.unique_values", "Sorting", "argsort", "ivy.Array.argsort", "ivy.Container.argsort", "ivy.argsort", "ivy.Container.static_argsort", "searchsorted", "ivy.Array.searchsorted", "ivy.Container.searchsorted", "ivy.searchsorted", "ivy.Container.static_searchsorted", "sort", "ivy.Array.sort", "ivy.Container.sort", "ivy.sort", "ivy.Container.static_sort", "Statistical", "cumprod", "ivy.Array.cumprod", "ivy.Container.cumprod", "ivy.cumprod", "ivy.Container.static_cumprod", "cumsum", "ivy.Array.cumsum", "ivy.Container.cumsum", "ivy.cumsum", "ivy.Container.static_cumsum", "einsum", "ivy.Array.einsum", "ivy.Container.einsum", "ivy.einsum", "max", "ivy.Array.max", "ivy.Container.max", "ivy.max", "mean", "ivy.Array.mean", "ivy.Container.mean", "ivy.mean", "min", "ivy.Array.min", "ivy.Container.min", "ivy.min", "prod", "ivy.Array.prod", "ivy.Container.prod", "ivy.prod", "ivy.Container.static_prod", "std", "ivy.Array.std", "ivy.Container.std", "ivy.std", "sum", "ivy.Container.static_sum", "ivy.Array.sum", "ivy.Container.sum", "ivy.sum", "var", "ivy.Container.static_var", "ivy.Array.var", "ivy.Container.var", "ivy.var", "Utility", "all", "ivy.Array.all", "ivy.Container.all", "ivy.all", "ivy.Container.static_all", "any", "ivy.Array.any", "ivy.Container.any", "ivy.any", "ivy.Container.static_any", "Glossary", "Contents", "&lt;no title&gt;", "&lt;no title&gt;", "Inspection", "add_array_specs", "fn_array_spec", "Related Work", "API Standards", "Compiler Infrastructure", "Exchange Formats", "Frameworks", "Graph Tracers", "ML-Unifying Companies", "Multi-Vendor Compiler Frameworks", "Vendor-Specific APIs", "Vendor-Specific Compilers", "What does Ivy Add?", "Wrapper Frameworks", "Framework classes", "Activations", "GEGLU", "GELU", "Converters", "to_ivy_module", "Initializers", "Constant", "FirstLayerSiren", "GlorotUniform", "Initializer", "KaimingNormal", "Ones", "Siren", "Uniform", "Zeros", "Layers", "Conv1D", "Conv1DTranspose", "Conv2D", "Conv2DTranspose", "Conv3D", "Conv3DTranspose", "DepthwiseConv2D", "Dropout", "LSTM", "Linear", "MultiHeadAttention", "Module", "Module", "MyTFModule", "MyTorchModule", "Norms", "LayerNorm", "Optimizers", "Adam", "LAMB", "LARS", "Optimizer", "SGD", "Sequential", "Sequential", "&lt;no title&gt;", "Verbosity", "cprint"], "terms": {"version": [0, 19, 24, 27, 34, 35, 36, 42, 43, 63, 111, 148, 151, 159, 164, 182, 1090, 1282, 1392, 1422, 1425, 1427, 1430, 1809, 1825, 1826], "ivi": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 145, 146, 148, 149, 151, 153, 154, 155, 156, 157, 162, 163, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 196, 197, 198, 203, 204, 209, 214, 219, 224, 229, 234, 235, 236, 237, 238, 239, 242, 246, 247, 248, 249, 252, 253, 258, 261, 266, 267, 272, 277, 280, 285, 290, 295, 298, 303, 308, 313, 316, 321, 322, 323, 324, 325, 326, 327, 328, 333, 338, 343, 348, 349, 350, 351, 354, 355, 356, 360, 361, 366, 369, 372, 377, 378, 379, 384, 389, 394, 399, 400, 401, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 446, 447, 448, 449, 450, 451, 456, 461, 466, 471, 476, 481, 486, 491, 496, 501, 506, 511, 516, 521, 526, 531, 536, 541, 546, 551, 556, 561, 566, 571, 576, 581, 586, 591, 596, 601, 606, 611, 616, 621, 626, 631, 636, 641, 646, 651, 656, 661, 666, 671, 676, 681, 686, 691, 696, 701, 706, 711, 716, 721, 726, 731, 736, 741, 746, 751, 756, 761, 766, 1090, 1091, 1096, 1097, 1098, 1101, 1106, 1107, 1112, 1117, 1118, 1119, 1122, 1127, 1132, 1137, 1140, 1145, 1146, 1147, 1152, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1169, 1170, 1171, 1172, 1173, 1178, 1179, 1184, 1189, 1194, 1195, 1200, 1205, 1208, 1213, 1214, 1215, 1216, 1217, 1218, 1223, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1244, 1249, 1254, 1255, 1259, 1260, 1265, 1270, 1271, 1272, 1273, 1274, 1275, 1276, 1277, 1282, 1283, 1284, 1285, 1289, 1293, 1294, 1295, 1299, 1300, 1304, 1308, 1312, 1313, 1318, 1319, 1320, 1321, 1322, 1323, 1328, 1333, 1338, 1342, 1347, 1352, 1353, 1354, 1355, 1360, 1365, 1370, 1371, 1372, 1377, 1382, 1387, 1392, 1393, 1398, 1403, 1408, 1413, 1418, 1422, 1427, 1432, 1437, 1442, 1447, 1452, 1457, 1462, 1467, 1472, 1477, 1482, 1487, 1492, 1497, 1502, 1506, 1510, 1515, 1520, 1525, 1530, 1535, 1536, 1541, 1542, 1547, 1552, 1553, 1558, 1563, 1568, 1573, 1578, 1583, 1588, 1593, 1598, 1603, 1608, 1613, 1618, 1623, 1628, 1633, 1634, 1635, 1636, 1637, 1638, 1639, 1640, 1641, 1642, 1643, 1644, 1645, 1646, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654, 1655, 1656, 1657, 1661, 1662, 1667, 1672, 1677, 1682, 1683, 1688, 1689, 1694, 1699, 1704, 1709, 1714, 1715, 1720, 1725, 1730, 1735, 1736, 1741, 1746, 1751, 1752, 1757, 1762, 1766, 1770, 1774, 1778, 1783, 1787, 1792, 1797, 1798, 1803, 1808, 1809, 1815, 1826, 1870, 1871], "check_al": 1, "result": [1, 2, 4, 43, 45, 46, 47, 48, 49, 55, 56, 57, 58, 61, 62, 63, 64, 65, 66, 67, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 88, 89, 90, 91, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 134, 135, 136, 137, 138, 139, 143, 144, 146, 147, 148, 150, 151, 154, 156, 157, 158, 159, 160, 161, 164, 167, 181, 196, 198, 201, 204, 207, 209, 212, 214, 217, 219, 222, 224, 227, 229, 232, 237, 239, 240, 242, 244, 249, 251, 252, 253, 256, 258, 259, 261, 264, 266, 267, 270, 272, 275, 277, 278, 290, 293, 295, 296, 298, 301, 303, 307, 308, 312, 313, 315, 316, 320, 321, 328, 331, 338, 341, 400, 401, 404, 416, 441, 445, 450, 451, 454, 456, 459, 461, 464, 466, 469, 471, 474, 476, 479, 481, 484, 486, 489, 491, 494, 496, 499, 501, 504, 506, 509, 511, 514, 516, 519, 521, 524, 526, 529, 531, 534, 536, 539, 541, 544, 546, 549, 551, 554, 556, 559, 561, 564, 566, 569, 571, 574, 576, 579, 581, 584, 586, 589, 591, 594, 596, 599, 601, 604, 606, 609, 611, 614, 616, 619, 621, 624, 626, 629, 631, 634, 636, 639, 641, 644, 646, 649, 651, 654, 656, 659, 661, 664, 666, 669, 671, 674, 676, 679, 681, 684, 686, 689, 691, 694, 696, 699, 701, 704, 706, 709, 711, 714, 716, 719, 721, 724, 726, 729, 731, 734, 736, 739, 741, 744, 746, 750, 751, 755, 756, 760, 761, 765, 766, 770, 1090, 1107, 1110, 1112, 1115, 1122, 1125, 1127, 1130, 1132, 1135, 1147, 1150, 1152, 1155, 1218, 1221, 1223, 1226, 1283, 1293, 1295, 1298, 1304, 1307, 1308, 1311, 1313, 1317, 1321, 1323, 1326, 1328, 1331, 1333, 1336, 1338, 1340, 1342, 1345, 1347, 1350, 1352, 1353, 1355, 1358, 1360, 1363, 1365, 1368, 1372, 1375, 1382, 1385, 1387, 1390, 1392, 1393, 1396, 1398, 1401, 1403, 1406, 1408, 1411, 1413, 1416, 1427, 1430, 1432, 1435, 1437, 1440, 1442, 1445, 1447, 1450, 1452, 1455, 1457, 1460, 1462, 1465, 1467, 1470, 1472, 1475, 1482, 1485, 1487, 1490, 1492, 1496, 1497, 1501, 1502, 1505, 1510, 1514, 1515, 1519, 1520, 1524, 1525, 1529, 1530, 1534, 1535, 1536, 1539, 1541, 1542, 1545, 1547, 1550, 1552, 1553, 1556, 1558, 1561, 1563, 1566, 1568, 1571, 1573, 1576, 1578, 1581, 1583, 1586, 1588, 1591, 1593, 1596, 1603, 1606, 1608, 1611, 1613, 1617, 1618, 1622, 1628, 1632, 1637, 1641, 1644, 1647, 1651, 1656, 1657, 1660, 1661, 1662, 1665, 1667, 1670, 1672, 1675, 1677, 1680, 1683, 1686, 1688, 1689, 1692, 1694, 1697, 1699, 1702, 1709, 1713, 1714, 1715, 1719, 1725, 1729, 1730, 1734, 1735, 1736, 1739, 1741, 1744, 1746, 1749, 1751, 1752, 1755, 1757, 1760, 1762, 1765, 1766, 1769, 1770, 1773, 1774, 1777, 1778, 1781, 1783, 1786, 1787, 1791, 1792, 1796, 1797, 1798, 1801, 1803, 1806, 1809, 1820, 1822], "messag": [1, 2, 3, 4, 5, 6, 7, 8, 12, 14, 15, 17, 18, 35, 43, 147, 150, 152, 153, 158, 164, 166, 1870, 1871], "one": [1, 2, 19, 25, 27, 35, 36, 41, 42, 43, 55, 56, 63, 64, 65, 72, 73, 76, 77, 82, 83, 84, 85, 88, 89, 97, 98, 103, 104, 109, 110, 111, 112, 113, 114, 115, 120, 121, 124, 125, 126, 127, 130, 131, 132, 133, 134, 135, 136, 137, 143, 144, 145, 146, 148, 150, 153, 154, 155, 156, 157, 158, 160, 162, 163, 166, 167, 169, 181, 237, 239, 240, 249, 251, 280, 283, 290, 293, 321, 333, 336, 343, 346, 416, 440, 450, 516, 519, 641, 644, 666, 669, 671, 674, 1090, 1091, 1094, 1214, 1218, 1221, 1223, 1226, 1229, 1283, 1285, 1288, 1295, 1298, 1300, 1303, 1308, 1311, 1313, 1317, 1321, 1333, 1336, 1342, 1345, 1392, 1432, 1435, 1442, 1445, 1447, 1450, 1467, 1470, 1477, 1480, 1520, 1524, 1525, 1529, 1552, 1568, 1571, 1573, 1576, 1578, 1581, 1593, 1596, 1603, 1606, 1656, 1657, 1660, 1688, 1689, 1692, 1704, 1707, 1714, 1715, 1719, 1720, 1724, 1725, 1729, 1730, 1734, 1751, 1762, 1765, 1809, 1819, 1820, 1822, 1825], "arg": [1, 2, 3, 4, 19, 23, 39, 50, 51, 52, 88, 89, 97, 98, 152, 158, 164, 168, 237, 238, 416, 440, 1090, 1270], "i": [1, 2, 19, 23, 24, 25, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 61, 62, 63, 64, 65, 66, 67, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 86, 87, 88, 89, 90, 91, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 169, 180, 181, 196, 198, 201, 209, 212, 224, 227, 234, 235, 236, 237, 239, 240, 242, 244, 252, 253, 256, 258, 259, 261, 264, 266, 267, 270, 272, 275, 277, 278, 280, 283, 285, 288, 290, 293, 295, 296, 298, 301, 303, 307, 308, 312, 313, 315, 316, 320, 321, 328, 331, 338, 341, 343, 346, 348, 350, 351, 352, 354, 355, 356, 358, 361, 364, 366, 367, 369, 370, 372, 375, 378, 379, 382, 384, 387, 389, 392, 394, 397, 401, 404, 415, 416, 417, 418, 420, 422, 423, 425, 428, 429, 431, 432, 435, 439, 440, 446, 447, 449, 450, 451, 454, 456, 459, 461, 464, 466, 469, 471, 474, 476, 479, 481, 484, 486, 489, 491, 494, 496, 499, 501, 504, 506, 509, 516, 519, 521, 524, 526, 529, 531, 534, 536, 539, 546, 549, 551, 554, 561, 564, 566, 569, 571, 574, 576, 579, 581, 584, 586, 589, 591, 594, 596, 599, 601, 604, 606, 609, 616, 619, 621, 624, 626, 629, 631, 634, 636, 639, 641, 644, 646, 649, 651, 654, 656, 659, 661, 664, 666, 669, 671, 674, 676, 679, 681, 684, 686, 689, 691, 694, 696, 699, 711, 714, 716, 719, 721, 724, 726, 729, 731, 734, 736, 739, 741, 744, 746, 750, 751, 755, 756, 760, 761, 765, 1090, 1091, 1094, 1098, 1100, 1106, 1107, 1110, 1112, 1115, 1119, 1121, 1137, 1139, 1140, 1143, 1145, 1146, 1147, 1150, 1163, 1164, 1167, 1169, 1171, 1173, 1176, 1179, 1182, 1189, 1192, 1195, 1198, 1200, 1203, 1205, 1207, 1208, 1211, 1214, 1215, 1223, 1226, 1233, 1249, 1253, 1260, 1264, 1265, 1269, 1270, 1277, 1281, 1282, 1283, 1289, 1292, 1295, 1298, 1300, 1303, 1304, 1307, 1308, 1311, 1312, 1313, 1317, 1318, 1320, 1321, 1333, 1336, 1342, 1345, 1355, 1358, 1360, 1363, 1365, 1368, 1372, 1375, 1382, 1385, 1387, 1390, 1392, 1393, 1396, 1398, 1401, 1403, 1406, 1408, 1411, 1413, 1416, 1418, 1421, 1422, 1425, 1427, 1430, 1432, 1435, 1437, 1440, 1442, 1445, 1447, 1450, 1452, 1455, 1457, 1460, 1462, 1465, 1467, 1470, 1472, 1475, 1477, 1480, 1482, 1485, 1487, 1490, 1492, 1496, 1497, 1501, 1502, 1505, 1510, 1514, 1515, 1519, 1520, 1524, 1525, 1529, 1530, 1534, 1535, 1536, 1539, 1541, 1542, 1545, 1547, 1550, 1552, 1553, 1556, 1558, 1561, 1563, 1566, 1568, 1571, 1573, 1576, 1578, 1581, 1583, 1586, 1588, 1591, 1593, 1596, 1598, 1601, 1603, 1606, 1608, 1611, 1613, 1617, 1618, 1622, 1623, 1627, 1628, 1632, 1633, 1634, 1635, 1636, 1637, 1638, 1639, 1640, 1641, 1644, 1645, 1647, 1648, 1649, 1650, 1651, 1654, 1656, 1657, 1660, 1661, 1662, 1665, 1667, 1670, 1672, 1675, 1677, 1680, 1688, 1689, 1692, 1694, 1697, 1704, 1707, 1709, 1713, 1714, 1715, 1719, 1720, 1724, 1725, 1729, 1730, 1734, 1735, 1736, 1739, 1741, 1744, 1746, 1749, 1751, 1752, 1755, 1757, 1760, 1762, 1765, 1766, 1769, 1770, 1773, 1774, 1777, 1778, 1781, 1783, 1786, 1787, 1791, 1792, 1796, 1797, 1798, 1801, 1803, 1806, 1808, 1809, 1815, 1816, 1817, 1818, 1819, 1820, 1821, 1822, 1823, 1824, 1825, 1826], "fals": [1, 2, 4, 6, 7, 8, 12, 15, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 72, 73, 76, 77, 82, 83, 86, 87, 88, 89, 90, 91, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 143, 145, 148, 150, 152, 157, 158, 159, 160, 164, 167, 168, 169, 196, 198, 201, 237, 266, 280, 283, 321, 328, 331, 343, 346, 348, 350, 351, 352, 354, 355, 356, 358, 377, 378, 379, 382, 389, 392, 394, 397, 399, 400, 416, 422, 423, 425, 431, 432, 435, 436, 440, 447, 449, 450, 496, 499, 551, 554, 581, 584, 586, 589, 591, 594, 596, 599, 601, 604, 606, 609, 611, 614, 616, 619, 646, 649, 651, 654, 656, 659, 661, 664, 666, 669, 671, 674, 686, 689, 1090, 1091, 1094, 1098, 1100, 1119, 1121, 1137, 1139, 1140, 1143, 1158, 1160, 1163, 1164, 1167, 1171, 1173, 1176, 1189, 1192, 1195, 1198, 1200, 1203, 1208, 1211, 1214, 1228, 1232, 1234, 1235, 1237, 1238, 1249, 1253, 1271, 1273, 1275, 1276, 1277, 1281, 1283, 1293, 1308, 1311, 1312, 1313, 1317, 1318, 1320, 1321, 1322, 1392, 1393, 1396, 1437, 1440, 1442, 1445, 1447, 1450, 1492, 1496, 1515, 1519, 1525, 1529, 1552, 1588, 1591, 1598, 1601, 1623, 1627, 1633, 1634, 1635, 1636, 1637, 1638, 1639, 1644, 1648, 1649, 1650, 1651, 1661, 1662, 1665, 1688, 1689, 1692, 1694, 1697, 1704, 1707, 1709, 1713, 1714, 1715, 1719, 1720, 1724, 1725, 1729, 1730, 1734, 1735, 1736, 1739, 1746, 1749, 1751, 1752, 1755, 1757, 1760, 1766, 1769, 1770, 1773, 1774, 1777, 1778, 1781, 1783, 1786, 1787, 1791, 1792, 1796, 1797, 1798, 1801, 1803, 1806], "sourc": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 37, 38, 39, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 143, 144, 146, 147, 158, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 196, 197, 198, 201, 203, 204, 207, 209, 212, 214, 217, 219, 222, 224, 227, 229, 232, 234, 235, 237, 238, 239, 240, 242, 244, 246, 247, 248, 249, 251, 252, 253, 256, 258, 259, 261, 264, 266, 267, 270, 272, 275, 277, 278, 280, 283, 285, 288, 290, 293, 295, 296, 298, 301, 303, 307, 308, 312, 313, 315, 316, 320, 321, 322, 323, 324, 325, 326, 327, 328, 331, 333, 336, 338, 341, 343, 346, 348, 349, 350, 351, 352, 354, 355, 356, 358, 360, 361, 364, 366, 367, 369, 370, 372, 375, 377, 378, 379, 382, 384, 387, 389, 392, 394, 397, 399, 400, 401, 404, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 425, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 445, 446, 447, 448, 449, 450, 451, 454, 456, 459, 461, 464, 466, 469, 471, 474, 476, 479, 481, 484, 486, 489, 491, 494, 496, 499, 501, 504, 506, 509, 511, 514, 516, 519, 521, 524, 526, 529, 531, 534, 536, 539, 541, 544, 546, 549, 551, 554, 556, 559, 561, 564, 566, 569, 571, 574, 576, 579, 581, 584, 586, 589, 591, 594, 596, 599, 601, 604, 606, 609, 611, 614, 616, 619, 621, 624, 626, 629, 631, 634, 636, 639, 641, 644, 646, 649, 651, 654, 656, 659, 661, 664, 666, 669, 671, 674, 676, 679, 681, 684, 686, 689, 691, 694, 696, 699, 701, 704, 706, 709, 711, 714, 716, 719, 721, 724, 726, 729, 731, 734, 736, 739, 741, 744, 746, 750, 751, 755, 756, 760, 761, 765, 766, 770, 1090, 1091, 1094, 1096, 1097, 1098, 1100, 1101, 1104, 1106, 1107, 1110, 1112, 1115, 1117, 1118, 1119, 1121, 1122, 1125, 1127, 1130, 1132, 1135, 1137, 1139, 1140, 1143, 1145, 1146, 1147, 1150, 1152, 1155, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1167, 1169, 1170, 1171, 1172, 1173, 1176, 1178, 1179, 1182, 1184, 1187, 1189, 1192, 1194, 1195, 1198, 1200, 1203, 1205, 1207, 1208, 1211, 1213, 1214, 1215, 1216, 1217, 1218, 1221, 1223, 1226, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1242, 1244, 1247, 1249, 1253, 1254, 1255, 1258, 1259, 1260, 1264, 1265, 1269, 1270, 1271, 1272, 1273, 1274, 1275, 1276, 1277, 1281, 1282, 1283, 1284, 1285, 1288, 1289, 1292, 1293, 1294, 1295, 1298, 1299, 1300, 1303, 1304, 1307, 1308, 1311, 1312, 1313, 1317, 1318, 1319, 1320, 1321, 1322, 1323, 1326, 1328, 1331, 1333, 1336, 1338, 1340, 1342, 1345, 1347, 1350, 1352, 1353, 1354, 1355, 1358, 1360, 1363, 1365, 1368, 1370, 1371, 1372, 1375, 1377, 1380, 1382, 1385, 1387, 1390, 1392, 1393, 1396, 1398, 1401, 1403, 1406, 1408, 1411, 1413, 1416, 1418, 1421, 1422, 1425, 1427, 1430, 1432, 1435, 1437, 1440, 1442, 1445, 1447, 1450, 1452, 1455, 1457, 1460, 1462, 1465, 1467, 1470, 1472, 1475, 1477, 1480, 1482, 1485, 1487, 1490, 1492, 1496, 1497, 1501, 1502, 1505, 1506, 1509, 1510, 1514, 1515, 1519, 1520, 1524, 1525, 1529, 1530, 1534, 1535, 1536, 1539, 1541, 1542, 1545, 1547, 1550, 1552, 1553, 1556, 1558, 1561, 1563, 1566, 1568, 1571, 1573, 1576, 1578, 1581, 1583, 1586, 1588, 1591, 1593, 1596, 1598, 1601, 1603, 1606, 1608, 1611, 1613, 1617, 1618, 1622, 1623, 1627, 1628, 1632, 1633, 1634, 1635, 1636, 1637, 1638, 1639, 1640, 1641, 1642, 1643, 1644, 1645, 1646, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654, 1655, 1656, 1657, 1660, 1661, 1662, 1665, 1667, 1670, 1672, 1675, 1677, 1680, 1682, 1683, 1686, 1688, 1689, 1692, 1694, 1697, 1699, 1702, 1704, 1707, 1709, 1713, 1714, 1715, 1719, 1720, 1724, 1725, 1729, 1730, 1734, 1735, 1736, 1739, 1741, 1744, 1746, 1749, 1751, 1752, 1755, 1757, 1760, 1762, 1765, 1766, 1769, 1770, 1773, 1774, 1777, 1778, 1781, 1783, 1786, 1787, 1791, 1792, 1796, 1797, 1798, 1801, 1803, 1806, 1809, 1818, 1819, 1820, 1821, 1822, 1870, 1871], "check_all_or_any_fn": 1, "fn": [1, 3, 105, 106, 152, 158, 164, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 237, 246, 247, 248, 321, 366, 367, 369, 370, 416, 428, 429, 1090, 1096, 1145, 1146, 1270, 1637, 1644, 1645, 1646, 1648, 1649, 1650], "type": [1, 3, 19, 26, 32, 38, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 146, 147, 149, 150, 151, 153, 154, 156, 157, 159, 160, 161, 162, 164, 166, 167, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 196, 197, 198, 201, 203, 204, 207, 209, 212, 214, 217, 219, 222, 224, 227, 229, 232, 234, 235, 237, 239, 240, 242, 244, 246, 247, 248, 249, 251, 252, 253, 256, 258, 259, 261, 264, 266, 267, 270, 272, 275, 277, 278, 280, 283, 285, 288, 290, 293, 295, 296, 298, 301, 303, 307, 308, 312, 313, 315, 316, 320, 326, 327, 328, 331, 333, 336, 338, 341, 343, 346, 348, 349, 350, 351, 352, 354, 355, 356, 358, 360, 361, 364, 366, 367, 369, 370, 372, 375, 377, 378, 379, 382, 384, 387, 389, 392, 394, 397, 399, 400, 401, 404, 406, 408, 410, 415, 416, 417, 419, 420, 421, 422, 423, 425, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 445, 446, 447, 448, 449, 450, 451, 454, 456, 459, 461, 464, 466, 469, 471, 474, 476, 479, 481, 484, 486, 489, 491, 494, 496, 499, 501, 504, 506, 509, 511, 514, 516, 519, 521, 524, 526, 529, 531, 534, 536, 539, 541, 544, 546, 549, 551, 554, 556, 559, 561, 564, 566, 569, 571, 574, 576, 579, 581, 584, 586, 589, 591, 594, 596, 599, 601, 604, 606, 609, 611, 614, 616, 619, 621, 624, 626, 629, 631, 634, 636, 639, 641, 644, 646, 649, 651, 654, 656, 659, 661, 664, 666, 669, 671, 674, 676, 679, 681, 684, 686, 689, 691, 694, 696, 699, 701, 704, 706, 709, 711, 714, 716, 719, 721, 724, 726, 729, 731, 734, 736, 739, 741, 744, 746, 750, 751, 755, 756, 760, 761, 765, 766, 770, 1090, 1091, 1094, 1096, 1098, 1100, 1101, 1104, 1106, 1107, 1110, 1112, 1115, 1118, 1119, 1121, 1122, 1125, 1127, 1130, 1132, 1135, 1137, 1139, 1140, 1143, 1145, 1146, 1147, 1150, 1152, 1155, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1167, 1169, 1171, 1173, 1176, 1179, 1182, 1184, 1187, 1189, 1192, 1195, 1198, 1200, 1203, 1205, 1207, 1208, 1211, 1213, 1214, 1218, 1221, 1223, 1226, 1228, 1229, 1230, 1231, 1232, 1234, 1235, 1236, 1237, 1238, 1239, 1242, 1244, 1247, 1249, 1253, 1254, 1255, 1258, 1259, 1260, 1264, 1265, 1269, 1270, 1271, 1272, 1273, 1274, 1275, 1276, 1277, 1281, 1282, 1283, 1285, 1288, 1289, 1292, 1295, 1298, 1300, 1303, 1304, 1307, 1308, 1311, 1313, 1317, 1320, 1321, 1322, 1323, 1326, 1328, 1331, 1333, 1336, 1338, 1340, 1342, 1345, 1347, 1350, 1352, 1353, 1355, 1358, 1360, 1363, 1365, 1368, 1372, 1375, 1377, 1380, 1382, 1385, 1387, 1390, 1392, 1393, 1396, 1398, 1401, 1403, 1406, 1408, 1411, 1413, 1416, 1418, 1421, 1422, 1425, 1427, 1430, 1432, 1435, 1437, 1440, 1442, 1445, 1447, 1450, 1452, 1455, 1457, 1460, 1462, 1465, 1467, 1470, 1472, 1475, 1477, 1480, 1482, 1485, 1487, 1490, 1492, 1496, 1497, 1501, 1502, 1505, 1506, 1509, 1510, 1514, 1515, 1519, 1520, 1524, 1525, 1529, 1530, 1534, 1535, 1536, 1539, 1541, 1542, 1545, 1547, 1550, 1552, 1553, 1556, 1558, 1561, 1563, 1566, 1568, 1571, 1573, 1576, 1578, 1581, 1583, 1586, 1588, 1591, 1593, 1596, 1598, 1601, 1603, 1606, 1608, 1611, 1613, 1617, 1618, 1622, 1623, 1627, 1628, 1632, 1633, 1634, 1635, 1636, 1637, 1638, 1639, 1641, 1644, 1645, 1647, 1648, 1649, 1650, 1655, 1656, 1657, 1660, 1661, 1662, 1665, 1667, 1670, 1672, 1675, 1677, 1680, 1682, 1683, 1686, 1688, 1689, 1692, 1694, 1697, 1699, 1702, 1704, 1707, 1709, 1713, 1714, 1715, 1719, 1720, 1724, 1725, 1729, 1730, 1734, 1735, 1736, 1739, 1741, 1744, 1746, 1749, 1751, 1752, 1755, 1757, 1760, 1762, 1765, 1766, 1769, 1770, 1773, 1774, 1777, 1778, 1781, 1783, 1786, 1787, 1791, 1792, 1796, 1797, 1798, 1801, 1803, 1806, 1809, 1819, 1820, 1823], "all": [1, 3, 4, 34, 35, 36, 37, 38, 39, 41, 42, 43, 50, 51, 52, 53, 54, 55, 56, 64, 65, 72, 73, 76, 77, 80, 81, 90, 91, 92, 93, 97, 98, 101, 102, 109, 110, 112, 113, 120, 121, 124, 125, 128, 129, 138, 139, 140, 141, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 166, 167, 168, 169, 180, 181, 182, 194, 234, 235, 237, 239, 240, 290, 293, 303, 307, 308, 312, 416, 430, 436, 1090, 1091, 1094, 1098, 1100, 1157, 1217, 1260, 1264, 1282, 1283, 1293, 1321, 1377, 1380, 1392, 1457, 1460, 1482, 1485, 1487, 1490, 1502, 1505, 1525, 1529, 1552, 1573, 1576, 1593, 1596, 1603, 1606, 1633, 1634, 1635, 1636, 1637, 1638, 1639, 1640, 1649, 1650, 1651, 1661, 1662, 1665, 1677, 1680, 1688, 1699, 1702, 1797, 1808, 1809, 1815, 1816, 1817, 1818, 1819, 1820, 1822, 1825, 1826], "limit": [1, 3, 43, 94, 97, 98, 99, 100, 150, 152, 153, 158, 160, 162, 167, 181, 321, 361, 364, 372, 375, 1090, 1107, 1110, 1112, 1115, 1552, 1553, 1556, 1818, 1819, 1820], "0": [1, 3, 19, 23, 43, 45, 46, 47, 48, 49, 55, 56, 57, 58, 61, 62, 63, 64, 65, 66, 67, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 143, 145, 146, 148, 150, 151, 152, 158, 159, 160, 161, 164, 166, 167, 168, 169, 181, 196, 198, 201, 204, 207, 209, 212, 214, 217, 219, 222, 224, 227, 229, 232, 237, 239, 240, 249, 251, 258, 259, 266, 267, 270, 272, 275, 277, 278, 290, 293, 298, 301, 303, 307, 308, 312, 313, 315, 316, 320, 321, 328, 331, 333, 336, 338, 341, 343, 346, 356, 358, 361, 364, 372, 375, 377, 389, 392, 416, 419, 422, 427, 430, 433, 434, 435, 436, 437, 438, 439, 440, 446, 448, 449, 450, 451, 454, 456, 459, 461, 464, 466, 469, 471, 474, 476, 479, 481, 484, 486, 489, 491, 494, 496, 499, 506, 509, 516, 519, 521, 524, 526, 529, 531, 534, 536, 539, 541, 544, 546, 549, 551, 554, 556, 559, 561, 564, 566, 569, 571, 574, 576, 579, 581, 584, 586, 589, 591, 594, 596, 599, 601, 604, 611, 614, 621, 624, 626, 629, 631, 634, 636, 639, 651, 654, 656, 659, 661, 664, 666, 669, 671, 674, 676, 679, 681, 684, 686, 689, 691, 694, 696, 699, 701, 704, 711, 714, 716, 719, 721, 724, 726, 729, 731, 734, 736, 739, 741, 744, 751, 755, 756, 760, 761, 765, 766, 770, 1090, 1091, 1094, 1098, 1100, 1106, 1107, 1110, 1112, 1115, 1127, 1130, 1137, 1139, 1147, 1150, 1152, 1155, 1160, 1164, 1167, 1169, 1170, 1173, 1176, 1179, 1182, 1184, 1187, 1200, 1203, 1208, 1211, 1214, 1223, 1226, 1233, 1237, 1239, 1242, 1249, 1253, 1255, 1258, 1260, 1264, 1265, 1269, 1274, 1277, 1281, 1282, 1283, 1285, 1288, 1289, 1292, 1294, 1295, 1298, 1299, 1300, 1303, 1304, 1307, 1308, 1311, 1313, 1317, 1319, 1321, 1323, 1326, 1333, 1336, 1342, 1345, 1347, 1350, 1355, 1358, 1372, 1375, 1382, 1385, 1387, 1390, 1392, 1393, 1396, 1398, 1401, 1403, 1406, 1408, 1411, 1413, 1416, 1427, 1430, 1437, 1440, 1442, 1445, 1447, 1450, 1457, 1460, 1462, 1465, 1472, 1475, 1482, 1485, 1492, 1496, 1497, 1501, 1502, 1505, 1510, 1514, 1515, 1519, 1525, 1529, 1535, 1536, 1539, 1541, 1542, 1545, 1547, 1550, 1552, 1553, 1556, 1558, 1561, 1563, 1566, 1568, 1571, 1573, 1576, 1578, 1581, 1583, 1586, 1588, 1591, 1593, 1596, 1598, 1601, 1603, 1606, 1608, 1611, 1613, 1617, 1618, 1622, 1623, 1627, 1637, 1639, 1641, 1644, 1645, 1646, 1647, 1649, 1650, 1654, 1655, 1656, 1657, 1660, 1661, 1662, 1665, 1667, 1670, 1672, 1675, 1677, 1680, 1682, 1683, 1686, 1688, 1689, 1692, 1694, 1697, 1699, 1702, 1704, 1707, 1709, 1713, 1714, 1715, 1719, 1720, 1724, 1725, 1729, 1730, 1734, 1735, 1736, 1739, 1741, 1744, 1746, 1749, 1751, 1752, 1755, 1757, 1760, 1762, 1765, 1766, 1769, 1770, 1773, 1774, 1777, 1778, 1781, 1783, 1786, 1787, 1791, 1792, 1796, 1797, 1798, 1801, 1803, 1806, 1809], "must": [1, 3, 8, 18, 34, 36, 38, 40, 41, 42, 43, 45, 46, 47, 48, 49, 55, 56, 57, 58, 61, 62, 63, 64, 65, 66, 67, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 143, 144, 148, 149, 150, 151, 152, 154, 155, 158, 159, 160, 161, 162, 164, 168, 169, 196, 198, 201, 204, 207, 209, 212, 214, 217, 219, 222, 224, 227, 229, 232, 237, 239, 240, 242, 244, 249, 251, 252, 253, 256, 258, 259, 261, 264, 266, 267, 270, 272, 275, 277, 278, 280, 283, 290, 293, 295, 296, 298, 301, 303, 307, 308, 312, 313, 315, 316, 320, 321, 328, 331, 333, 336, 338, 341, 416, 440, 441, 445, 450, 451, 454, 456, 459, 461, 464, 466, 469, 471, 474, 476, 479, 481, 484, 486, 489, 491, 494, 496, 499, 501, 504, 506, 509, 511, 514, 516, 519, 521, 524, 526, 529, 531, 534, 536, 539, 541, 544, 546, 549, 551, 554, 556, 559, 561, 564, 566, 569, 571, 574, 576, 579, 581, 584, 586, 589, 591, 594, 596, 599, 601, 604, 606, 609, 611, 614, 616, 619, 621, 624, 626, 629, 631, 634, 636, 639, 641, 644, 646, 649, 651, 654, 656, 659, 661, 664, 666, 669, 671, 674, 676, 679, 681, 684, 686, 689, 691, 694, 696, 699, 701, 704, 706, 709, 711, 714, 716, 719, 721, 724, 726, 729, 731, 734, 736, 739, 741, 744, 746, 750, 751, 755, 756, 760, 761, 765, 766, 770, 1090, 1107, 1110, 1112, 1115, 1122, 1125, 1127, 1130, 1132, 1135, 1147, 1150, 1152, 1155, 1218, 1221, 1223, 1226, 1282, 1283, 1285, 1288, 1289, 1292, 1295, 1298, 1300, 1303, 1304, 1307, 1308, 1311, 1313, 1317, 1321, 1323, 1326, 1328, 1331, 1333, 1336, 1338, 1340, 1342, 1345, 1347, 1350, 1352, 1353, 1355, 1358, 1360, 1363, 1365, 1368, 1372, 1375, 1382, 1385, 1387, 1390, 1392, 1393, 1396, 1398, 1401, 1403, 1406, 1408, 1411, 1413, 1416, 1418, 1421, 1422, 1425, 1427, 1430, 1432, 1435, 1437, 1440, 1442, 1445, 1447, 1450, 1452, 1455, 1457, 1460, 1462, 1465, 1467, 1470, 1472, 1475, 1477, 1480, 1482, 1485, 1487, 1490, 1492, 1496, 1497, 1501, 1502, 1505, 1510, 1514, 1520, 1524, 1525, 1529, 1530, 1534, 1535, 1536, 1539, 1541, 1542, 1545, 1547, 1550, 1552, 1553, 1556, 1558, 1561, 1563, 1566, 1568, 1571, 1573, 1576, 1578, 1581, 1583, 1586, 1588, 1591, 1593, 1596, 1603, 1606, 1608, 1611, 1613, 1617, 1618, 1622, 1628, 1632, 1656, 1657, 1660, 1661, 1662, 1665, 1667, 1670, 1672, 1675, 1677, 1680, 1682, 1683, 1686, 1688, 1689, 1692, 1694, 1697, 1699, 1702, 1704, 1707, 1709, 1713, 1714, 1715, 1719, 1720, 1724, 1725, 1729, 1730, 1734, 1735, 1736, 1739, 1741, 1744, 1746, 1749, 1751, 1752, 1755, 1757, 1760, 1766, 1769, 1770, 1773, 1774, 1777, 1778, 1781, 1783, 1786, 1787, 1791, 1792, 1796, 1797, 1798, 1801, 1803, 1806, 1820, 1826], "exist": [1, 3, 34, 35, 39, 41, 42, 64, 65, 76, 77, 97, 98, 124, 125, 143, 145, 150, 151, 155, 156, 157, 158, 160, 162, 164, 181, 1090, 1119, 1121, 1552, 1558, 1561, 1588, 1591, 1808, 1817, 1819, 1822, 1825], "accord": [1, 3, 39, 41, 42, 57, 58, 64, 65, 88, 89, 105, 106, 136, 137, 143, 148, 155, 158, 160, 321, 343, 346, 361, 364, 450, 466, 469, 516, 519, 676, 679, 1090, 1147, 1150, 1160, 1218, 1221, 1223, 1226, 1392, 1520, 1524, 1552, 1563, 1566, 1628, 1632, 1751, 1783, 1786, 1792, 1796], "given": [1, 3, 35, 36, 39, 41, 42, 43, 45, 63, 64, 65, 74, 75, 76, 77, 80, 81, 94, 97, 98, 111, 112, 113, 114, 115, 122, 123, 124, 125, 128, 129, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 165, 166, 168, 180, 196, 197, 203, 234, 236, 237, 239, 240, 252, 272, 275, 277, 278, 321, 350, 351, 352, 354, 355, 400, 416, 427, 435, 437, 438, 439, 440, 446, 449, 450, 1089, 1090, 1152, 1155, 1218, 1221, 1223, 1226, 1234, 1283, 1285, 1288, 1289, 1292, 1295, 1298, 1300, 1303, 1304, 1307, 1308, 1311, 1321, 1323, 1326, 1328, 1331, 1333, 1336, 1338, 1340, 1342, 1345, 1347, 1350, 1352, 1353, 1355, 1358, 1392, 1530, 1534, 1535, 1536, 1539, 1541, 1542, 1545, 1547, 1550, 1552, 1553, 1556, 1568, 1571, 1573, 1576, 1583, 1586, 1593, 1596, 1598, 1601, 1618, 1622, 1623, 1627, 1633, 1637, 1645, 1646, 1656, 1661, 1667, 1670, 1672, 1675, 1677, 1680, 1683, 1686, 1688, 1735, 1741, 1744, 1746, 1749, 1751, 1752, 1755, 1757, 1760, 1797, 1816, 1821, 1822, 1825, 1826, 1828, 1831, 1833, 1843, 1855, 1859, 1861, 1867], "check_ani": 1, "ar": [1, 4, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 48, 49, 50, 51, 52, 61, 62, 63, 64, 65, 72, 73, 76, 77, 80, 81, 82, 83, 94, 97, 98, 99, 100, 103, 104, 109, 110, 111, 112, 113, 120, 121, 124, 125, 128, 129, 130, 131, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 180, 181, 182, 194, 237, 239, 240, 416, 430, 434, 436, 440, 450, 531, 534, 541, 544, 651, 654, 656, 659, 701, 704, 716, 719, 726, 729, 751, 755, 1090, 1091, 1094, 1098, 1100, 1101, 1104, 1106, 1157, 1163, 1171, 1178, 1194, 1216, 1217, 1232, 1249, 1253, 1273, 1283, 1293, 1312, 1318, 1320, 1321, 1365, 1368, 1372, 1375, 1392, 1398, 1401, 1418, 1421, 1422, 1425, 1427, 1430, 1442, 1445, 1447, 1450, 1457, 1460, 1472, 1475, 1492, 1496, 1497, 1501, 1515, 1519, 1520, 1524, 1552, 1553, 1556, 1558, 1561, 1573, 1576, 1593, 1596, 1603, 1606, 1637, 1639, 1644, 1649, 1650, 1651, 1661, 1667, 1670, 1672, 1675, 1677, 1680, 1688, 1689, 1692, 1694, 1697, 1699, 1702, 1704, 1707, 1714, 1715, 1719, 1725, 1729, 1808, 1809, 1815, 1816, 1817, 1819, 1820, 1821, 1822, 1823, 1824, 1825, 1826], "check_elem_in_list": [1, 158], "elem": [1, 5], "list": [1, 5, 39, 40, 41, 42, 50, 51, 52, 53, 54, 55, 56, 57, 58, 63, 64, 65, 70, 71, 76, 77, 78, 79, 92, 93, 95, 96, 97, 98, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 143, 146, 148, 149, 150, 153, 154, 158, 159, 160, 161, 164, 167, 168, 169, 181, 196, 197, 203, 237, 239, 240, 242, 244, 280, 283, 285, 288, 321, 333, 336, 416, 422, 440, 1090, 1097, 1214, 1255, 1258, 1270, 1282, 1283, 1312, 1318, 1320, 1321, 1323, 1326, 1328, 1331, 1333, 1336, 1338, 1340, 1342, 1345, 1347, 1350, 1352, 1353, 1355, 1358, 1392, 1502, 1505, 1552, 1558, 1561, 1598, 1601, 1608, 1611, 1623, 1627, 1637, 1638, 1639, 1640, 1641, 1644, 1645, 1646, 1647, 1649, 1650, 1654, 1655, 1656, 1657, 1660, 1688, 1704, 1707, 1714, 1720, 1724, 1725, 1729, 1809, 1819, 1820, 1825], "check_equ": [1, 158], "x1": [1, 6, 12, 15, 16, 17, 45, 48, 49, 57, 58, 61, 62, 63, 72, 73, 82, 83, 94, 99, 100, 105, 106, 109, 110, 111, 112, 113, 120, 121, 130, 131, 134, 135, 143, 148, 150, 152, 154, 158, 237, 277, 278, 298, 301, 316, 320, 321, 333, 336, 356, 358, 400, 410, 416, 434, 450, 466, 469, 486, 489, 496, 499, 506, 509, 511, 514, 516, 519, 521, 524, 546, 549, 551, 554, 576, 579, 581, 584, 586, 589, 611, 614, 616, 619, 641, 644, 646, 649, 656, 659, 661, 664, 666, 669, 671, 674, 676, 679, 686, 689, 696, 699, 711, 714, 746, 750, 766, 770, 1090, 1091, 1094, 1098, 1100, 1392, 1398, 1401, 1432, 1435, 1442, 1445, 1467, 1470, 1487, 1490, 1502, 1505, 1506, 1509, 1520, 1524, 1688, 1709, 1713, 1735, 1741, 1744], "x2": [1, 6, 12, 15, 16, 17, 45, 48, 49, 57, 58, 61, 62, 63, 64, 65, 72, 73, 82, 83, 94, 99, 100, 105, 106, 109, 110, 111, 112, 113, 120, 121, 130, 131, 143, 148, 150, 152, 154, 158, 237, 277, 278, 298, 301, 316, 320, 321, 333, 336, 400, 410, 416, 434, 450, 466, 469, 486, 489, 496, 499, 506, 509, 511, 514, 516, 519, 521, 524, 546, 549, 551, 554, 576, 579, 581, 584, 586, 589, 611, 614, 616, 619, 641, 644, 646, 649, 656, 659, 661, 664, 666, 669, 671, 674, 676, 679, 686, 689, 696, 699, 711, 714, 746, 750, 766, 770, 1090, 1091, 1094, 1392, 1398, 1401, 1432, 1435, 1442, 1445, 1467, 1470, 1487, 1490, 1502, 1505, 1506, 1509, 1520, 1524, 1688, 1709, 1713], "invers": [1, 6, 7, 61, 62, 109, 110, 120, 121, 148, 180, 450, 456, 459, 461, 464, 471, 474, 476, 479, 481, 484, 486, 489, 491, 494, 1392, 1437, 1440, 1452, 1455, 1472, 1475], "check_exist": 1, "x": [1, 7, 14, 19, 23, 32, 39, 45, 46, 47, 48, 49, 50, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 94, 95, 96, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 145, 146, 148, 150, 151, 152, 153, 154, 155, 157, 158, 159, 160, 161, 162, 164, 166, 167, 168, 169, 196, 197, 198, 201, 203, 204, 207, 209, 212, 214, 217, 219, 222, 224, 227, 229, 232, 237, 242, 244, 249, 251, 253, 256, 261, 264, 266, 267, 270, 277, 278, 280, 283, 285, 288, 290, 293, 298, 301, 303, 307, 308, 312, 313, 315, 316, 320, 321, 328, 331, 338, 341, 343, 346, 348, 351, 352, 354, 355, 356, 358, 360, 361, 364, 372, 375, 377, 384, 387, 389, 392, 401, 404, 416, 417, 422, 423, 425, 430, 434, 435, 436, 439, 441, 445, 446, 449, 450, 451, 454, 456, 459, 461, 464, 466, 469, 471, 474, 476, 479, 481, 484, 486, 489, 491, 494, 496, 499, 501, 504, 511, 514, 521, 524, 526, 529, 531, 534, 536, 539, 541, 544, 556, 559, 561, 564, 566, 569, 571, 574, 581, 584, 586, 589, 591, 594, 596, 599, 601, 604, 606, 609, 611, 614, 616, 619, 621, 624, 626, 629, 631, 634, 636, 639, 641, 644, 646, 649, 651, 654, 656, 659, 661, 664, 666, 669, 671, 674, 681, 684, 691, 694, 696, 699, 701, 704, 706, 709, 716, 719, 721, 724, 726, 729, 731, 734, 736, 739, 741, 744, 746, 750, 751, 755, 756, 760, 761, 765, 1090, 1091, 1094, 1097, 1098, 1100, 1101, 1104, 1106, 1107, 1110, 1112, 1115, 1119, 1121, 1122, 1125, 1127, 1130, 1132, 1135, 1137, 1139, 1140, 1143, 1147, 1150, 1152, 1155, 1160, 1161, 1162, 1164, 1167, 1173, 1176, 1179, 1182, 1184, 1187, 1189, 1192, 1195, 1198, 1200, 1203, 1205, 1207, 1208, 1211, 1213, 1214, 1230, 1231, 1233, 1236, 1237, 1239, 1242, 1249, 1253, 1255, 1258, 1260, 1264, 1265, 1269, 1270, 1277, 1281, 1282, 1283, 1293, 1294, 1299, 1313, 1317, 1319, 1321, 1322, 1323, 1326, 1328, 1331, 1333, 1336, 1338, 1340, 1342, 1345, 1347, 1350, 1352, 1353, 1355, 1358, 1360, 1363, 1365, 1368, 1371, 1372, 1375, 1377, 1380, 1382, 1385, 1387, 1390, 1392, 1393, 1396, 1398, 1401, 1403, 1406, 1408, 1411, 1413, 1416, 1418, 1421, 1422, 1425, 1427, 1430, 1437, 1440, 1442, 1445, 1447, 1450, 1452, 1455, 1457, 1460, 1462, 1465, 1467, 1470, 1472, 1475, 1477, 1480, 1482, 1485, 1492, 1496, 1497, 1501, 1502, 1505, 1510, 1514, 1515, 1519, 1525, 1529, 1535, 1536, 1539, 1541, 1542, 1545, 1547, 1550, 1552, 1553, 1556, 1558, 1561, 1563, 1566, 1568, 1571, 1573, 1576, 1578, 1581, 1583, 1586, 1588, 1591, 1593, 1596, 1598, 1601, 1603, 1606, 1608, 1611, 1613, 1617, 1618, 1622, 1623, 1627, 1628, 1632, 1637, 1641, 1644, 1645, 1646, 1647, 1648, 1649, 1650, 1654, 1655, 1656, 1657, 1660, 1661, 1667, 1670, 1672, 1675, 1677, 1680, 1683, 1686, 1688, 1689, 1692, 1694, 1697, 1699, 1702, 1704, 1707, 1709, 1713, 1714, 1715, 1719, 1720, 1724, 1725, 1729, 1730, 1734, 1735, 1736, 1739, 1741, 1744, 1746, 1749, 1751, 1752, 1755, 1757, 1760, 1762, 1765, 1766, 1769, 1770, 1773, 1774, 1777, 1778, 1781, 1783, 1786, 1787, 1791, 1792, 1796, 1797, 1798, 1801, 1803, 1806, 1809], "check_fals": 1, "express": [1, 8, 18, 61, 62, 63, 109, 110, 111, 151, 153, 158, 164, 169, 450, 456, 459, 471, 474, 481, 484, 486, 489, 531, 534, 541, 544, 701, 704, 726, 729, 751, 755, 1819, 1820], "check_fill_value_and_dtype_are_compat": 1, "fill_valu": [1, 9, 55, 56, 82, 83, 103, 104, 130, 131, 148, 159, 161, 237, 266, 267, 270, 450, 586, 589, 616, 619, 1688, 1704, 1707], "dtype": [1, 9, 45, 48, 49, 55, 56, 57, 58, 63, 70, 71, 72, 73, 80, 81, 82, 83, 88, 89, 103, 104, 105, 106, 111, 112, 113, 118, 119, 120, 121, 128, 129, 130, 131, 136, 137, 143, 145, 148, 149, 150, 153, 155, 156, 158, 159, 160, 161, 164, 166, 237, 239, 240, 242, 244, 252, 253, 256, 258, 259, 266, 267, 270, 272, 275, 277, 278, 285, 288, 290, 293, 295, 296, 298, 301, 313, 315, 316, 320, 321, 322, 326, 327, 328, 331, 333, 336, 343, 346, 349, 350, 351, 352, 354, 355, 360, 361, 364, 366, 367, 369, 370, 372, 375, 377, 378, 379, 382, 384, 387, 389, 392, 394, 397, 399, 400, 401, 404, 406, 407, 408, 409, 411, 412, 413, 414, 415, 416, 436, 1090, 1145, 1146, 1152, 1155, 1260, 1264, 1321, 1333, 1336, 1360, 1363, 1392, 1447, 1450, 1661, 1667, 1670, 1672, 1675, 1677, 1680, 1688, 1689, 1692, 1694, 1697, 1699, 1702, 1735, 1746, 1749, 1751, 1752, 1755, 1757, 1760, 1778, 1781, 1787, 1791, 1797, 1798, 1801, 1803, 1806, 1809], "check_gather_input_valid": 1, "param": [1, 10, 11, 94, 97, 98, 99, 100, 111, 112, 113, 169, 1090, 1096, 1147, 1150, 1152, 1155], "indic": [1, 10, 11, 39, 55, 56, 63, 64, 65, 70, 71, 76, 77, 78, 79, 82, 83, 84, 85, 86, 87, 97, 98, 103, 104, 105, 106, 111, 112, 113, 118, 119, 120, 121, 124, 125, 126, 127, 130, 131, 132, 133, 134, 135, 147, 153, 154, 158, 169, 237, 242, 244, 290, 293, 450, 721, 724, 1090, 1147, 1150, 1152, 1155, 1160, 1218, 1221, 1223, 1226, 1282, 1283, 1293, 1321, 1323, 1326, 1328, 1331, 1333, 1336, 1338, 1340, 1342, 1345, 1347, 1350, 1352, 1353, 1355, 1358, 1392, 1525, 1529, 1552, 1588, 1591, 1593, 1596, 1637, 1638, 1641, 1643, 1645, 1646, 1647, 1649, 1652, 1653, 1654, 1655, 1656, 1657, 1660, 1661, 1662, 1665, 1688, 1689, 1692, 1694, 1697, 1699, 1702, 1704, 1707, 1714, 1715, 1719, 1725, 1729, 1735, 1736, 1739, 1741, 1744, 1746, 1749, 1809], "axi": [1, 10, 46, 47, 55, 56, 63, 64, 65, 72, 73, 74, 75, 76, 77, 82, 83, 86, 87, 88, 89, 90, 91, 95, 96, 97, 98, 103, 104, 109, 110, 111, 112, 113, 120, 121, 122, 123, 124, 125, 130, 131, 134, 135, 136, 137, 138, 139, 146, 148, 150, 152, 154, 155, 157, 158, 160, 162, 164, 166, 169, 180, 196, 209, 212, 224, 227, 237, 272, 275, 277, 278, 290, 293, 416, 440, 1090, 1147, 1150, 1282, 1321, 1355, 1358, 1382, 1385, 1392, 1398, 1401, 1413, 1416, 1447, 1450, 1520, 1524, 1525, 1529, 1535, 1542, 1545, 1547, 1550, 1552, 1558, 1561, 1563, 1566, 1568, 1571, 1573, 1576, 1583, 1586, 1588, 1591, 1593, 1596, 1598, 1601, 1603, 1606, 1608, 1611, 1613, 1617, 1618, 1622, 1623, 1627, 1628, 1632, 1661, 1683, 1686, 1688, 1689, 1692, 1694, 1697, 1735, 1736, 1739, 1746, 1749, 1751, 1752, 1755, 1757, 1760, 1766, 1769, 1770, 1773, 1774, 1777, 1778, 1781, 1783, 1786, 1787, 1791, 1792, 1796, 1797, 1798, 1801, 1803, 1806], "batch_dim": [1, 10, 11, 64, 65, 112, 113, 1090, 1147, 1150, 1152, 1155], "check_gather_nd_input_valid": 1, "check_great": 1, "allow_equ": [1, 12, 15, 152], "check_inplace_sizes_valid": 1, "var": [1, 13, 88, 89, 136, 137, 140, 141, 150, 164, 1633, 1634, 1635, 1751], "data": [1, 13, 33, 35, 42, 45, 48, 49, 55, 56, 58, 61, 62, 63, 64, 65, 72, 73, 76, 77, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 94, 97, 98, 99, 100, 103, 104, 106, 109, 110, 111, 112, 113, 120, 121, 124, 125, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 142, 143, 146, 149, 151, 154, 155, 156, 157, 159, 161, 162, 164, 166, 237, 239, 240, 242, 244, 252, 253, 256, 258, 259, 261, 264, 266, 267, 270, 272, 275, 277, 278, 280, 283, 285, 288, 290, 293, 295, 296, 298, 301, 303, 307, 308, 312, 313, 315, 316, 320, 326, 327, 328, 331, 338, 341, 343, 346, 349, 356, 358, 360, 361, 364, 366, 367, 369, 370, 372, 375, 377, 378, 379, 382, 384, 387, 389, 392, 394, 397, 399, 406, 408, 410, 415, 416, 418, 450, 451, 454, 456, 459, 461, 464, 466, 469, 471, 474, 476, 479, 481, 484, 486, 489, 491, 494, 496, 499, 501, 504, 506, 509, 511, 514, 516, 519, 521, 524, 526, 529, 531, 534, 536, 539, 546, 549, 551, 554, 561, 564, 566, 569, 571, 574, 576, 579, 581, 584, 586, 589, 591, 594, 596, 599, 601, 604, 606, 609, 611, 614, 616, 619, 621, 624, 626, 629, 631, 634, 636, 639, 641, 644, 646, 649, 651, 654, 656, 659, 661, 664, 676, 679, 686, 689, 696, 699, 711, 714, 716, 719, 721, 724, 726, 729, 731, 734, 736, 739, 741, 744, 746, 750, 751, 755, 756, 760, 761, 765, 766, 770, 1090, 1195, 1198, 1200, 1203, 1208, 1211, 1249, 1253, 1321, 1365, 1368, 1372, 1375, 1392, 1393, 1396, 1398, 1401, 1403, 1406, 1413, 1416, 1418, 1421, 1422, 1425, 1427, 1430, 1432, 1435, 1437, 1440, 1442, 1445, 1447, 1450, 1452, 1455, 1457, 1460, 1462, 1465, 1467, 1470, 1472, 1475, 1477, 1480, 1482, 1485, 1487, 1490, 1492, 1496, 1502, 1505, 1510, 1514, 1520, 1524, 1525, 1529, 1552, 1558, 1561, 1573, 1576, 1578, 1581, 1588, 1591, 1593, 1596, 1603, 1606, 1608, 1611, 1661, 1667, 1670, 1672, 1675, 1677, 1680, 1683, 1686, 1688, 1689, 1692, 1694, 1697, 1704, 1707, 1735, 1736, 1739, 1741, 1744, 1751, 1752, 1755, 1757, 1760, 1766, 1769, 1770, 1773, 1774, 1777, 1778, 1781, 1783, 1786, 1787, 1791, 1792, 1796, 1797, 1798, 1801, 1803, 1806, 1808, 1809, 1819, 1820, 1821, 1823, 1824, 1825], "check_isinst": 1, "allowed_typ": [1, 14], "check_less": [1, 152], "check_one_way_broadcast": 1, "check_shap": [1, 97, 98], "check_tru": 1, "true": [1, 18, 45, 48, 49, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 70, 71, 72, 73, 74, 75, 76, 77, 80, 81, 82, 83, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 146, 148, 150, 152, 153, 154, 155, 157, 158, 159, 160, 162, 164, 167, 168, 169, 196, 198, 201, 234, 235, 237, 266, 272, 275, 280, 283, 321, 328, 331, 343, 346, 348, 366, 367, 369, 370, 379, 382, 384, 387, 389, 392, 394, 397, 415, 416, 422, 423, 425, 428, 429, 432, 435, 436, 437, 449, 450, 496, 499, 551, 554, 581, 584, 586, 589, 591, 594, 596, 599, 601, 604, 606, 609, 611, 614, 616, 619, 646, 649, 651, 654, 656, 659, 661, 664, 666, 669, 671, 674, 686, 689, 711, 714, 1090, 1091, 1094, 1098, 1100, 1101, 1104, 1119, 1121, 1137, 1139, 1140, 1143, 1145, 1146, 1158, 1160, 1163, 1164, 1167, 1171, 1173, 1176, 1200, 1203, 1208, 1211, 1228, 1232, 1234, 1235, 1237, 1238, 1260, 1264, 1271, 1273, 1275, 1276, 1277, 1281, 1283, 1289, 1292, 1295, 1298, 1300, 1303, 1304, 1307, 1308, 1311, 1312, 1313, 1317, 1318, 1320, 1321, 1360, 1363, 1365, 1368, 1392, 1393, 1396, 1447, 1450, 1492, 1496, 1515, 1519, 1525, 1529, 1535, 1536, 1539, 1541, 1542, 1545, 1547, 1550, 1552, 1588, 1591, 1598, 1601, 1623, 1627, 1633, 1634, 1635, 1636, 1637, 1638, 1639, 1644, 1648, 1649, 1651, 1661, 1662, 1665, 1688, 1689, 1692, 1694, 1697, 1704, 1707, 1709, 1713, 1714, 1715, 1719, 1720, 1724, 1725, 1729, 1730, 1734, 1735, 1736, 1739, 1746, 1749, 1751, 1752, 1755, 1757, 1760, 1766, 1769, 1770, 1773, 1774, 1777, 1778, 1781, 1783, 1786, 1787, 1791, 1792, 1796, 1797, 1798, 1801, 1803, 1806], "assert": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 97, 98, 142, 143, 153, 158, 160, 161, 166, 167, 1090, 1101, 1104], "support": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 38, 42, 47, 49, 51, 52, 53, 54, 56, 58, 60, 62, 63, 64, 65, 66, 67, 69, 71, 73, 75, 77, 79, 81, 83, 85, 87, 89, 91, 93, 96, 98, 100, 102, 104, 106, 107, 108, 110, 111, 112, 113, 115, 117, 119, 120, 121, 123, 125, 127, 129, 131, 133, 135, 137, 139, 141, 143, 144, 146, 149, 150, 151, 154, 155, 156, 157, 159, 160, 162, 163, 164, 166, 167, 169, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 235, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1215, 1216, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1272, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 1282, 1284, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1298, 1299, 1300, 1301, 1302, 1303, 1304, 1305, 1306, 1307, 1308, 1309, 1310, 1311, 1312, 1313, 1314, 1315, 1316, 1317, 1318, 1319, 1320, 1321, 1322, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1420, 1421, 1422, 1423, 1424, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 1443, 1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1485, 1486, 1487, 1488, 1489, 1490, 1491, 1492, 1493, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 1505, 1506, 1507, 1508, 1509, 1510, 1511, 1512, 1513, 1514, 1515, 1516, 1517, 1518, 1519, 1520, 1521, 1522, 1523, 1524, 1525, 1526, 1527, 1528, 1529, 1530, 1531, 1532, 1533, 1534, 1536, 1537, 1538, 1539, 1540, 1541, 1542, 1543, 1544, 1545, 1546, 1547, 1548, 1549, 1550, 1551, 1553, 1554, 1555, 1556, 1557, 1558, 1559, 1560, 1561, 1562, 1563, 1564, 1565, 1566, 1567, 1568, 1569, 1570, 1571, 1572, 1573, 1574, 1575, 1576, 1577, 1578, 1579, 1580, 1581, 1582, 1583, 1584, 1585, 1586, 1587, 1588, 1589, 1590, 1591, 1592, 1593, 1594, 1595, 1596, 1597, 1598, 1599, 1600, 1601, 1602, 1603, 1604, 1605, 1606, 1607, 1608, 1609, 1610, 1611, 1612, 1613, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1634, 1635, 1636, 1638, 1639, 1640, 1641, 1642, 1643, 1644, 1645, 1646, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654, 1655, 1657, 1658, 1659, 1660, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1748, 1749, 1750, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1785, 1786, 1787, 1788, 1789, 1790, 1791, 1792, 1793, 1794, 1795, 1796, 1798, 1799, 1800, 1801, 1802, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1813, 1814, 1816, 1818, 1819, 1822, 1824, 1825, 1826, 1829, 1830, 1832, 1834, 1835, 1836, 1837, 1838, 1839, 1840, 1841, 1842, 1844, 1845, 1846, 1847, 1848, 1849, 1850, 1851, 1852, 1853, 1854, 1856, 1857, 1858, 1860, 1862, 1863, 1864, 1865, 1866, 1868, 1869, 1871], "framework": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 41, 42, 47, 49, 50, 51, 52, 53, 54, 56, 58, 60, 62, 63, 64, 65, 66, 67, 69, 71, 73, 75, 77, 79, 81, 83, 85, 87, 89, 91, 93, 96, 98, 100, 102, 104, 106, 108, 110, 111, 113, 115, 117, 119, 121, 123, 125, 127, 129, 131, 133, 135, 137, 139, 141, 142, 143, 144, 145, 148, 149, 150, 154, 155, 156, 158, 159, 160, 161, 162, 163, 164, 166, 169, 180, 181, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1215, 1216, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1272, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 1282, 1284, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1298, 1299, 1300, 1301, 1302, 1303, 1304, 1305, 1306, 1307, 1308, 1309, 1310, 1311, 1312, 1313, 1314, 1315, 1316, 1317, 1318, 1319, 1320, 1322, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1389, 1390, 1391, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1420, 1421, 1422, 1423, 1424, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 1443, 1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1485, 1486, 1487, 1488, 1489, 1490, 1491, 1492, 1493, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 1505, 1506, 1507, 1508, 1509, 1510, 1511, 1512, 1513, 1514, 1515, 1516, 1517, 1518, 1519, 1520, 1521, 1522, 1523, 1524, 1525, 1526, 1527, 1528, 1529, 1530, 1531, 1532, 1533, 1534, 1536, 1537, 1538, 1539, 1540, 1541, 1542, 1543, 1544, 1545, 1546, 1547, 1548, 1549, 1550, 1551, 1553, 1554, 1555, 1556, 1557, 1558, 1559, 1560, 1561, 1562, 1563, 1564, 1565, 1566, 1567, 1568, 1569, 1570, 1571, 1572, 1573, 1574, 1575, 1576, 1577, 1578, 1579, 1580, 1581, 1582, 1583, 1584, 1585, 1586, 1587, 1588, 1589, 1590, 1591, 1592, 1593, 1594, 1595, 1596, 1597, 1598, 1599, 1600, 1601, 1602, 1603, 1604, 1605, 1606, 1607, 1608, 1609, 1610, 1611, 1612, 1613, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1634, 1635, 1636, 1637, 1638, 1639, 1640, 1641, 1642, 1643, 1644, 1645, 1646, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654, 1655, 1657, 1658, 1659, 1660, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1748, 1749, 1750, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1785, 1786, 1787, 1788, 1789, 1790, 1791, 1792, 1793, 1794, 1795, 1796, 1798, 1799, 1800, 1801, 1802, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1813, 1814, 1815, 1816, 1817, 1818, 1820, 1823, 1829, 1830, 1832, 1834, 1835, 1836, 1837, 1838, 1839, 1840, 1841, 1842, 1844, 1845, 1846, 1847, 1848, 1849, 1850, 1851, 1852, 1853, 1854, 1856, 1857, 1858, 1860, 1862, 1863, 1864, 1865, 1866, 1868, 1869, 1871], "class": [19, 20, 26, 32, 39, 41, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 144, 146, 148, 149, 150, 151, 154, 159, 160, 162, 164, 165, 167, 168, 169, 179, 180, 181, 237, 238, 298, 301, 316, 320, 321, 322, 323, 324, 325, 372, 375, 408, 416, 417, 418, 1090, 1097, 1189, 1192, 1214, 1249, 1253, 1283, 1284, 1392, 1447, 1450, 1535, 1541, 1637, 1639, 1650, 1688, 1704, 1707, 1714, 1725, 1729, 1808, 1809, 1817, 1819, 1820, 1826], "backend_handl": [19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 145, 164, 1809], "contextmanag": 19, "modul": [19, 20, 23, 25, 27, 36, 39, 42, 92, 93, 94, 97, 98, 99, 100, 140, 141, 144, 145, 153, 155, 157, 158, 160, 164, 165, 167, 169, 180, 181, 1090, 1215, 1809, 1819, 1820, 1822], "base": [19, 20, 43, 45, 46, 47, 48, 49, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 94, 95, 96, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 143, 146, 147, 148, 152, 154, 156, 159, 160, 161, 164, 180, 237, 238, 277, 278, 321, 322, 323, 324, 325, 400, 416, 417, 418, 450, 561, 564, 621, 624, 626, 629, 631, 634, 636, 639, 696, 699, 1090, 1161, 1230, 1236, 1244, 1247, 1283, 1284, 1552, 1568, 1571, 1714, 1715, 1719, 1720, 1724, 1725, 1729, 1730, 1734, 1751, 1762, 1765, 1819, 1824, 1826], "object": [19, 20, 80, 81, 94, 97, 98, 99, 100, 101, 102, 107, 108, 109, 110, 112, 113, 128, 129, 146, 156, 158, 159, 160, 166, 169, 196, 197, 203, 237, 261, 264, 321, 322, 323, 324, 325, 348, 361, 364, 400, 416, 417, 441, 445, 1283, 1284, 1637, 1641, 1643, 1645, 1646, 1647, 1652, 1653, 1654, 1655, 1661, 1683, 1686, 1819, 1825], "__init__": [19, 20, 23, 25, 41, 45, 48, 49, 94, 97, 98, 99, 100, 145, 148, 152, 158, 161, 164, 166, 167, 168, 169, 237, 238, 321, 322, 323, 324, 325, 416, 417, 418, 1283, 1284, 1809], "choose_random_backend": 19, "exclud": [19, 21, 88, 89, 136, 137, 150, 164, 237, 239, 240, 1661, 1677, 1680], "none": [19, 21, 25, 32, 46, 47, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 143, 145, 146, 148, 149, 150, 152, 153, 154, 155, 157, 158, 159, 160, 161, 162, 164, 166, 168, 169, 196, 198, 201, 203, 204, 207, 209, 212, 214, 217, 219, 222, 224, 227, 229, 232, 234, 235, 236, 237, 239, 240, 242, 244, 249, 251, 252, 253, 256, 258, 259, 261, 264, 266, 267, 270, 272, 275, 277, 278, 285, 288, 290, 293, 295, 296, 298, 301, 303, 307, 308, 312, 313, 315, 316, 320, 321, 328, 331, 338, 341, 350, 351, 352, 354, 355, 361, 364, 372, 375, 378, 413, 415, 416, 421, 422, 436, 437, 438, 439, 440, 441, 445, 448, 450, 451, 454, 456, 459, 461, 464, 466, 469, 471, 474, 476, 479, 481, 484, 486, 489, 491, 494, 496, 499, 501, 504, 506, 509, 511, 514, 516, 519, 521, 524, 526, 529, 531, 534, 536, 539, 541, 544, 546, 549, 551, 554, 556, 559, 561, 564, 566, 569, 571, 574, 576, 579, 581, 584, 586, 589, 591, 594, 596, 599, 601, 604, 606, 609, 611, 614, 616, 619, 621, 624, 626, 629, 631, 634, 636, 639, 641, 644, 646, 649, 651, 654, 656, 659, 661, 664, 666, 669, 671, 674, 676, 679, 681, 684, 686, 689, 691, 694, 696, 699, 701, 704, 706, 709, 711, 714, 716, 719, 721, 724, 726, 729, 731, 734, 736, 739, 741, 744, 746, 750, 751, 755, 756, 760, 761, 765, 766, 770, 1090, 1096, 1107, 1110, 1112, 1115, 1119, 1121, 1122, 1125, 1127, 1130, 1132, 1135, 1137, 1139, 1147, 1150, 1152, 1155, 1170, 1178, 1194, 1215, 1218, 1221, 1223, 1226, 1228, 1229, 1230, 1231, 1232, 1234, 1235, 1236, 1239, 1242, 1244, 1247, 1270, 1271, 1272, 1273, 1274, 1275, 1276, 1282, 1283, 1285, 1288, 1289, 1292, 1293, 1295, 1298, 1300, 1303, 1304, 1307, 1308, 1311, 1312, 1313, 1317, 1318, 1320, 1321, 1322, 1323, 1326, 1328, 1331, 1333, 1336, 1338, 1340, 1342, 1345, 1347, 1350, 1352, 1353, 1355, 1358, 1360, 1363, 1365, 1368, 1372, 1375, 1377, 1380, 1382, 1385, 1387, 1390, 1392, 1393, 1396, 1398, 1401, 1403, 1406, 1408, 1411, 1413, 1416, 1418, 1421, 1422, 1425, 1427, 1430, 1432, 1435, 1437, 1440, 1442, 1445, 1447, 1450, 1452, 1455, 1457, 1460, 1462, 1465, 1467, 1470, 1472, 1475, 1487, 1490, 1497, 1501, 1502, 1505, 1506, 1509, 1510, 1514, 1515, 1519, 1520, 1524, 1525, 1529, 1530, 1534, 1535, 1536, 1539, 1541, 1542, 1545, 1547, 1550, 1552, 1553, 1556, 1558, 1561, 1563, 1566, 1568, 1571, 1573, 1576, 1578, 1581, 1583, 1586, 1588, 1591, 1593, 1596, 1598, 1601, 1603, 1606, 1608, 1611, 1613, 1617, 1618, 1622, 1628, 1632, 1633, 1634, 1635, 1636, 1637, 1638, 1639, 1644, 1645, 1648, 1649, 1650, 1651, 1656, 1657, 1660, 1661, 1662, 1665, 1667, 1670, 1672, 1675, 1677, 1680, 1682, 1683, 1686, 1688, 1689, 1692, 1694, 1697, 1699, 1702, 1704, 1707, 1709, 1713, 1714, 1730, 1734, 1735, 1736, 1739, 1741, 1744, 1746, 1749, 1751, 1752, 1755, 1757, 1760, 1762, 1765, 1766, 1769, 1770, 1773, 1774, 1777, 1778, 1781, 1783, 1786, 1787, 1791, 1792, 1796, 1797, 1798, 1801, 1803, 1806], "clear_backend_stack": 19, "current_backend": [19, 152, 155, 158, 161, 164], "kwarg": [19, 23, 50, 51, 52, 63, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 152, 158, 164, 168, 237, 238, 1090, 1214, 1270], "return": [19, 23, 24, 25, 32, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 144, 146, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 166, 167, 168, 169, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 196, 197, 198, 201, 203, 204, 207, 209, 212, 214, 217, 219, 222, 224, 227, 229, 232, 234, 235, 237, 239, 240, 242, 244, 246, 247, 248, 249, 251, 252, 253, 256, 258, 259, 261, 264, 266, 267, 270, 272, 275, 277, 278, 280, 283, 285, 288, 290, 293, 295, 296, 298, 301, 303, 307, 308, 312, 313, 315, 316, 320, 321, 326, 327, 328, 331, 333, 336, 338, 341, 343, 346, 348, 349, 350, 351, 352, 354, 355, 356, 358, 360, 361, 364, 366, 367, 369, 370, 372, 375, 377, 378, 379, 382, 384, 387, 389, 392, 394, 397, 399, 400, 401, 404, 410, 415, 416, 417, 419, 420, 421, 422, 423, 425, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 445, 446, 447, 448, 449, 450, 451, 454, 456, 459, 461, 464, 466, 469, 471, 474, 476, 479, 481, 484, 486, 489, 491, 494, 496, 499, 501, 504, 506, 509, 511, 514, 516, 519, 521, 524, 526, 529, 531, 534, 536, 539, 541, 544, 546, 549, 551, 554, 556, 559, 561, 564, 566, 569, 571, 574, 576, 579, 581, 584, 586, 589, 591, 594, 596, 599, 601, 604, 606, 609, 611, 614, 616, 619, 621, 624, 626, 629, 631, 634, 636, 639, 641, 644, 646, 649, 651, 654, 656, 659, 661, 664, 666, 669, 671, 674, 676, 679, 681, 684, 686, 689, 691, 694, 696, 699, 701, 704, 706, 709, 711, 714, 716, 719, 721, 724, 726, 729, 731, 734, 736, 739, 741, 744, 746, 750, 751, 755, 756, 760, 761, 765, 766, 770, 1090, 1091, 1094, 1096, 1097, 1098, 1100, 1101, 1104, 1106, 1107, 1110, 1112, 1115, 1117, 1118, 1119, 1121, 1122, 1125, 1127, 1130, 1132, 1135, 1137, 1139, 1140, 1143, 1145, 1146, 1147, 1150, 1152, 1155, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1167, 1169, 1171, 1172, 1173, 1176, 1178, 1179, 1182, 1184, 1187, 1189, 1192, 1194, 1195, 1198, 1200, 1203, 1205, 1207, 1208, 1211, 1213, 1214, 1215, 1216, 1218, 1221, 1223, 1226, 1228, 1229, 1230, 1231, 1232, 1234, 1235, 1236, 1237, 1238, 1239, 1242, 1244, 1247, 1249, 1253, 1254, 1255, 1258, 1259, 1260, 1264, 1265, 1269, 1270, 1271, 1272, 1273, 1274, 1275, 1276, 1277, 1281, 1282, 1283, 1285, 1288, 1289, 1292, 1293, 1294, 1295, 1298, 1299, 1300, 1303, 1304, 1307, 1308, 1311, 1312, 1313, 1317, 1318, 1319, 1320, 1321, 1322, 1323, 1326, 1328, 1331, 1333, 1336, 1338, 1340, 1342, 1345, 1347, 1350, 1352, 1353, 1355, 1358, 1360, 1363, 1365, 1368, 1372, 1375, 1377, 1380, 1382, 1385, 1387, 1390, 1392, 1393, 1396, 1398, 1401, 1403, 1406, 1408, 1411, 1413, 1416, 1418, 1421, 1422, 1425, 1427, 1430, 1432, 1435, 1437, 1440, 1442, 1445, 1447, 1450, 1452, 1455, 1457, 1460, 1462, 1465, 1467, 1470, 1472, 1475, 1477, 1480, 1482, 1485, 1487, 1490, 1492, 1496, 1497, 1501, 1502, 1505, 1506, 1509, 1510, 1514, 1515, 1519, 1520, 1524, 1525, 1529, 1530, 1534, 1535, 1536, 1539, 1541, 1542, 1545, 1547, 1550, 1552, 1553, 1556, 1558, 1561, 1563, 1566, 1568, 1571, 1573, 1576, 1578, 1581, 1583, 1586, 1588, 1591, 1593, 1596, 1598, 1601, 1603, 1606, 1608, 1611, 1613, 1617, 1618, 1622, 1623, 1627, 1628, 1632, 1633, 1634, 1635, 1636, 1637, 1638, 1639, 1640, 1641, 1644, 1645, 1647, 1648, 1649, 1650, 1651, 1655, 1656, 1657, 1660, 1661, 1662, 1665, 1667, 1670, 1672, 1675, 1677, 1680, 1682, 1683, 1686, 1688, 1689, 1692, 1694, 1697, 1699, 1702, 1704, 1707, 1709, 1713, 1714, 1715, 1719, 1720, 1724, 1725, 1729, 1730, 1734, 1735, 1736, 1739, 1741, 1744, 1746, 1749, 1751, 1752, 1755, 1757, 1760, 1762, 1765, 1766, 1769, 1770, 1773, 1774, 1777, 1778, 1781, 1783, 1786, 1787, 1791, 1792, 1796, 1797, 1798, 1801, 1803, 1806, 1809, 1820], "current": [19, 23, 24, 25, 32, 36, 39, 41, 42, 43, 64, 65, 94, 97, 98, 99, 100, 143, 145, 146, 148, 149, 152, 155, 156, 158, 159, 160, 162, 164, 169, 180, 181, 321, 366, 367, 369, 370, 378, 411, 412, 413, 414, 415, 416, 427, 428, 429, 430, 434, 436, 449, 1090, 1145, 1146, 1157, 1158, 1159, 1163, 1171, 1178, 1194, 1216, 1217, 1238, 1249, 1253, 1283, 1312, 1320, 1392, 1418, 1421, 1637, 1638, 1648, 1649, 1809, 1819, 1825, 1826], "prioriti": [19, 23, 43, 97, 98, 157], "global_backend": [19, 23], "argument": [19, 23, 25, 34, 41, 50, 51, 52, 53, 54, 61, 62, 64, 65, 72, 73, 94, 97, 98, 99, 100, 101, 102, 109, 110, 112, 113, 142, 143, 144, 145, 146, 150, 151, 153, 155, 156, 159, 160, 161, 162, 164, 166, 167, 234, 235, 237, 239, 240, 242, 244, 252, 253, 256, 258, 259, 261, 264, 266, 267, 270, 272, 275, 277, 278, 280, 283, 295, 296, 298, 301, 303, 307, 308, 312, 313, 315, 316, 320, 321, 343, 346, 379, 382, 389, 392, 401, 404, 450, 451, 454, 456, 459, 461, 464, 466, 469, 471, 474, 476, 479, 481, 484, 486, 489, 491, 494, 496, 499, 501, 504, 506, 509, 516, 519, 521, 524, 526, 529, 531, 534, 536, 539, 546, 549, 551, 554, 566, 569, 571, 574, 576, 579, 581, 584, 586, 589, 591, 594, 596, 599, 601, 604, 616, 619, 626, 629, 631, 634, 636, 639, 641, 644, 646, 649, 651, 654, 656, 659, 661, 664, 676, 679, 681, 684, 686, 689, 691, 694, 696, 699, 711, 714, 716, 719, 721, 724, 726, 729, 731, 734, 736, 739, 741, 744, 746, 750, 751, 755, 756, 760, 761, 765, 1090, 1096, 1097, 1106, 1119, 1121, 1147, 1150, 1164, 1167, 1173, 1176, 1179, 1182, 1214, 1223, 1226, 1249, 1253, 1265, 1269, 1270, 1282, 1283, 1313, 1317, 1321, 1333, 1336, 1342, 1345, 1355, 1358, 1372, 1375, 1382, 1385, 1387, 1390, 1392, 1393, 1396, 1398, 1401, 1403, 1406, 1408, 1411, 1413, 1416, 1418, 1421, 1422, 1425, 1427, 1430, 1437, 1440, 1442, 1445, 1447, 1450, 1452, 1455, 1457, 1460, 1462, 1465, 1467, 1470, 1472, 1475, 1477, 1480, 1482, 1485, 1487, 1490, 1492, 1496, 1497, 1501, 1502, 1505, 1520, 1524, 1525, 1529, 1530, 1534, 1552, 1553, 1556, 1558, 1561, 1563, 1566, 1568, 1571, 1573, 1576, 1578, 1581, 1583, 1586, 1588, 1591, 1593, 1596, 1598, 1601, 1603, 1606, 1608, 1611, 1613, 1617, 1618, 1622, 1623, 1627, 1628, 1632, 1637, 1644, 1656, 1657, 1660, 1688, 1689, 1692, 1694, 1697, 1704, 1707, 1709, 1713, 1714, 1715, 1719, 1720, 1724, 1725, 1729, 1730, 1734, 1735, 1736, 1739, 1746, 1749, 1751, 1766, 1769, 1770, 1773, 1774, 1777, 1778, 1781, 1783, 1786, 1787, 1791, 1792, 1796, 1797, 1798, 1801, 1803, 1806, 1808, 1819], "": [19, 23, 25, 26, 32, 35, 36, 37, 38, 39, 41, 42, 43, 55, 56, 63, 64, 65, 66, 67, 72, 73, 88, 89, 111, 112, 113, 114, 115, 120, 121, 136, 137, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 158, 159, 160, 161, 162, 164, 166, 167, 168, 169, 180, 181, 236, 237, 280, 283, 303, 307, 308, 312, 321, 366, 367, 369, 370, 416, 422, 428, 429, 439, 450, 711, 714, 1090, 1145, 1146, 1249, 1253, 1283, 1289, 1292, 1294, 1295, 1298, 1299, 1300, 1303, 1308, 1311, 1392, 1408, 1411, 1457, 1460, 1492, 1496, 1497, 1501, 1637, 1650, 1751, 1783, 1786, 1792, 1796, 1808, 1809, 1815, 1818, 1819, 1820, 1822, 1823, 1824, 1825], "paramet": [19, 23, 24, 25, 27, 41, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 61, 62, 63, 64, 65, 66, 67, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 151, 152, 154, 156, 158, 159, 160, 161, 164, 166, 167, 180, 196, 197, 198, 201, 203, 204, 207, 209, 212, 214, 217, 219, 222, 224, 227, 229, 232, 234, 235, 237, 239, 240, 242, 244, 249, 251, 252, 253, 256, 258, 259, 261, 264, 266, 267, 270, 272, 275, 277, 278, 280, 283, 285, 288, 290, 293, 295, 296, 298, 301, 303, 307, 308, 312, 313, 315, 316, 320, 321, 326, 327, 328, 331, 333, 336, 338, 341, 343, 346, 348, 349, 350, 351, 352, 354, 355, 356, 358, 360, 361, 364, 366, 367, 369, 370, 372, 375, 377, 378, 379, 382, 384, 387, 389, 392, 394, 397, 399, 401, 404, 406, 407, 408, 409, 410, 413, 415, 416, 417, 418, 419, 420, 421, 422, 423, 425, 427, 428, 429, 430, 432, 434, 435, 436, 437, 438, 439, 440, 441, 445, 446, 449, 450, 451, 454, 456, 459, 461, 464, 466, 469, 471, 474, 476, 479, 481, 484, 486, 489, 491, 494, 496, 499, 501, 504, 506, 509, 511, 514, 516, 519, 521, 524, 526, 529, 531, 534, 536, 539, 541, 544, 546, 549, 551, 554, 556, 559, 561, 564, 566, 569, 571, 574, 576, 579, 581, 584, 586, 589, 591, 594, 596, 599, 601, 604, 606, 609, 611, 614, 616, 619, 621, 624, 626, 629, 631, 634, 636, 639, 641, 644, 646, 649, 651, 654, 656, 659, 661, 664, 666, 669, 671, 674, 676, 679, 681, 684, 686, 689, 691, 694, 696, 699, 701, 704, 706, 709, 711, 714, 716, 719, 721, 724, 726, 729, 731, 734, 736, 739, 741, 744, 746, 750, 751, 755, 756, 760, 761, 765, 766, 770, 1090, 1091, 1094, 1096, 1097, 1098, 1100, 1101, 1104, 1106, 1107, 1110, 1112, 1115, 1119, 1121, 1122, 1125, 1127, 1130, 1132, 1135, 1137, 1139, 1140, 1143, 1145, 1146, 1147, 1150, 1152, 1155, 1160, 1164, 1167, 1170, 1173, 1176, 1178, 1179, 1182, 1184, 1187, 1189, 1192, 1194, 1195, 1198, 1200, 1203, 1205, 1207, 1208, 1211, 1214, 1215, 1218, 1221, 1223, 1226, 1230, 1231, 1233, 1236, 1237, 1239, 1242, 1244, 1247, 1249, 1253, 1254, 1255, 1258, 1259, 1260, 1264, 1265, 1269, 1270, 1277, 1281, 1282, 1283, 1285, 1288, 1289, 1292, 1293, 1294, 1295, 1298, 1299, 1300, 1303, 1304, 1307, 1308, 1311, 1312, 1313, 1317, 1319, 1320, 1321, 1323, 1326, 1328, 1331, 1333, 1336, 1338, 1340, 1342, 1345, 1347, 1350, 1352, 1353, 1355, 1358, 1360, 1363, 1365, 1368, 1372, 1375, 1377, 1380, 1382, 1385, 1387, 1390, 1392, 1393, 1396, 1398, 1401, 1403, 1406, 1408, 1411, 1413, 1416, 1418, 1421, 1422, 1425, 1427, 1430, 1432, 1435, 1437, 1440, 1442, 1445, 1447, 1450, 1452, 1455, 1457, 1460, 1462, 1465, 1467, 1470, 1472, 1475, 1477, 1480, 1482, 1485, 1487, 1490, 1492, 1496, 1497, 1501, 1502, 1505, 1510, 1514, 1515, 1519, 1520, 1524, 1525, 1529, 1530, 1534, 1535, 1536, 1539, 1541, 1542, 1545, 1547, 1550, 1552, 1553, 1556, 1558, 1561, 1563, 1566, 1568, 1571, 1573, 1576, 1578, 1581, 1583, 1586, 1588, 1591, 1593, 1596, 1598, 1601, 1603, 1606, 1608, 1611, 1613, 1617, 1618, 1622, 1623, 1627, 1628, 1632, 1633, 1634, 1635, 1636, 1637, 1638, 1639, 1640, 1641, 1643, 1644, 1645, 1646, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654, 1655, 1656, 1657, 1660, 1661, 1662, 1665, 1667, 1670, 1672, 1675, 1677, 1680, 1682, 1683, 1686, 1688, 1689, 1692, 1694, 1697, 1699, 1702, 1704, 1707, 1709, 1713, 1714, 1715, 1719, 1720, 1724, 1725, 1729, 1730, 1734, 1735, 1736, 1739, 1741, 1744, 1746, 1749, 1751, 1752, 1755, 1757, 1760, 1762, 1765, 1766, 1769, 1770, 1773, 1774, 1777, 1778, 1781, 1783, 1786, 1787, 1791, 1792, 1796, 1797, 1798, 1801, 1803, 1806, 1820], "from": [19, 23, 25, 26, 34, 35, 36, 37, 39, 40, 41, 42, 43, 50, 51, 52, 53, 54, 55, 56, 57, 58, 61, 62, 63, 64, 65, 66, 67, 70, 71, 72, 73, 76, 77, 80, 81, 82, 83, 88, 89, 90, 91, 92, 93, 94, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 109, 110, 111, 112, 113, 114, 115, 118, 119, 120, 121, 124, 125, 128, 129, 130, 131, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 158, 159, 160, 161, 162, 164, 165, 166, 167, 168, 169, 180, 181, 237, 239, 240, 253, 256, 261, 264, 266, 267, 270, 280, 283, 285, 288, 298, 301, 316, 320, 321, 343, 346, 400, 401, 404, 416, 422, 430, 434, 439, 440, 450, 541, 544, 701, 704, 736, 739, 1090, 1106, 1119, 1121, 1147, 1150, 1152, 1155, 1160, 1217, 1233, 1255, 1258, 1282, 1283, 1289, 1292, 1300, 1303, 1318, 1321, 1355, 1358, 1360, 1363, 1365, 1368, 1382, 1385, 1392, 1413, 1416, 1492, 1496, 1515, 1519, 1520, 1524, 1552, 1558, 1561, 1573, 1576, 1588, 1591, 1603, 1606, 1633, 1634, 1635, 1636, 1637, 1639, 1650, 1651, 1661, 1662, 1665, 1667, 1670, 1672, 1675, 1677, 1680, 1688, 1694, 1697, 1709, 1713, 1714, 1715, 1719, 1725, 1729, 1751, 1752, 1755, 1757, 1760, 1778, 1781, 1783, 1786, 1787, 1791, 1792, 1796, 1797, 1798, 1801, 1803, 1806, 1808, 1809, 1815, 1817, 1818, 1819, 1820, 1821, 1823, 1824, 1825, 1826], "which": [19, 23, 24, 25, 27, 34, 35, 36, 39, 40, 41, 42, 43, 46, 47, 55, 56, 57, 58, 63, 64, 65, 66, 67, 72, 73, 74, 75, 76, 77, 80, 81, 82, 83, 86, 87, 88, 89, 90, 91, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 118, 119, 120, 121, 122, 123, 124, 125, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 166, 167, 168, 169, 180, 181, 234, 235, 236, 237, 239, 240, 242, 244, 252, 253, 256, 258, 259, 266, 267, 270, 272, 275, 277, 278, 285, 288, 290, 293, 295, 296, 298, 301, 303, 307, 308, 312, 313, 315, 316, 320, 321, 343, 346, 349, 356, 358, 361, 364, 372, 375, 378, 415, 416, 423, 425, 430, 434, 436, 438, 439, 440, 450, 711, 714, 1090, 1096, 1119, 1121, 1147, 1150, 1152, 1155, 1157, 1160, 1189, 1192, 1216, 1217, 1223, 1226, 1282, 1283, 1289, 1292, 1293, 1294, 1295, 1298, 1299, 1300, 1303, 1304, 1307, 1308, 1311, 1313, 1317, 1319, 1321, 1382, 1385, 1392, 1398, 1401, 1408, 1411, 1413, 1416, 1447, 1450, 1487, 1490, 1492, 1496, 1520, 1524, 1525, 1529, 1535, 1542, 1545, 1547, 1550, 1552, 1558, 1561, 1568, 1571, 1573, 1576, 1583, 1586, 1593, 1596, 1598, 1601, 1608, 1611, 1623, 1627, 1637, 1643, 1644, 1645, 1646, 1651, 1652, 1653, 1654, 1655, 1661, 1662, 1665, 1667, 1670, 1672, 1675, 1677, 1680, 1688, 1689, 1692, 1694, 1697, 1699, 1702, 1704, 1707, 1709, 1713, 1714, 1715, 1719, 1720, 1724, 1725, 1729, 1730, 1734, 1735, 1736, 1739, 1746, 1749, 1751, 1752, 1755, 1757, 1760, 1766, 1769, 1770, 1773, 1774, 1777, 1778, 1781, 1783, 1786, 1787, 1791, 1792, 1796, 1797, 1798, 1801, 1803, 1806, 1808, 1809, 1815, 1816, 1817, 1818, 1819, 1820, 1822, 1824, 1825, 1826], "try": [19, 23, 33, 35, 36, 39, 41, 42, 43, 97, 98, 143, 144, 146, 148, 152, 153, 164, 166, 181, 1090, 1270, 1809], "infer": [19, 23, 24, 55, 56, 64, 65, 76, 77, 103, 104, 112, 113, 124, 125, 142, 145, 148, 149, 156, 160, 164, 169, 234, 235, 237, 239, 240, 253, 256, 266, 267, 270, 285, 288, 298, 301, 316, 320, 321, 350, 351, 352, 354, 355, 1090, 1164, 1167, 1237, 1552, 1588, 1591, 1817, 1818, 1821, 1823], "when": [19, 23, 34, 35, 37, 38, 40, 41, 42, 43, 55, 56, 57, 58, 63, 72, 73, 74, 75, 80, 81, 82, 83, 88, 89, 94, 97, 98, 99, 100, 103, 104, 105, 106, 109, 110, 111, 120, 121, 122, 123, 128, 129, 130, 131, 136, 137, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 164, 166, 167, 169, 181, 237, 290, 293, 321, 328, 331, 450, 466, 469, 566, 569, 631, 634, 696, 699, 1090, 1189, 1192, 1233, 1244, 1247, 1392, 1457, 1460, 1482, 1485, 1535, 1536, 1539, 1541, 1542, 1545, 1547, 1550, 1637, 1638, 1639, 1648, 1649, 1650, 1661, 1667, 1670, 1672, 1675, 1677, 1680, 1688, 1689, 1692, 1694, 1697, 1704, 1707, 1709, 1713, 1751, 1766, 1769, 1774, 1777, 1783, 1786, 1792, 1796, 1817, 1819, 1822, 1823, 1824, 1825], "global": [19, 23, 25, 26, 28, 29, 30, 31, 32, 42, 64, 65, 78, 79, 94, 97, 98, 99, 100, 112, 113, 126, 127, 145, 148, 149, 152, 155, 158, 164, 321, 350, 351, 352, 354, 355, 416, 438, 439, 440, 1090, 1161, 1162, 1169, 1230, 1231, 1233, 1239, 1242, 1244, 1247, 1274, 1283, 1312, 1318, 1320, 1656, 1657, 1660, 1819], "set": [19, 23, 25, 26, 28, 29, 30, 31, 32, 34, 37, 39, 43, 50, 53, 54, 63, 64, 65, 66, 67, 72, 73, 82, 83, 85, 86, 87, 88, 89, 97, 98, 111, 112, 113, 120, 121, 130, 131, 133, 134, 135, 136, 137, 142, 143, 144, 146, 148, 149, 150, 155, 156, 157, 158, 159, 160, 161, 164, 166, 167, 321, 406, 408, 409, 416, 422, 437, 438, 439, 440, 450, 486, 489, 1090, 1091, 1094, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1249, 1253, 1272, 1392, 1398, 1401, 1447, 1450, 1457, 1460, 1472, 1475, 1487, 1490, 1492, 1496, 1637, 1638, 1648, 1649, 1650, 1654, 1655, 1661, 1682, 1688, 1689, 1692, 1715, 1719, 1720, 1724, 1725, 1729, 1730, 1734, 1735, 1736, 1739, 1746, 1749, 1751, 1783, 1786, 1792, 1796, 1817, 1818, 1819, 1820, 1821, 1823, 1826], "ret": [19, 23, 25, 32, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 61, 62, 63, 64, 65, 66, 67, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 88, 89, 90, 91, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 151, 157, 158, 161, 164, 169, 196, 197, 198, 201, 203, 204, 207, 209, 212, 214, 217, 219, 222, 224, 227, 229, 232, 234, 235, 237, 239, 240, 242, 244, 249, 251, 252, 253, 256, 258, 259, 261, 264, 266, 267, 270, 272, 275, 277, 278, 280, 283, 285, 288, 290, 293, 295, 296, 298, 301, 303, 307, 308, 312, 313, 315, 316, 320, 321, 326, 327, 328, 331, 333, 336, 338, 341, 343, 346, 348, 349, 356, 358, 360, 361, 364, 366, 367, 369, 370, 372, 375, 378, 379, 382, 384, 387, 389, 392, 394, 397, 399, 401, 404, 415, 416, 417, 419, 420, 422, 423, 425, 427, 428, 429, 430, 431, 432, 433, 434, 435, 439, 440, 441, 445, 446, 447, 449, 450, 451, 454, 456, 459, 461, 464, 466, 469, 471, 474, 476, 479, 481, 484, 486, 489, 491, 494, 496, 499, 501, 504, 506, 509, 511, 514, 516, 519, 521, 524, 526, 529, 531, 534, 536, 539, 541, 544, 546, 549, 551, 554, 556, 559, 561, 564, 566, 569, 571, 574, 576, 579, 581, 584, 586, 589, 591, 594, 596, 599, 601, 604, 606, 609, 611, 614, 616, 619, 621, 624, 626, 629, 631, 634, 636, 639, 641, 644, 646, 649, 651, 654, 656, 659, 661, 664, 666, 669, 671, 674, 676, 679, 681, 684, 686, 689, 691, 694, 696, 699, 701, 704, 706, 709, 711, 714, 716, 719, 721, 724, 726, 729, 731, 734, 736, 739, 741, 744, 746, 750, 751, 755, 756, 760, 761, 765, 766, 770, 1090, 1091, 1094, 1096, 1097, 1098, 1100, 1101, 1104, 1106, 1107, 1110, 1112, 1115, 1117, 1118, 1119, 1121, 1122, 1125, 1127, 1130, 1132, 1135, 1137, 1139, 1140, 1143, 1145, 1146, 1147, 1150, 1152, 1155, 1160, 1161, 1162, 1164, 1167, 1169, 1172, 1173, 1176, 1178, 1179, 1182, 1184, 1187, 1189, 1192, 1194, 1195, 1198, 1200, 1203, 1205, 1207, 1208, 1211, 1214, 1215, 1218, 1221, 1223, 1226, 1237, 1239, 1242, 1244, 1247, 1249, 1253, 1254, 1255, 1258, 1259, 1260, 1264, 1265, 1269, 1277, 1281, 1282, 1283, 1285, 1288, 1289, 1292, 1293, 1294, 1295, 1298, 1299, 1300, 1303, 1304, 1307, 1308, 1311, 1312, 1313, 1317, 1318, 1319, 1320, 1321, 1323, 1326, 1328, 1331, 1333, 1336, 1338, 1340, 1342, 1345, 1347, 1350, 1352, 1353, 1355, 1358, 1360, 1363, 1365, 1368, 1372, 1375, 1377, 1380, 1382, 1385, 1387, 1390, 1392, 1393, 1396, 1398, 1401, 1403, 1406, 1408, 1411, 1413, 1416, 1418, 1421, 1422, 1425, 1427, 1430, 1432, 1435, 1437, 1440, 1442, 1445, 1447, 1450, 1452, 1455, 1457, 1460, 1462, 1465, 1467, 1470, 1472, 1475, 1477, 1480, 1482, 1485, 1487, 1490, 1492, 1496, 1497, 1501, 1502, 1505, 1510, 1514, 1515, 1519, 1520, 1524, 1525, 1529, 1530, 1534, 1535, 1536, 1539, 1541, 1542, 1545, 1547, 1550, 1552, 1553, 1556, 1558, 1561, 1563, 1566, 1568, 1571, 1573, 1576, 1578, 1581, 1583, 1586, 1588, 1591, 1593, 1596, 1598, 1601, 1603, 1606, 1608, 1611, 1613, 1617, 1623, 1627, 1628, 1632, 1633, 1634, 1635, 1636, 1637, 1638, 1639, 1641, 1644, 1647, 1648, 1649, 1650, 1656, 1657, 1660, 1661, 1662, 1665, 1667, 1670, 1672, 1675, 1677, 1680, 1683, 1686, 1688, 1689, 1692, 1694, 1697, 1699, 1702, 1704, 1707, 1709, 1713, 1714, 1715, 1719, 1720, 1724, 1725, 1729, 1730, 1734, 1735, 1736, 1739, 1741, 1744, 1746, 1749, 1751, 1752, 1755, 1757, 1760, 1762, 1765, 1766, 1769, 1770, 1773, 1774, 1777, 1778, 1781, 1783, 1786, 1787, 1791, 1792, 1796, 1797, 1798, 1801, 1803, 1806], "exampl": [19, 23, 25, 26, 32, 36, 41, 42, 43, 45, 46, 47, 48, 49, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 99, 100, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 149, 151, 152, 153, 155, 156, 157, 158, 160, 161, 164, 166, 167, 168, 169, 180, 181, 196, 197, 198, 201, 203, 204, 207, 209, 212, 214, 217, 219, 222, 224, 227, 229, 232, 234, 235, 237, 249, 251, 266, 267, 270, 277, 278, 280, 283, 295, 296, 298, 301, 313, 315, 316, 320, 321, 328, 331, 333, 336, 338, 341, 343, 346, 349, 351, 352, 354, 355, 356, 358, 360, 361, 364, 366, 367, 369, 370, 372, 375, 377, 378, 384, 387, 389, 392, 394, 397, 401, 404, 406, 408, 409, 411, 412, 413, 414, 415, 416, 417, 420, 421, 422, 423, 425, 427, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 441, 445, 446, 447, 448, 449, 450, 451, 454, 456, 459, 461, 464, 466, 469, 471, 474, 476, 479, 481, 484, 486, 489, 491, 494, 496, 499, 501, 504, 511, 514, 516, 519, 521, 524, 526, 529, 531, 534, 536, 539, 541, 544, 546, 549, 551, 554, 556, 559, 561, 564, 566, 569, 571, 574, 576, 579, 581, 584, 586, 589, 591, 594, 596, 599, 601, 604, 606, 609, 611, 614, 616, 619, 621, 624, 626, 629, 631, 634, 641, 644, 646, 649, 651, 654, 656, 659, 661, 664, 666, 669, 671, 674, 676, 679, 681, 684, 686, 689, 691, 694, 696, 699, 701, 704, 711, 714, 716, 719, 721, 724, 726, 729, 731, 734, 736, 739, 741, 744, 746, 750, 751, 755, 756, 760, 761, 765, 766, 770, 1090, 1091, 1094, 1097, 1098, 1100, 1106, 1107, 1110, 1112, 1115, 1119, 1121, 1127, 1130, 1132, 1135, 1137, 1139, 1147, 1150, 1152, 1155, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1167, 1169, 1171, 1173, 1176, 1179, 1182, 1184, 1187, 1200, 1203, 1208, 1211, 1214, 1223, 1226, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1242, 1249, 1253, 1255, 1258, 1260, 1264, 1265, 1269, 1270, 1271, 1272, 1273, 1274, 1275, 1276, 1277, 1281, 1282, 1283, 1285, 1288, 1294, 1295, 1298, 1299, 1300, 1303, 1308, 1311, 1312, 1313, 1317, 1318, 1319, 1320, 1321, 1323, 1326, 1333, 1336, 1342, 1345, 1347, 1350, 1355, 1358, 1372, 1375, 1382, 1385, 1387, 1390, 1392, 1393, 1396, 1398, 1401, 1403, 1406, 1408, 1411, 1413, 1416, 1427, 1430, 1437, 1440, 1442, 1445, 1447, 1450, 1457, 1460, 1462, 1465, 1467, 1470, 1472, 1475, 1482, 1485, 1492, 1496, 1497, 1501, 1502, 1505, 1510, 1514, 1515, 1519, 1535, 1536, 1539, 1541, 1542, 1545, 1547, 1550, 1552, 1553, 1556, 1558, 1561, 1563, 1566, 1568, 1571, 1573, 1576, 1578, 1581, 1583, 1586, 1588, 1591, 1593, 1596, 1598, 1601, 1603, 1606, 1608, 1611, 1613, 1617, 1618, 1622, 1623, 1627, 1637, 1639, 1641, 1644, 1645, 1646, 1647, 1649, 1654, 1655, 1656, 1657, 1660, 1661, 1662, 1665, 1667, 1670, 1672, 1675, 1677, 1680, 1682, 1683, 1686, 1688, 1689, 1692, 1694, 1697, 1699, 1702, 1704, 1707, 1709, 1713, 1714, 1715, 1719, 1720, 1724, 1725, 1729, 1735, 1736, 1739, 1741, 1744, 1746, 1749, 1751, 1752, 1755, 1757, 1760, 1762, 1765, 1766, 1769, 1770, 1773, 1774, 1777, 1778, 1781, 1783, 1786, 1787, 1791, 1792, 1796, 1797, 1798, 1801, 1803, 1806, 1809, 1816, 1817, 1820, 1822, 1825, 1826], "If": [19, 23, 25, 26, 34, 37, 38, 39, 41, 42, 43, 45, 50, 53, 54, 55, 56, 57, 58, 61, 62, 63, 66, 67, 72, 73, 74, 75, 76, 77, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 94, 95, 96, 97, 98, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 118, 119, 120, 121, 122, 123, 124, 125, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 166, 167, 169, 181, 196, 234, 236, 237, 239, 240, 242, 244, 252, 253, 256, 258, 259, 266, 267, 270, 272, 275, 277, 278, 280, 283, 295, 296, 298, 301, 303, 307, 308, 312, 313, 315, 316, 320, 321, 328, 331, 338, 341, 401, 404, 416, 422, 439, 450, 451, 454, 456, 459, 461, 464, 466, 469, 471, 474, 476, 479, 481, 484, 486, 489, 526, 529, 531, 534, 536, 539, 561, 564, 566, 569, 571, 574, 606, 609, 621, 624, 626, 629, 631, 634, 636, 639, 641, 644, 651, 654, 656, 659, 666, 669, 671, 674, 676, 679, 696, 699, 711, 714, 716, 719, 721, 724, 726, 729, 731, 734, 736, 739, 751, 755, 756, 760, 761, 765, 1089, 1090, 1189, 1192, 1249, 1253, 1282, 1283, 1293, 1312, 1320, 1321, 1392, 1393, 1396, 1398, 1401, 1408, 1411, 1447, 1450, 1452, 1455, 1457, 1460, 1472, 1475, 1477, 1480, 1482, 1485, 1487, 1490, 1492, 1496, 1515, 1519, 1520, 1524, 1525, 1529, 1535, 1536, 1539, 1541, 1542, 1545, 1547, 1550, 1552, 1558, 1561, 1568, 1571, 1573, 1576, 1588, 1591, 1593, 1596, 1598, 1601, 1603, 1606, 1608, 1611, 1633, 1634, 1635, 1637, 1650, 1651, 1656, 1661, 1667, 1670, 1672, 1675, 1677, 1680, 1688, 1689, 1692, 1694, 1697, 1704, 1707, 1714, 1715, 1719, 1720, 1724, 1725, 1729, 1730, 1734, 1735, 1736, 1739, 1741, 1744, 1746, 1749, 1751, 1752, 1755, 1757, 1760, 1766, 1769, 1770, 1773, 1774, 1777, 1778, 1781, 1783, 1786, 1787, 1791, 1792, 1796, 1797, 1798, 1801, 1803, 1806, 1809, 1816, 1817, 1818, 1819, 1820, 1821, 1822, 1823, 1824, 1825, 1826, 1828, 1831, 1833, 1843, 1855, 1859, 1861, 1867], "import": [19, 23, 24, 35, 38, 40, 41, 42, 43, 92, 93, 140, 141, 143, 144, 145, 146, 148, 149, 150, 151, 153, 157, 158, 159, 160, 161, 164, 166, 167, 169, 181, 416, 420, 421, 437, 438, 1809, 1815, 1817, 1819, 1822, 1823, 1825], "numpi": [19, 23, 25, 26, 29, 34, 35, 40, 41, 42, 43, 64, 65, 88, 89, 112, 113, 143, 145, 147, 148, 149, 152, 154, 157, 159, 160, 161, 162, 164, 166, 169, 416, 420, 1090, 1249, 1253, 1260, 1264, 1751, 1762, 1765, 1808, 1809, 1821, 1826], "np": [19, 23, 41, 109, 110, 112, 113, 144, 148, 149, 154, 157, 158, 159, 160, 161, 162, 164, 166, 167, 169, 450, 606, 609, 1090, 1239, 1242, 1637, 1644, 1808, 1809], "arrai": [19, 23, 41, 42, 43, 46, 47, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 142, 145, 146, 148, 149, 150, 151, 152, 153, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 181, 182, 194, 196, 198, 201, 204, 207, 209, 212, 214, 217, 219, 222, 224, 227, 229, 232, 236, 237, 239, 240, 242, 244, 249, 251, 252, 253, 256, 258, 259, 261, 264, 266, 267, 270, 272, 275, 277, 278, 280, 283, 285, 288, 290, 293, 295, 296, 298, 301, 303, 307, 308, 312, 313, 315, 316, 320, 321, 328, 331, 333, 336, 338, 341, 343, 346, 350, 351, 352, 354, 355, 356, 358, 361, 364, 372, 375, 377, 379, 382, 384, 387, 389, 392, 394, 397, 399, 400, 401, 404, 410, 416, 422, 423, 425, 430, 434, 436, 440, 441, 445, 450, 451, 454, 456, 459, 461, 464, 466, 469, 471, 474, 476, 479, 481, 484, 486, 489, 491, 494, 496, 499, 501, 504, 506, 509, 511, 514, 516, 519, 521, 524, 526, 529, 531, 534, 536, 539, 541, 544, 546, 549, 551, 554, 556, 559, 561, 564, 566, 569, 571, 574, 576, 579, 581, 584, 586, 589, 591, 594, 596, 599, 601, 604, 606, 609, 611, 614, 616, 619, 621, 624, 626, 629, 631, 634, 636, 639, 641, 644, 646, 649, 651, 654, 656, 659, 661, 664, 666, 669, 671, 674, 676, 679, 681, 684, 686, 689, 691, 694, 696, 699, 701, 704, 706, 709, 711, 714, 716, 719, 721, 724, 726, 729, 731, 734, 736, 739, 741, 744, 746, 750, 751, 755, 756, 760, 761, 765, 766, 770, 1090, 1091, 1094, 1098, 1100, 1101, 1104, 1107, 1110, 1112, 1115, 1119, 1121, 1122, 1125, 1127, 1130, 1132, 1135, 1137, 1139, 1140, 1143, 1147, 1150, 1152, 1155, 1157, 1160, 1164, 1167, 1173, 1176, 1178, 1179, 1182, 1184, 1187, 1189, 1192, 1195, 1198, 1200, 1203, 1208, 1211, 1214, 1216, 1217, 1218, 1221, 1223, 1226, 1228, 1234, 1235, 1237, 1239, 1242, 1244, 1247, 1249, 1253, 1255, 1258, 1260, 1264, 1265, 1269, 1270, 1271, 1275, 1277, 1281, 1282, 1283, 1285, 1288, 1289, 1292, 1293, 1294, 1295, 1298, 1299, 1300, 1303, 1304, 1307, 1308, 1311, 1313, 1317, 1319, 1321, 1322, 1323, 1326, 1328, 1331, 1333, 1336, 1338, 1340, 1342, 1345, 1347, 1350, 1352, 1353, 1355, 1358, 1360, 1363, 1365, 1368, 1372, 1375, 1377, 1380, 1382, 1385, 1387, 1390, 1392, 1393, 1396, 1398, 1401, 1403, 1406, 1408, 1411, 1413, 1416, 1418, 1421, 1422, 1425, 1427, 1430, 1432, 1435, 1437, 1440, 1442, 1445, 1447, 1450, 1452, 1455, 1457, 1460, 1462, 1465, 1467, 1470, 1472, 1475, 1477, 1480, 1482, 1485, 1487, 1490, 1492, 1496, 1497, 1501, 1502, 1505, 1506, 1509, 1510, 1514, 1515, 1519, 1520, 1524, 1525, 1529, 1530, 1534, 1535, 1536, 1539, 1541, 1542, 1545, 1547, 1550, 1552, 1553, 1556, 1558, 1561, 1563, 1566, 1568, 1571, 1573, 1576, 1578, 1581, 1583, 1586, 1588, 1591, 1593, 1596, 1598, 1601, 1603, 1606, 1608, 1611, 1613, 1617, 1618, 1622, 1623, 1627, 1628, 1632, 1633, 1634, 1635, 1636, 1637, 1639, 1640, 1641, 1644, 1645, 1646, 1647, 1650, 1651, 1654, 1655, 1656, 1657, 1660, 1661, 1662, 1665, 1667, 1670, 1672, 1675, 1677, 1680, 1683, 1686, 1688, 1689, 1692, 1694, 1697, 1699, 1702, 1704, 1707, 1709, 1713, 1714, 1715, 1719, 1720, 1724, 1725, 1729, 1730, 1734, 1735, 1736, 1739, 1741, 1744, 1746, 1749, 1751, 1752, 1755, 1757, 1760, 1762, 1765, 1766, 1769, 1770, 1773, 1774, 1777, 1778, 1781, 1783, 1786, 1787, 1791, 1792, 1796, 1797, 1798, 1801, 1803, 1806, 1808, 1809, 1817, 1818, 1819, 1821, 1825, 1826], "2": [19, 23, 39, 42, 43, 45, 46, 47, 48, 49, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 94, 95, 96, 99, 100, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 143, 145, 146, 148, 150, 152, 154, 157, 158, 159, 160, 163, 164, 166, 167, 168, 169, 181, 196, 198, 201, 204, 207, 209, 212, 214, 217, 219, 222, 224, 227, 229, 232, 236, 237, 266, 267, 270, 277, 278, 280, 283, 295, 296, 298, 301, 316, 320, 321, 328, 331, 333, 336, 338, 341, 343, 346, 356, 358, 361, 364, 384, 387, 389, 392, 416, 422, 423, 425, 427, 430, 432, 434, 436, 438, 441, 445, 450, 451, 454, 461, 464, 466, 469, 471, 474, 476, 479, 481, 484, 486, 489, 496, 499, 501, 504, 511, 514, 516, 519, 521, 524, 526, 529, 531, 534, 536, 539, 541, 544, 546, 549, 551, 554, 561, 564, 566, 569, 571, 574, 576, 579, 581, 584, 586, 589, 596, 599, 601, 604, 611, 614, 616, 619, 621, 624, 631, 634, 636, 639, 641, 644, 651, 654, 656, 659, 661, 664, 666, 669, 671, 674, 676, 679, 681, 684, 686, 689, 691, 694, 696, 699, 701, 704, 711, 714, 716, 719, 721, 724, 726, 729, 731, 734, 736, 739, 741, 744, 746, 750, 751, 755, 756, 760, 761, 765, 766, 770, 1090, 1098, 1100, 1106, 1107, 1110, 1112, 1115, 1119, 1121, 1127, 1130, 1132, 1135, 1137, 1139, 1147, 1150, 1152, 1155, 1160, 1164, 1167, 1173, 1176, 1179, 1182, 1184, 1187, 1200, 1203, 1208, 1211, 1214, 1223, 1226, 1237, 1239, 1242, 1249, 1253, 1255, 1258, 1270, 1282, 1283, 1285, 1288, 1294, 1295, 1298, 1299, 1300, 1303, 1308, 1311, 1313, 1317, 1319, 1321, 1322, 1323, 1326, 1333, 1336, 1338, 1340, 1342, 1345, 1347, 1350, 1352, 1353, 1355, 1358, 1370, 1372, 1375, 1382, 1385, 1387, 1390, 1392, 1393, 1396, 1398, 1401, 1403, 1406, 1408, 1411, 1413, 1416, 1427, 1430, 1437, 1440, 1442, 1445, 1447, 1450, 1457, 1460, 1462, 1465, 1467, 1470, 1472, 1475, 1477, 1480, 1482, 1485, 1492, 1496, 1497, 1501, 1502, 1505, 1506, 1509, 1510, 1514, 1515, 1519, 1525, 1529, 1535, 1536, 1539, 1541, 1547, 1550, 1552, 1553, 1556, 1558, 1561, 1563, 1566, 1568, 1571, 1573, 1576, 1578, 1581, 1583, 1586, 1588, 1591, 1593, 1596, 1598, 1601, 1603, 1606, 1608, 1611, 1613, 1617, 1618, 1622, 1623, 1627, 1637, 1639, 1641, 1644, 1645, 1646, 1647, 1649, 1654, 1655, 1656, 1657, 1660, 1661, 1662, 1665, 1667, 1670, 1672, 1675, 1677, 1680, 1683, 1686, 1688, 1689, 1692, 1694, 1697, 1699, 1702, 1704, 1707, 1709, 1713, 1714, 1715, 1719, 1720, 1724, 1725, 1729, 1735, 1736, 1739, 1741, 1744, 1746, 1749, 1751, 1752, 1755, 1757, 1760, 1762, 1765, 1766, 1769, 1770, 1773, 1774, 1777, 1778, 1781, 1783, 1786, 1787, 1791, 1792, 1796, 1797, 1798, 1801, 1803, 1806, 1809, 1825, 1826], "print": [19, 23, 25, 26, 32, 42, 43, 45, 46, 47, 48, 49, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 146, 150, 160, 164, 166, 167, 168, 196, 197, 203, 204, 207, 209, 212, 214, 217, 219, 222, 224, 227, 229, 232, 237, 249, 251, 266, 267, 270, 277, 278, 280, 283, 295, 296, 298, 301, 313, 315, 316, 320, 321, 328, 331, 333, 336, 338, 341, 343, 346, 349, 356, 358, 360, 366, 367, 369, 370, 378, 384, 387, 389, 392, 401, 404, 415, 416, 417, 423, 425, 430, 431, 432, 433, 434, 435, 436, 439, 446, 447, 449, 450, 451, 454, 456, 459, 461, 464, 466, 469, 471, 474, 476, 479, 481, 484, 486, 489, 491, 494, 496, 499, 501, 504, 511, 514, 516, 519, 521, 524, 526, 529, 531, 534, 536, 539, 541, 544, 546, 549, 551, 554, 561, 564, 571, 574, 576, 579, 581, 584, 586, 589, 591, 594, 596, 599, 601, 604, 606, 609, 611, 614, 616, 619, 621, 624, 626, 629, 631, 634, 641, 644, 646, 649, 651, 654, 656, 659, 661, 664, 666, 669, 671, 674, 676, 679, 681, 684, 686, 689, 691, 694, 696, 699, 701, 704, 711, 714, 716, 719, 721, 724, 726, 729, 731, 734, 736, 739, 741, 744, 746, 750, 751, 755, 756, 760, 761, 765, 766, 770, 1090, 1091, 1094, 1097, 1098, 1100, 1106, 1107, 1110, 1112, 1115, 1119, 1121, 1127, 1130, 1132, 1135, 1137, 1139, 1147, 1150, 1152, 1155, 1160, 1161, 1162, 1164, 1167, 1169, 1173, 1176, 1179, 1182, 1184, 1187, 1214, 1217, 1223, 1226, 1230, 1231, 1233, 1236, 1237, 1239, 1242, 1249, 1253, 1255, 1258, 1260, 1264, 1265, 1269, 1270, 1274, 1277, 1281, 1282, 1283, 1285, 1288, 1294, 1295, 1298, 1299, 1300, 1303, 1308, 1311, 1312, 1313, 1317, 1318, 1319, 1320, 1321, 1323, 1326, 1333, 1336, 1342, 1345, 1347, 1350, 1355, 1358, 1372, 1375, 1382, 1385, 1387, 1390, 1392, 1393, 1396, 1398, 1401, 1403, 1406, 1413, 1416, 1427, 1430, 1437, 1440, 1442, 1445, 1447, 1450, 1462, 1465, 1467, 1470, 1472, 1475, 1482, 1485, 1492, 1496, 1497, 1501, 1502, 1505, 1510, 1514, 1535, 1536, 1539, 1541, 1542, 1545, 1547, 1550, 1552, 1553, 1556, 1563, 1566, 1568, 1571, 1573, 1576, 1578, 1581, 1583, 1586, 1588, 1591, 1593, 1596, 1598, 1601, 1603, 1606, 1613, 1617, 1618, 1622, 1623, 1627, 1637, 1639, 1641, 1644, 1645, 1646, 1647, 1649, 1654, 1655, 1656, 1657, 1660, 1661, 1662, 1665, 1667, 1670, 1683, 1686, 1688, 1689, 1692, 1694, 1697, 1699, 1702, 1704, 1707, 1709, 1713, 1714, 1715, 1719, 1720, 1724, 1725, 1729, 1735, 1736, 1739, 1741, 1744, 1746, 1749, 1751, 1752, 1755, 1757, 1760, 1762, 1765, 1766, 1769, 1770, 1773, 1774, 1777, 1778, 1781, 1783, 1786, 1787, 1791, 1792, 1796, 1797, 1798, 1801, 1803, 1806, 1809], "function": [19, 23, 24, 25, 26, 27, 34, 39, 42, 43, 45, 46, 47, 48, 49, 50, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 98, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 150, 151, 153, 157, 162, 163, 165, 166, 167, 168, 179, 180, 196, 197, 198, 201, 203, 204, 207, 209, 212, 214, 217, 219, 222, 224, 227, 229, 232, 234, 235, 236, 237, 238, 239, 240, 242, 244, 246, 247, 248, 249, 251, 252, 253, 256, 258, 259, 261, 264, 266, 267, 270, 272, 275, 277, 278, 280, 283, 285, 288, 290, 293, 295, 296, 298, 301, 303, 307, 308, 312, 313, 315, 316, 320, 321, 322, 323, 324, 325, 326, 327, 328, 331, 333, 336, 338, 341, 343, 346, 348, 349, 350, 351, 352, 354, 355, 356, 358, 360, 361, 364, 366, 367, 369, 370, 372, 375, 377, 378, 379, 382, 384, 387, 389, 392, 394, 397, 399, 400, 401, 404, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 425, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 445, 446, 447, 448, 449, 450, 451, 454, 456, 459, 461, 464, 466, 469, 471, 474, 476, 479, 481, 484, 486, 489, 491, 494, 496, 499, 501, 504, 506, 509, 511, 514, 516, 519, 521, 524, 526, 529, 531, 534, 536, 539, 541, 544, 546, 549, 551, 554, 556, 559, 561, 564, 566, 569, 571, 574, 576, 579, 581, 584, 586, 589, 591, 594, 596, 599, 601, 604, 606, 609, 611, 614, 616, 619, 621, 624, 626, 629, 631, 634, 636, 639, 641, 644, 646, 649, 651, 654, 656, 659, 661, 664, 666, 669, 671, 674, 676, 679, 681, 684, 686, 689, 691, 694, 696, 699, 701, 704, 706, 709, 711, 714, 716, 719, 721, 724, 726, 729, 731, 734, 736, 739, 741, 744, 746, 750, 751, 755, 756, 760, 761, 765, 766, 770, 1090, 1091, 1094, 1096, 1097, 1098, 1100, 1101, 1104, 1106, 1107, 1110, 1112, 1115, 1117, 1118, 1119, 1121, 1122, 1125, 1127, 1130, 1132, 1135, 1137, 1139, 1140, 1143, 1145, 1146, 1147, 1150, 1152, 1155, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1167, 1169, 1170, 1171, 1172, 1173, 1176, 1178, 1179, 1182, 1184, 1187, 1189, 1192, 1194, 1195, 1198, 1200, 1203, 1205, 1207, 1208, 1211, 1213, 1214, 1215, 1216, 1217, 1218, 1221, 1223, 1226, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1242, 1244, 1247, 1249, 1253, 1254, 1255, 1258, 1259, 1260, 1264, 1265, 1269, 1270, 1271, 1272, 1273, 1274, 1275, 1276, 1277, 1281, 1282, 1283, 1284, 1285, 1288, 1289, 1292, 1293, 1294, 1295, 1298, 1299, 1300, 1303, 1304, 1307, 1308, 1311, 1312, 1313, 1317, 1318, 1319, 1320, 1321, 1322, 1323, 1326, 1328, 1331, 1333, 1336, 1338, 1340, 1342, 1345, 1347, 1350, 1352, 1353, 1354, 1355, 1358, 1360, 1363, 1365, 1368, 1370, 1371, 1372, 1375, 1377, 1380, 1382, 1385, 1387, 1390, 1392, 1393, 1396, 1398, 1401, 1403, 1406, 1408, 1411, 1413, 1416, 1418, 1421, 1422, 1425, 1427, 1430, 1432, 1435, 1437, 1440, 1442, 1445, 1447, 1450, 1452, 1455, 1457, 1460, 1462, 1465, 1467, 1470, 1472, 1475, 1477, 1480, 1482, 1485, 1487, 1490, 1492, 1496, 1497, 1501, 1502, 1505, 1506, 1509, 1510, 1514, 1515, 1519, 1520, 1524, 1525, 1529, 1530, 1534, 1535, 1536, 1539, 1541, 1542, 1545, 1547, 1550, 1552, 1553, 1556, 1558, 1561, 1563, 1566, 1568, 1571, 1573, 1576, 1578, 1581, 1583, 1586, 1588, 1591, 1593, 1596, 1598, 1601, 1603, 1606, 1608, 1611, 1613, 1617, 1618, 1622, 1623, 1627, 1628, 1632, 1633, 1634, 1635, 1636, 1637, 1638, 1639, 1640, 1641, 1642, 1643, 1644, 1645, 1646, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654, 1655, 1656, 1657, 1660, 1661, 1662, 1665, 1667, 1670, 1672, 1675, 1677, 1680, 1682, 1683, 1686, 1688, 1689, 1692, 1694, 1697, 1699, 1702, 1704, 1707, 1709, 1713, 1714, 1715, 1719, 1720, 1724, 1725, 1729, 1730, 1734, 1735, 1736, 1739, 1741, 1744, 1746, 1749, 1751, 1752, 1755, 1757, 1760, 1762, 1765, 1766, 1769, 1770, 1773, 1774, 1777, 1778, 1781, 1783, 1786, 1787, 1791, 1792, 1796, 1797, 1798, 1801, 1803, 1806, 1808, 1809, 1816, 1817, 1818, 1819, 1820, 1825, 1826], "py": [19, 23, 25, 41, 42, 43, 143, 145, 147, 148, 149, 151, 152, 153, 154, 155, 158, 159, 160, 161, 164, 166, 168, 169], "noqa": [19, 23, 25, 61, 62, 72, 73, 109, 110, 237, 239, 240, 242, 244, 252, 253, 256, 258, 259, 261, 264, 266, 267, 270, 272, 275, 280, 283, 295, 296, 298, 301, 303, 307, 308, 312, 313, 315, 316, 320, 321, 343, 346, 361, 364, 372, 375, 401, 404, 450, 451, 454, 456, 459, 461, 464, 466, 469, 471, 474, 476, 479, 481, 484, 486, 489, 491, 494, 496, 499, 501, 504, 506, 509, 516, 519, 521, 524, 526, 529, 531, 534, 536, 539, 546, 549, 551, 554, 566, 569, 571, 574, 576, 579, 581, 584, 586, 589, 596, 599, 601, 604, 616, 619, 626, 629, 631, 634, 636, 639, 641, 644, 646, 649, 651, 654, 656, 659, 661, 664, 676, 679, 681, 684, 686, 689, 691, 694, 696, 699, 711, 714, 716, 719, 721, 724, 726, 729, 731, 734, 736, 739, 741, 744, 746, 750, 751, 755, 756, 760, 761, 765, 1090, 1282, 1392, 1393, 1396, 1398, 1401, 1403, 1406, 1408, 1411, 1413, 1416, 1418, 1421, 1422, 1425, 1427, 1430, 1437, 1440, 1442, 1445, 1447, 1450, 1452, 1455, 1457, 1460, 1462, 1465, 1467, 1470, 1472, 1475, 1477, 1480, 1482, 1485, 1487, 1490, 1492, 1496, 1497, 1501, 1502, 1505, 1520, 1524, 1525, 1529, 1552, 1558, 1561, 1568, 1571, 1573, 1576, 1578, 1581, 1588, 1591, 1593, 1596, 1603, 1606, 1608, 1611, 1688, 1689, 1692, 1694, 1697, 1704, 1707, 1709, 1713, 1714, 1715, 1719, 1720, 1724, 1725, 1729, 1730, 1734, 1735, 1736, 1739, 1746, 1749, 1751, 1766, 1769, 1774, 1777, 1778, 1781, 1783, 1786, 1787, 1791, 1792, 1796, 1797, 1798, 1801, 1803, 1806], "The": [19, 23, 25, 33, 34, 36, 37, 38, 39, 41, 42, 45, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 61, 62, 63, 64, 65, 66, 67, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 159, 160, 161, 162, 163, 164, 167, 168, 169, 180, 196, 197, 198, 201, 203, 204, 207, 209, 212, 224, 227, 229, 232, 234, 235, 237, 239, 240, 261, 264, 277, 278, 290, 293, 303, 307, 308, 312, 321, 326, 327, 328, 331, 349, 350, 351, 352, 354, 355, 360, 366, 367, 369, 370, 378, 384, 387, 394, 397, 399, 408, 409, 410, 415, 416, 417, 418, 419, 420, 421, 422, 427, 428, 429, 430, 434, 435, 436, 437, 438, 439, 440, 446, 449, 450, 451, 454, 456, 459, 461, 464, 466, 469, 471, 474, 476, 479, 481, 484, 486, 489, 491, 494, 496, 499, 501, 504, 506, 509, 511, 514, 516, 519, 521, 524, 526, 529, 531, 534, 536, 539, 546, 549, 551, 554, 556, 559, 561, 564, 566, 569, 571, 574, 576, 579, 581, 584, 586, 589, 591, 594, 596, 599, 601, 604, 606, 609, 611, 614, 616, 619, 621, 624, 626, 629, 631, 634, 636, 639, 641, 644, 646, 649, 651, 654, 656, 659, 661, 664, 676, 679, 686, 689, 696, 699, 711, 714, 721, 724, 726, 729, 731, 734, 736, 739, 751, 755, 756, 760, 761, 765, 766, 770, 1090, 1096, 1098, 1100, 1106, 1107, 1110, 1118, 1119, 1121, 1140, 1143, 1145, 1146, 1147, 1150, 1152, 1155, 1169, 1172, 1179, 1182, 1184, 1187, 1189, 1192, 1195, 1198, 1200, 1203, 1205, 1207, 1208, 1211, 1215, 1218, 1221, 1223, 1226, 1230, 1231, 1233, 1236, 1239, 1242, 1244, 1247, 1254, 1259, 1277, 1281, 1283, 1285, 1288, 1289, 1292, 1295, 1298, 1300, 1303, 1304, 1307, 1308, 1311, 1313, 1317, 1321, 1323, 1326, 1328, 1331, 1333, 1336, 1338, 1340, 1342, 1345, 1347, 1350, 1352, 1353, 1355, 1358, 1360, 1363, 1372, 1375, 1382, 1385, 1387, 1390, 1392, 1393, 1396, 1398, 1401, 1403, 1406, 1413, 1416, 1418, 1421, 1422, 1425, 1427, 1430, 1432, 1435, 1437, 1440, 1447, 1450, 1452, 1455, 1457, 1460, 1462, 1465, 1467, 1470, 1472, 1475, 1477, 1480, 1482, 1485, 1487, 1490, 1492, 1496, 1497, 1501, 1502, 1505, 1510, 1514, 1515, 1519, 1520, 1524, 1525, 1529, 1535, 1536, 1539, 1541, 1542, 1545, 1547, 1550, 1552, 1558, 1561, 1563, 1566, 1573, 1576, 1578, 1581, 1583, 1586, 1598, 1601, 1618, 1622, 1633, 1634, 1635, 1636, 1637, 1638, 1639, 1641, 1643, 1644, 1645, 1646, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654, 1655, 1656, 1657, 1660, 1661, 1662, 1665, 1672, 1675, 1688, 1689, 1692, 1694, 1697, 1704, 1707, 1714, 1715, 1719, 1720, 1724, 1725, 1729, 1730, 1734, 1735, 1736, 1739, 1741, 1744, 1746, 1749, 1751, 1762, 1765, 1766, 1769, 1770, 1773, 1774, 1777, 1778, 1781, 1783, 1786, 1787, 1791, 1792, 1796, 1797, 1798, 1801, 1803, 1806, 1808, 1809, 1816, 1817, 1818, 1819, 1820, 1821, 1822, 1823, 1824, 1825, 1826], "set_backend": [19, 23, 25, 28, 29, 30, 31, 32, 143, 145, 148, 155, 156, 164, 166, 169, 321, 369, 370, 416, 420, 421, 437, 438, 1809], "ha": [19, 23, 25, 34, 35, 36, 41, 43, 63, 72, 73, 76, 77, 84, 85, 88, 89, 97, 98, 105, 106, 112, 113, 120, 121, 124, 125, 132, 133, 136, 137, 143, 145, 146, 148, 149, 150, 151, 153, 155, 156, 157, 158, 159, 160, 161, 162, 164, 165, 166, 168, 169, 180, 181, 237, 280, 283, 416, 422, 450, 451, 454, 606, 609, 676, 679, 696, 699, 716, 719, 1283, 1312, 1320, 1392, 1442, 1445, 1487, 1490, 1492, 1496, 1510, 1514, 1552, 1568, 1571, 1603, 1606, 1714, 1715, 1719, 1720, 1724, 1725, 1729, 1730, 1734, 1751, 1752, 1755, 1757, 1760, 1770, 1773, 1778, 1781, 1783, 1786, 1787, 1791, 1792, 1796, 1815, 1818, 1819, 1821, 1822, 1825], "over": [19, 23, 34, 36, 42, 43, 63, 72, 73, 88, 89, 90, 91, 92, 93, 105, 106, 111, 120, 121, 136, 137, 138, 139, 140, 141, 145, 150, 151, 157, 164, 166, 181, 1090, 1282, 1392, 1447, 1450, 1502, 1505, 1520, 1524, 1525, 1529, 1656, 1657, 1660, 1661, 1677, 1680, 1751, 1766, 1769, 1770, 1773, 1774, 1777, 1778, 1781, 1783, 1786, 1787, 1791, 1792, 1796, 1797, 1798, 1801, 1803, 1806, 1817, 1819], "ani": [19, 23, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 48, 49, 50, 51, 52, 55, 56, 61, 62, 63, 64, 65, 72, 73, 90, 91, 92, 93, 94, 99, 100, 107, 108, 109, 110, 111, 112, 113, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 165, 166, 167, 168, 169, 180, 181, 196, 234, 235, 236, 237, 239, 240, 242, 244, 252, 253, 256, 258, 259, 261, 264, 266, 267, 270, 272, 275, 277, 278, 280, 283, 285, 288, 295, 296, 298, 301, 303, 307, 308, 312, 313, 315, 316, 320, 321, 343, 346, 348, 379, 382, 389, 392, 400, 416, 441, 445, 450, 451, 454, 456, 459, 461, 464, 466, 469, 471, 474, 476, 479, 481, 484, 486, 489, 491, 494, 496, 499, 501, 504, 506, 509, 516, 519, 521, 524, 526, 529, 531, 534, 536, 539, 546, 549, 551, 554, 566, 569, 571, 574, 576, 579, 581, 584, 586, 589, 591, 594, 596, 599, 601, 604, 616, 619, 626, 629, 631, 634, 636, 639, 641, 644, 646, 649, 651, 654, 656, 659, 661, 664, 676, 679, 681, 684, 686, 689, 691, 694, 696, 699, 711, 714, 716, 719, 721, 724, 726, 729, 731, 734, 736, 739, 741, 744, 746, 750, 751, 755, 756, 760, 761, 765, 1089, 1090, 1091, 1094, 1119, 1121, 1122, 1125, 1127, 1130, 1132, 1135, 1137, 1139, 1147, 1150, 1164, 1167, 1173, 1176, 1179, 1182, 1195, 1198, 1205, 1207, 1244, 1247, 1265, 1269, 1270, 1282, 1283, 1313, 1317, 1321, 1333, 1336, 1342, 1345, 1355, 1358, 1372, 1375, 1382, 1385, 1387, 1390, 1392, 1393, 1396, 1398, 1401, 1403, 1406, 1408, 1411, 1413, 1416, 1418, 1421, 1422, 1425, 1427, 1430, 1437, 1440, 1442, 1445, 1447, 1450, 1452, 1455, 1457, 1460, 1462, 1465, 1467, 1470, 1472, 1475, 1477, 1480, 1482, 1485, 1487, 1490, 1492, 1496, 1497, 1501, 1502, 1505, 1520, 1524, 1525, 1529, 1530, 1534, 1535, 1552, 1553, 1556, 1558, 1561, 1563, 1566, 1568, 1571, 1573, 1576, 1578, 1581, 1583, 1586, 1588, 1591, 1593, 1596, 1598, 1601, 1603, 1606, 1608, 1611, 1613, 1617, 1618, 1622, 1623, 1627, 1628, 1632, 1633, 1634, 1635, 1636, 1637, 1641, 1644, 1645, 1647, 1648, 1654, 1655, 1656, 1657, 1660, 1661, 1677, 1680, 1688, 1689, 1692, 1694, 1697, 1704, 1707, 1709, 1713, 1714, 1715, 1719, 1720, 1724, 1725, 1729, 1730, 1734, 1735, 1736, 1739, 1746, 1749, 1751, 1766, 1769, 1770, 1773, 1774, 1777, 1778, 1781, 1783, 1786, 1787, 1791, 1792, 1796, 1797, 1798, 1801, 1808, 1809, 1816, 1817, 1818, 1819, 1820, 1821, 1822, 1823, 1824, 1825, 1826, 1828, 1831, 1833, 1843, 1855, 1859, 1861, 1867], "pass": [19, 23, 41, 43, 63, 92, 93, 94, 97, 98, 99, 100, 111, 140, 141, 143, 144, 145, 146, 148, 150, 151, 153, 154, 155, 156, 157, 158, 159, 160, 161, 181, 321, 349, 400, 416, 417, 420, 440, 450, 486, 489, 1090, 1189, 1192, 1633, 1634, 1635, 1817], "jax": [19, 23, 25, 26, 28, 35, 36, 40, 41, 42, 43, 63, 143, 145, 147, 148, 149, 154, 157, 158, 159, 160, 161, 162, 164, 166, 169, 181, 1090, 1282, 1714, 1715, 1719, 1720, 1724, 1725, 1729, 1730, 1734, 1809, 1820, 1822, 1825, 1826], "fn_name_from_version_specific_fn_nam": 19, "name": [19, 24, 27, 39, 41, 42, 43, 63, 84, 85, 132, 133, 145, 146, 150, 151, 153, 154, 158, 159, 160, 161, 162, 164, 167, 169, 196, 197, 203, 234, 235, 1090, 1096, 1097, 1392, 1418, 1421, 1422, 1425, 1477, 1480, 1482, 1485, 1492, 1496, 1515, 1519, 1714, 1715, 1719, 1720, 1724, 1725, 1729, 1819], "specif": [19, 24, 27, 34, 41, 42, 43, 64, 65, 107, 108, 112, 113, 143, 144, 145, 146, 147, 148, 149, 152, 154, 155, 157, 158, 159, 160, 161, 162, 164, 165, 166, 168, 169, 180, 181, 321, 401, 404, 416, 438, 441, 445, 450, 651, 654, 656, 659, 1090, 1122, 1125, 1127, 1130, 1132, 1135, 1215, 1392, 1422, 1425, 1427, 1430, 1502, 1505, 1552, 1608, 1611, 1633, 1634, 1635, 1636, 1661, 1662, 1665, 1735, 1741, 1744, 1751, 1766, 1769, 1770, 1773, 1774, 1777, 1783, 1786, 1808, 1815, 1817, 1818, 1820, 1821, 1822, 1826], "provid": [19, 24, 27, 34, 42, 43, 55, 56, 64, 65, 66, 67, 76, 77, 82, 83, 88, 89, 90, 91, 97, 98, 103, 104, 112, 113, 124, 125, 130, 131, 136, 137, 138, 139, 144, 145, 146, 147, 148, 149, 150, 151, 152, 154, 155, 157, 158, 159, 160, 162, 166, 168, 180, 181, 196, 197, 203, 234, 235, 237, 280, 283, 290, 293, 321, 350, 351, 352, 354, 355, 378, 401, 404, 415, 416, 422, 1090, 1106, 1119, 1121, 1223, 1226, 1392, 1452, 1455, 1520, 1524, 1552, 1568, 1571, 1573, 1576, 1608, 1611, 1688, 1689, 1692, 1751, 1783, 1786, 1792, 1796, 1797, 1798, 1801, 1803, 1806, 1817, 1818, 1819, 1820, 1821, 1822, 1823, 1826], "origin": [19, 24, 27, 36, 41, 43, 45, 48, 49, 63, 72, 73, 76, 77, 88, 89, 94, 97, 98, 99, 100, 111, 120, 121, 124, 125, 136, 137, 145, 148, 156, 157, 158, 159, 164, 450, 486, 489, 1392, 1447, 1450, 1552, 1588, 1591, 1593, 1596, 1751, 1757, 1760, 1819, 1820], "point": [19, 24, 27, 36, 41, 42, 43, 57, 58, 61, 62, 63, 72, 73, 80, 81, 88, 89, 105, 106, 109, 110, 111, 120, 121, 128, 129, 136, 137, 143, 144, 147, 150, 151, 154, 157, 158, 160, 161, 162, 164, 166, 167, 180, 236, 237, 239, 240, 242, 244, 252, 258, 259, 266, 295, 296, 313, 315, 321, 328, 331, 361, 364, 377, 384, 387, 401, 404, 450, 456, 459, 461, 464, 466, 469, 471, 474, 476, 479, 481, 484, 486, 489, 491, 494, 521, 524, 526, 529, 531, 534, 536, 539, 546, 549, 561, 564, 566, 569, 571, 574, 621, 624, 626, 629, 631, 634, 636, 639, 641, 644, 676, 679, 696, 699, 711, 714, 716, 719, 726, 729, 731, 734, 736, 739, 751, 755, 756, 760, 761, 765, 766, 770, 1321, 1365, 1368, 1392, 1393, 1396, 1403, 1406, 1418, 1421, 1422, 1425, 1427, 1430, 1437, 1440, 1447, 1450, 1452, 1455, 1457, 1460, 1472, 1475, 1477, 1480, 1482, 1485, 1487, 1490, 1492, 1496, 1525, 1529, 1661, 1672, 1675, 1677, 1680, 1714, 1715, 1719, 1720, 1724, 1725, 1729, 1730, 1734, 1735, 1741, 1744, 1751, 1752, 1755, 1757, 1760, 1766, 1769, 1770, 1773, 1774, 1777, 1778, 1781, 1783, 1786, 1787, 1791, 1792, 1796, 1825], "get_backend": [19, 145, 155], "specifi": [19, 25, 43, 55, 56, 57, 58, 63, 64, 65, 72, 73, 74, 75, 76, 77, 80, 81, 82, 83, 88, 89, 90, 91, 95, 96, 97, 98, 105, 106, 111, 112, 113, 120, 121, 122, 123, 124, 125, 128, 129, 130, 131, 136, 137, 138, 139, 142, 148, 149, 154, 155, 157, 158, 159, 160, 162, 164, 167, 168, 237, 239, 240, 252, 266, 272, 275, 277, 278, 295, 296, 303, 307, 308, 312, 313, 315, 321, 328, 331, 338, 341, 416, 417, 430, 434, 436, 439, 440, 441, 445, 450, 711, 714, 1090, 1096, 1147, 1150, 1152, 1155, 1160, 1173, 1176, 1282, 1321, 1382, 1385, 1392, 1408, 1411, 1413, 1416, 1427, 1430, 1447, 1450, 1502, 1505, 1510, 1514, 1515, 1519, 1520, 1524, 1525, 1529, 1535, 1536, 1539, 1541, 1542, 1545, 1547, 1550, 1552, 1553, 1556, 1558, 1561, 1563, 1566, 1568, 1571, 1573, 1576, 1593, 1596, 1603, 1606, 1608, 1611, 1623, 1627, 1628, 1632, 1637, 1643, 1645, 1646, 1652, 1653, 1654, 1655, 1661, 1667, 1670, 1672, 1675, 1677, 1680, 1688, 1689, 1692, 1694, 1697, 1704, 1707, 1714, 1715, 1719, 1720, 1724, 1725, 1729, 1730, 1734, 1735, 1736, 1739, 1751, 1752, 1755, 1757, 1760, 1762, 1765, 1778, 1781, 1787, 1791, 1797, 1798, 1801, 1803, 1806, 1825], "isn": [19, 25, 43, 112, 113, 156, 167, 181, 1090, 1249, 1253, 1821], "t": [19, 25, 35, 36, 38, 39, 41, 42, 43, 45, 48, 49, 63, 92, 93, 111, 112, 113, 140, 141, 142, 145, 146, 147, 148, 150, 156, 157, 159, 160, 162, 164, 166, 167, 168, 169, 181, 1090, 1249, 1253, 1283, 1293, 1321, 1372, 1375, 1377, 1380, 1637, 1646, 1817, 1819, 1821], "associ": [19, 25, 43, 72, 73, 120, 121, 148, 155, 156, 158, 159, 160, 181, 450, 466, 469, 676, 679, 1392, 1457, 1460, 1472, 1475, 1530, 1534], "option": [19, 25, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 61, 62, 63, 64, 65, 66, 67, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 88, 89, 90, 91, 95, 96, 97, 98, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 146, 148, 149, 150, 151, 152, 153, 154, 155, 157, 158, 159, 160, 161, 162, 164, 169, 181, 196, 197, 198, 201, 203, 204, 207, 209, 212, 214, 217, 219, 222, 224, 227, 229, 232, 234, 235, 237, 239, 240, 242, 244, 249, 251, 252, 253, 256, 258, 259, 261, 264, 266, 267, 270, 272, 275, 277, 278, 285, 288, 290, 293, 295, 296, 298, 301, 303, 307, 308, 312, 313, 315, 316, 320, 321, 328, 331, 338, 341, 349, 350, 351, 352, 354, 355, 378, 415, 416, 422, 436, 438, 439, 440, 441, 445, 450, 451, 454, 456, 459, 461, 464, 466, 469, 471, 474, 476, 479, 481, 484, 486, 489, 491, 494, 496, 499, 501, 504, 506, 509, 511, 514, 516, 519, 521, 524, 526, 529, 531, 534, 536, 539, 541, 544, 546, 549, 551, 554, 556, 559, 561, 564, 566, 569, 571, 574, 576, 579, 581, 584, 586, 589, 591, 594, 596, 599, 601, 604, 606, 609, 611, 614, 621, 624, 626, 629, 631, 634, 636, 639, 641, 644, 646, 649, 651, 654, 656, 659, 661, 664, 666, 669, 671, 674, 676, 679, 681, 684, 686, 689, 691, 694, 696, 699, 701, 704, 706, 709, 711, 714, 716, 719, 721, 724, 726, 729, 731, 734, 736, 739, 741, 744, 746, 750, 751, 755, 756, 760, 761, 765, 766, 770, 1090, 1096, 1107, 1110, 1112, 1115, 1118, 1122, 1125, 1127, 1130, 1132, 1135, 1147, 1150, 1152, 1155, 1200, 1203, 1215, 1218, 1221, 1223, 1226, 1239, 1242, 1244, 1247, 1270, 1277, 1281, 1282, 1283, 1285, 1288, 1289, 1292, 1295, 1298, 1300, 1303, 1304, 1307, 1308, 1311, 1313, 1317, 1320, 1321, 1323, 1326, 1328, 1331, 1333, 1336, 1338, 1340, 1342, 1345, 1347, 1350, 1352, 1353, 1355, 1358, 1360, 1363, 1365, 1368, 1372, 1375, 1377, 1380, 1382, 1385, 1387, 1390, 1392, 1393, 1396, 1398, 1401, 1403, 1406, 1408, 1411, 1413, 1416, 1427, 1430, 1432, 1435, 1437, 1440, 1442, 1445, 1447, 1450, 1457, 1460, 1462, 1465, 1467, 1470, 1472, 1475, 1487, 1490, 1497, 1501, 1502, 1505, 1510, 1514, 1515, 1519, 1520, 1524, 1525, 1529, 1530, 1534, 1535, 1536, 1539, 1541, 1542, 1545, 1547, 1550, 1552, 1553, 1556, 1558, 1561, 1563, 1566, 1568, 1571, 1573, 1576, 1578, 1581, 1583, 1586, 1588, 1591, 1593, 1596, 1598, 1601, 1603, 1606, 1608, 1611, 1613, 1617, 1618, 1622, 1628, 1632, 1633, 1634, 1635, 1636, 1637, 1638, 1639, 1644, 1648, 1649, 1650, 1656, 1657, 1660, 1661, 1662, 1665, 1667, 1670, 1672, 1675, 1677, 1680, 1683, 1686, 1688, 1689, 1692, 1694, 1697, 1699, 1702, 1704, 1707, 1709, 1713, 1714, 1730, 1734, 1735, 1736, 1739, 1741, 1744, 1746, 1749, 1751, 1752, 1755, 1757, 1760, 1762, 1765, 1766, 1769, 1770, 1773, 1774, 1777, 1778, 1781, 1783, 1786, 1787, 1791, 1792, 1796, 1797, 1798, 1801, 1803, 1806, 1819, 1825], "str": [19, 25, 50, 51, 52, 63, 64, 65, 70, 71, 76, 77, 88, 89, 95, 96, 97, 98, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 118, 119, 120, 121, 122, 123, 124, 125, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 148, 149, 152, 153, 158, 161, 164, 169, 196, 197, 203, 234, 235, 237, 280, 283, 321, 326, 349, 350, 351, 352, 360, 361, 364, 372, 375, 377, 378, 379, 382, 384, 387, 389, 392, 394, 397, 406, 407, 408, 409, 415, 416, 417, 418, 419, 440, 1090, 1096, 1118, 1122, 1125, 1127, 1130, 1132, 1135, 1159, 1215, 1218, 1221, 1223, 1226, 1229, 1236, 1321, 1323, 1326, 1328, 1331, 1333, 1336, 1338, 1340, 1342, 1345, 1347, 1350, 1352, 1353, 1355, 1358, 1365, 1368, 1392, 1427, 1430, 1477, 1480, 1552, 1588, 1591, 1633, 1634, 1635, 1636, 1637, 1644, 1645, 1654, 1751, 1762, 1765], "we": [19, 25, 26, 27, 32, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 63, 92, 93, 111, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 161, 162, 164, 165, 166, 167, 168, 169, 180, 181, 1090, 1249, 1253, 1283, 1293, 1294, 1299, 1319, 1808, 1809, 1815, 1819, 1820, 1824, 1825], "want": [19, 25, 35, 37, 41, 42, 43, 92, 93, 140, 141, 147, 156, 157, 159, 160, 162, 167, 168, 169, 181], "retriev": [19, 25, 43, 158, 1090, 1096], "e": [19, 25, 35, 36, 37, 38, 39, 41, 42, 43, 45, 48, 49, 63, 66, 67, 72, 73, 80, 81, 86, 87, 88, 89, 111, 120, 121, 128, 129, 134, 135, 136, 137, 142, 143, 146, 152, 158, 160, 164, 167, 181, 236, 237, 277, 278, 280, 283, 321, 327, 401, 404, 416, 419, 450, 451, 454, 486, 489, 506, 509, 516, 519, 526, 529, 561, 564, 571, 574, 576, 579, 591, 594, 621, 624, 631, 634, 666, 669, 671, 674, 696, 699, 711, 714, 1392, 1398, 1401, 1442, 1445, 1447, 1450, 1457, 1460, 1472, 1475, 1487, 1490, 1492, 1496, 1525, 1529, 1552, 1568, 1571, 1608, 1611, 1637, 1641, 1645, 1646, 1647, 1654, 1655, 1661, 1667, 1670, 1672, 1675, 1677, 1680, 1714, 1715, 1719, 1720, 1724, 1725, 1729, 1730, 1734, 1735, 1736, 1739, 1746, 1749, 1751, 1752, 1755, 1757, 1760, 1766, 1769, 1770, 1773, 1774, 1777, 1778, 1781, 1783, 1786, 1787, 1791, 1792, 1796, 1808, 1815], "default": [19, 25, 41, 42, 43, 46, 47, 50, 51, 52, 53, 54, 55, 56, 57, 58, 61, 62, 63, 64, 65, 66, 67, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 145, 148, 149, 150, 151, 152, 154, 155, 156, 158, 160, 162, 164, 168, 196, 198, 201, 204, 207, 209, 212, 214, 217, 219, 222, 224, 227, 229, 232, 234, 235, 237, 239, 240, 242, 244, 249, 251, 252, 253, 256, 258, 259, 261, 264, 266, 267, 270, 272, 275, 277, 278, 280, 283, 285, 288, 290, 293, 295, 296, 298, 301, 303, 307, 308, 312, 313, 315, 316, 320, 321, 328, 331, 338, 341, 350, 351, 352, 354, 355, 356, 358, 366, 367, 369, 370, 377, 399, 406, 408, 409, 411, 412, 413, 414, 416, 422, 423, 425, 428, 429, 432, 435, 436, 437, 438, 439, 440, 441, 445, 448, 449, 450, 451, 454, 456, 459, 461, 464, 466, 469, 471, 474, 476, 479, 481, 484, 486, 489, 491, 494, 496, 499, 501, 504, 506, 509, 511, 514, 516, 519, 521, 524, 526, 529, 531, 534, 536, 539, 541, 544, 546, 549, 551, 554, 556, 559, 561, 564, 566, 569, 571, 574, 576, 579, 581, 584, 586, 589, 591, 594, 596, 599, 601, 604, 606, 609, 611, 614, 621, 624, 626, 629, 631, 634, 636, 639, 641, 644, 646, 649, 651, 654, 656, 659, 661, 664, 666, 669, 671, 674, 681, 684, 686, 689, 691, 694, 696, 699, 701, 704, 706, 709, 711, 714, 716, 719, 721, 724, 726, 729, 731, 734, 736, 739, 741, 744, 746, 750, 751, 755, 756, 760, 761, 765, 766, 770, 1090, 1091, 1094, 1096, 1106, 1107, 1110, 1112, 1115, 1122, 1125, 1127, 1130, 1132, 1135, 1140, 1143, 1145, 1146, 1147, 1150, 1152, 1155, 1163, 1164, 1167, 1169, 1170, 1171, 1173, 1176, 1178, 1189, 1192, 1194, 1195, 1198, 1200, 1203, 1208, 1211, 1214, 1215, 1218, 1221, 1223, 1226, 1233, 1237, 1239, 1242, 1244, 1247, 1249, 1253, 1260, 1264, 1277, 1281, 1282, 1283, 1285, 1288, 1289, 1292, 1293, 1295, 1298, 1300, 1303, 1304, 1307, 1308, 1311, 1312, 1313, 1317, 1318, 1320, 1321, 1323, 1326, 1328, 1331, 1333, 1336, 1338, 1340, 1342, 1345, 1347, 1350, 1352, 1353, 1355, 1358, 1360, 1363, 1365, 1368, 1372, 1375, 1377, 1380, 1382, 1385, 1387, 1390, 1392, 1393, 1396, 1398, 1401, 1403, 1406, 1408, 1411, 1413, 1416, 1427, 1430, 1432, 1435, 1437, 1440, 1442, 1445, 1447, 1450, 1457, 1460, 1462, 1465, 1467, 1470, 1472, 1475, 1477, 1480, 1487, 1490, 1492, 1496, 1497, 1501, 1502, 1505, 1510, 1514, 1515, 1519, 1520, 1524, 1525, 1529, 1530, 1534, 1535, 1536, 1539, 1541, 1542, 1545, 1547, 1550, 1552, 1553, 1556, 1558, 1561, 1563, 1566, 1568, 1571, 1573, 1576, 1578, 1581, 1583, 1586, 1588, 1591, 1593, 1596, 1598, 1601, 1603, 1606, 1608, 1611, 1613, 1617, 1618, 1622, 1623, 1627, 1628, 1632, 1633, 1634, 1635, 1636, 1637, 1638, 1639, 1644, 1648, 1649, 1650, 1651, 1656, 1657, 1660, 1661, 1662, 1665, 1667, 1670, 1672, 1675, 1677, 1680, 1682, 1683, 1686, 1688, 1689, 1692, 1694, 1697, 1699, 1702, 1704, 1707, 1709, 1713, 1714, 1715, 1719, 1720, 1724, 1725, 1729, 1730, 1734, 1735, 1736, 1739, 1741, 1744, 1746, 1749, 1751, 1752, 1755, 1757, 1760, 1762, 1765, 1766, 1769, 1770, 1773, 1774, 1777, 1778, 1781, 1783, 1786, 1787, 1791, 1792, 1796, 1797, 1798, 1801, 1803, 1806, 1808, 1819], "torch": [19, 25, 31, 32, 42, 43, 143, 144, 145, 147, 148, 149, 152, 154, 155, 157, 158, 159, 160, 161, 162, 164, 166, 167, 169, 181, 234, 235, 321, 369, 370, 416, 420, 421, 437, 438, 450, 716, 719, 1090, 1249, 1253, 1392, 1492, 1496, 1808, 1809, 1825], "tensorflow": [19, 25, 30, 32, 35, 36, 40, 41, 42, 43, 64, 65, 112, 113, 143, 147, 148, 149, 154, 157, 158, 159, 160, 161, 162, 164, 169, 181, 416, 420, 1808, 1809, 1817, 1820, 1822, 1823, 1825, 1826], "either": [19, 25, 32, 39, 41, 42, 43, 61, 62, 63, 64, 65, 97, 98, 109, 110, 111, 112, 113, 145, 146, 148, 149, 150, 151, 155, 157, 158, 159, 160, 162, 164, 167, 181, 237, 261, 264, 450, 466, 469, 486, 489, 596, 599, 621, 624, 626, 629, 636, 639, 641, 644, 676, 679, 711, 714, 721, 724, 726, 729, 751, 755, 1090, 1119, 1121, 1195, 1198, 1214, 1215, 1270, 1392, 1442, 1445, 1482, 1485, 1633, 1634, 1635, 1636, 1751, 1752, 1755, 1757, 1760, 1778, 1781, 1787, 1791, 1819], "doesn": [19, 25, 39, 42, 145, 146, 147, 148, 150, 160, 162, 164, 181, 1817], "matter": [19, 25, 34, 150], "been": [19, 25, 41, 43, 64, 65, 80, 81, 112, 113, 128, 129, 143, 145, 146, 147, 148, 149, 151, 153, 154, 155, 160, 164, 166, 180, 181, 416, 422, 450, 716, 719, 1090, 1122, 1125, 1127, 1130, 1132, 1135, 1661, 1662, 1665, 1808, 1819, 1826], "ivy_np": [19, 25, 160], "us": [19, 25, 32, 36, 37, 38, 40, 41, 43, 55, 56, 57, 58, 61, 62, 63, 64, 65, 66, 67, 76, 77, 78, 79, 80, 81, 82, 83, 88, 89, 92, 93, 94, 95, 96, 97, 98, 99, 100, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 124, 125, 126, 127, 128, 129, 130, 131, 140, 141, 142, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 168, 169, 180, 181, 196, 219, 222, 224, 227, 229, 232, 236, 237, 277, 278, 321, 328, 331, 360, 361, 364, 366, 367, 369, 370, 399, 400, 416, 418, 428, 429, 431, 435, 438, 439, 440, 441, 445, 447, 449, 450, 666, 669, 671, 674, 1090, 1106, 1145, 1146, 1161, 1162, 1214, 1230, 1231, 1239, 1242, 1244, 1247, 1283, 1285, 1288, 1289, 1292, 1300, 1303, 1304, 1307, 1321, 1347, 1350, 1360, 1363, 1365, 1368, 1372, 1375, 1382, 1385, 1387, 1390, 1392, 1413, 1416, 1427, 1430, 1437, 1440, 1497, 1501, 1535, 1536, 1539, 1541, 1552, 1583, 1586, 1588, 1591, 1593, 1596, 1613, 1617, 1633, 1634, 1635, 1636, 1637, 1638, 1640, 1641, 1647, 1648, 1649, 1651, 1656, 1657, 1660, 1661, 1662, 1665, 1667, 1670, 1672, 1675, 1677, 1680, 1683, 1686, 1688, 1689, 1692, 1694, 1697, 1704, 1707, 1714, 1715, 1719, 1725, 1729, 1751, 1762, 1765, 1808, 1809, 1817, 1818, 1819, 1820, 1821, 1822, 1823, 1824, 1825, 1826], "ivy_jax": [19, 25], "subsequ": [19, 26, 42, 144, 148, 150, 154, 155, 157, 160, 162, 168, 1820], "call": [19, 26, 32, 35, 39, 43, 94, 99, 100, 105, 106, 144, 145, 146, 148, 149, 150, 151, 154, 155, 156, 157, 158, 160, 161, 162, 164, 166, 167, 168, 169, 181, 416, 417, 418, 440, 1090, 1169, 1233, 1270, 1283, 1293, 1294, 1299, 1392, 1482, 1485, 1637, 1638, 1644, 1648, 1649, 1819, 1820, 1823], "nativ": [19, 26, 45, 48, 49, 50, 52, 53, 54, 55, 56, 64, 65, 101, 102, 112, 113, 148, 152, 156, 157, 158, 159, 160, 164, 166, 167, 237, 285, 288, 321, 326, 327, 349, 350, 351, 352, 354, 355, 400, 416, 420, 421, 422, 423, 425, 435, 446, 449, 1090, 1189, 1192, 1195, 1198, 1208, 1211, 1217, 1259, 1808, 1817, 1826], "native_arrai": [19, 26, 32, 55, 56, 57, 58, 61, 62, 103, 104, 107, 108, 109, 110, 112, 113, 134, 135, 156, 159, 160, 196, 198, 201, 204, 207, 209, 212, 214, 217, 219, 222, 224, 227, 229, 232, 237, 267, 270, 280, 283, 298, 301, 316, 320, 321, 328, 331, 333, 336, 338, 341, 343, 346, 356, 358, 361, 364, 372, 375, 389, 392, 401, 404, 416, 423, 425, 434, 450, 516, 519, 521, 524, 541, 544, 546, 549, 551, 554, 576, 579, 581, 584, 586, 589, 611, 614, 651, 654, 676, 679, 686, 689, 701, 704, 711, 714, 1090, 1200, 1203, 1208, 1211, 1321, 1323, 1326, 1347, 1350, 1355, 1358, 1382, 1385, 1387, 1390, 1392, 1403, 1406, 1413, 1416, 1427, 1430, 1442, 1445, 1457, 1460, 1462, 1465, 1492, 1496, 1497, 1501, 1502, 1505, 1510, 1514, 1535, 1536, 1539, 1541, 1547, 1550, 1552, 1553, 1556, 1573, 1576, 1583, 1586, 1588, 1591, 1598, 1601, 1613, 1617, 1618, 1622, 1661, 1662, 1665, 1688, 1689, 1692, 1694, 1697, 1704, 1707, 1709, 1713, 1714, 1715, 1719, 1720, 1724, 1725, 1729, 1735, 1746, 1749, 1751, 1774, 1777, 1787, 1791, 1797, 1798, 1801, 1803, 1806], "1": [19, 26, 32, 35, 36, 39, 42, 43, 45, 46, 47, 48, 49, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 94, 95, 96, 97, 98, 99, 100, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 143, 145, 146, 148, 150, 152, 153, 154, 155, 157, 159, 160, 161, 162, 163, 164, 166, 167, 168, 169, 181, 196, 198, 201, 204, 207, 209, 212, 214, 217, 219, 222, 224, 227, 229, 232, 237, 239, 240, 249, 251, 266, 267, 270, 272, 275, 277, 278, 280, 283, 290, 293, 295, 296, 298, 301, 316, 320, 321, 328, 331, 333, 336, 338, 341, 343, 346, 356, 358, 360, 361, 364, 384, 387, 389, 392, 416, 422, 423, 425, 430, 433, 434, 436, 441, 445, 450, 451, 454, 456, 459, 461, 464, 466, 469, 471, 474, 476, 479, 481, 484, 486, 489, 496, 499, 501, 504, 511, 514, 516, 519, 521, 524, 526, 529, 531, 534, 536, 539, 541, 544, 546, 549, 551, 554, 556, 559, 561, 564, 566, 569, 571, 574, 576, 579, 581, 584, 586, 589, 596, 599, 601, 604, 606, 609, 611, 614, 616, 619, 621, 624, 626, 629, 631, 634, 636, 639, 641, 644, 651, 654, 661, 664, 666, 669, 671, 674, 676, 679, 681, 684, 686, 689, 691, 694, 696, 699, 701, 704, 711, 714, 716, 719, 721, 724, 726, 729, 731, 734, 736, 739, 741, 744, 746, 750, 751, 755, 756, 760, 761, 765, 766, 770, 1090, 1091, 1094, 1098, 1100, 1107, 1110, 1112, 1115, 1119, 1121, 1127, 1130, 1132, 1135, 1137, 1139, 1147, 1150, 1152, 1155, 1160, 1164, 1167, 1173, 1176, 1179, 1182, 1200, 1203, 1208, 1211, 1214, 1223, 1226, 1237, 1239, 1242, 1244, 1247, 1249, 1253, 1255, 1258, 1260, 1264, 1265, 1269, 1270, 1282, 1283, 1285, 1288, 1294, 1295, 1298, 1299, 1300, 1303, 1308, 1311, 1313, 1317, 1319, 1321, 1322, 1323, 1326, 1328, 1331, 1333, 1336, 1338, 1340, 1342, 1345, 1347, 1350, 1352, 1353, 1354, 1355, 1358, 1360, 1363, 1365, 1368, 1372, 1375, 1382, 1385, 1387, 1390, 1392, 1393, 1396, 1398, 1401, 1403, 1406, 1408, 1411, 1413, 1416, 1427, 1430, 1432, 1435, 1437, 1440, 1442, 1445, 1447, 1450, 1457, 1460, 1462, 1465, 1467, 1470, 1472, 1475, 1482, 1485, 1487, 1490, 1492, 1496, 1497, 1501, 1502, 1505, 1510, 1514, 1515, 1519, 1520, 1524, 1525, 1529, 1535, 1536, 1539, 1541, 1542, 1545, 1547, 1550, 1552, 1553, 1556, 1558, 1561, 1563, 1566, 1568, 1571, 1573, 1576, 1578, 1581, 1583, 1586, 1588, 1591, 1593, 1596, 1598, 1601, 1603, 1606, 1608, 1611, 1613, 1617, 1618, 1622, 1623, 1627, 1637, 1639, 1641, 1644, 1645, 1646, 1647, 1649, 1650, 1654, 1655, 1656, 1657, 1660, 1661, 1662, 1665, 1667, 1670, 1672, 1675, 1677, 1680, 1683, 1686, 1688, 1689, 1692, 1694, 1697, 1699, 1702, 1704, 1707, 1709, 1713, 1714, 1715, 1719, 1720, 1724, 1725, 1729, 1735, 1736, 1739, 1741, 1744, 1746, 1749, 1751, 1752, 1755, 1757, 1760, 1762, 1765, 1766, 1769, 1770, 1773, 1774, 1777, 1778, 1781, 1783, 1786, 1787, 1791, 1792, 1796, 1797, 1798, 1801, 1803, 1806, 1809], "ndarrai": [19, 26, 41, 55, 56, 63, 64, 65, 111, 144, 148, 149, 154, 157, 158, 159, 161, 162, 164, 166, 169, 237, 242, 244, 285, 288, 1090, 1260, 1264, 1808], "Or": [19, 26, 167], "jaxlib": [19, 26, 42, 144, 148, 149, 154, 161, 164, 166], "xla_extens": [19, 26, 144, 148, 149, 154, 161, 164, 166], "devicearrai": [19, 26, 144, 159, 164, 166], "set_backend_to_specific_vers": 19, "updat": [19, 27, 39, 41, 42, 43, 50, 52, 54, 64, 65, 66, 67, 97, 98, 112, 113, 114, 115, 142, 143, 144, 146, 147, 148, 150, 154, 156, 158, 159, 160, 162, 164, 166, 167, 169, 181, 1090, 1189, 1192, 1218, 1221, 1223, 1226, 1283, 1285, 1288, 1289, 1292, 1295, 1298, 1300, 1303, 1304, 1307, 1308, 1311, 1321, 1377, 1380, 1633, 1634, 1635, 1637, 1645, 1646, 1654, 1655], "dict": [19, 27, 32, 50, 51, 52, 53, 54, 64, 65, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 118, 119, 120, 121, 122, 123, 124, 125, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 146, 153, 167, 168, 196, 197, 203, 416, 422, 1090, 1096, 1122, 1125, 1127, 1130, 1132, 1135, 1145, 1146, 1214, 1637, 1639, 1641, 1644, 1645, 1646, 1647, 1649, 1650, 1651, 1654, 1655, 1808], "make": [19, 27, 35, 36, 41, 42, 43, 143, 144, 146, 147, 148, 149, 150, 151, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 166, 167, 169, 1817, 1819, 1820, 1821, 1822, 1825, 1826], "set_jax_backend": 19, "equival": [19, 28, 29, 30, 31, 72, 73, 120, 121, 157, 158, 162, 167, 169, 237, 239, 240, 450, 516, 519, 651, 654, 656, 659, 711, 714, 1392, 1457, 1460, 1472, 1475, 1487, 1490, 1525, 1529], "set_numpy_backend": 19, "set_tensorflow_backend": 19, "set_torch_backend": 19, "unset_backend": [19, 145], "unset": [19, 32, 145, 164], "adjust": [19, 32, 88, 89, 136, 137, 1751, 1783, 1786, 1792, 1796], "previous": [19, 32, 39, 42, 155, 160, 164, 1090, 1272], "otherwis": [19, 32, 50, 51, 52, 53, 54, 57, 58, 61, 62, 63, 64, 65, 72, 73, 76, 77, 82, 83, 88, 89, 90, 91, 95, 96, 97, 98, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 118, 119, 120, 121, 122, 123, 124, 125, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 144, 146, 147, 148, 149, 150, 160, 164, 237, 239, 240, 272, 275, 321, 328, 331, 343, 346, 348, 350, 351, 352, 354, 355, 379, 382, 389, 392, 400, 416, 422, 450, 591, 594, 596, 599, 601, 604, 606, 609, 1090, 1101, 1104, 1270, 1392, 1393, 1396, 1403, 1406, 1492, 1496, 1520, 1524, 1525, 1529, 1552, 1588, 1591, 1633, 1634, 1635, 1637, 1651, 1688, 1689, 1692, 1694, 1697, 1709, 1713, 1735, 1741, 1744, 1751, 1766, 1769, 1770, 1773, 1774, 1777, 1778, 1781, 1783, 1786, 1787, 1791, 1792, 1796, 1797, 1798, 1801, 1803, 1806], "implement": [19, 32, 41, 57, 58, 63, 86, 87, 105, 106, 107, 108, 111, 134, 135, 142, 143, 144, 145, 146, 147, 148, 149, 151, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 166, 167, 168, 169, 180, 181, 321, 328, 331, 401, 404, 416, 441, 445, 450, 451, 454, 456, 459, 461, 464, 471, 474, 476, 479, 481, 484, 486, 489, 531, 534, 536, 539, 561, 564, 566, 569, 621, 624, 626, 629, 631, 634, 636, 639, 676, 679, 696, 699, 711, 714, 726, 729, 731, 734, 751, 755, 756, 760, 1392, 1418, 1421, 1422, 1425, 1427, 1430, 1714, 1715, 1719, 1720, 1724, 1725, 1729, 1730, 1734, 1735, 1736, 1739, 1746, 1749, 1751, 1766, 1769, 1770, 1773, 1774, 1777, 1783, 1786, 1808, 1809, 1816, 1817, 1818, 1819, 1822, 1825, 1826], "wa": [19, 32, 35, 43, 88, 89, 90, 91, 95, 96, 97, 98, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 118, 119, 120, 121, 122, 123, 124, 125, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 143, 150, 158, 164, 166, 1090, 1270, 1637, 1651, 1751, 1766, 1769, 1770, 1773, 1774, 1777, 1778, 1781, 1783, 1786, 1787, 1791, 1792, 1796, 1797, 1798, 1801, 1803, 1806, 1818, 1819, 1821], "last": [19, 32, 36, 43, 45, 48, 49, 55, 56, 63, 72, 73, 74, 75, 76, 77, 86, 87, 88, 89, 90, 91, 97, 98, 111, 120, 121, 122, 123, 124, 125, 134, 135, 136, 137, 138, 139, 143, 145, 148, 150, 153, 157, 159, 160, 162, 164, 181, 237, 272, 275, 416, 422, 1283, 1312, 1318, 1320, 1321, 1377, 1380, 1392, 1398, 1401, 1413, 1416, 1510, 1514, 1520, 1524, 1535, 1542, 1545, 1547, 1550, 1552, 1558, 1561, 1573, 1576, 1588, 1591, 1593, 1596, 1598, 1601, 1608, 1611, 1735, 1736, 1739, 1741, 1744, 1746, 1749, 1751, 1752, 1755, 1757, 1760, 1797, 1798, 1801, 1803, 1806, 1819], "henc": [19, 32, 42, 146, 160, 1552, 1568, 1571, 1714, 1715, 1719, 1720, 1724, 1725, 1729, 1730, 1734], "here": [19, 32, 40, 41, 42, 43, 143, 146, 147, 150, 154, 157, 158, 159, 160, 161, 164, 165, 166, 167, 168, 169, 180, 181, 450, 716, 719, 1819, 1820], "tensor": [19, 32, 34, 55, 56, 61, 62, 63, 64, 65, 76, 77, 80, 81, 97, 98, 103, 104, 109, 110, 111, 112, 113, 124, 125, 128, 129, 144, 145, 148, 149, 154, 155, 157, 158, 159, 160, 161, 162, 164, 166, 167, 169, 181, 237, 272, 275, 277, 278, 290, 293, 321, 356, 358, 400, 450, 666, 669, 671, 674, 1090, 1223, 1226, 1321, 1360, 1363, 1377, 1380, 1392, 1502, 1505, 1552, 1598, 1601, 1661, 1662, 1665, 1808, 1809, 1816, 1817, 1820, 1822, 1823, 1826], "howev": [19, 32, 35, 41, 42, 43, 143, 144, 145, 146, 148, 149, 150, 151, 154, 155, 157, 158, 159, 160, 162, 164, 166, 167, 168, 169, 181, 1392, 1482, 1485, 1492, 1496, 1818, 1819, 1825], "befor": [19, 32, 41, 42, 43, 76, 77, 97, 98, 143, 144, 148, 149, 151, 152, 153, 154, 156, 157, 158, 159, 160, 161, 164, 167, 181, 416, 418, 440, 1321, 1382, 1385, 1387, 1390, 1552, 1558, 1561, 1633, 1634, 1635, 1637, 1650, 1714, 1715, 1719, 1720, 1724, 1725, 1729, 1730, 1734, 1751, 1752, 1755, 1757, 1760, 1778, 1781, 1787, 1791, 1819], "becom": [19, 32, 34, 36, 43, 63, 111, 146, 150, 158, 181, 1552, 1553, 1556], "swap": [19, 32, 1552, 1613, 1617], "python": [19, 32, 33, 34, 35, 39, 40, 42, 43, 63, 80, 81, 111, 128, 129, 143, 146, 152, 153, 158, 160, 162, 164, 166, 167, 181, 237, 239, 240, 416, 435, 449, 450, 711, 714, 1090, 1282, 1661, 1662, 1665, 1667, 1670, 1672, 1675, 1677, 1680, 1683, 1686, 1808, 1809, 1816, 1819, 1820, 1821, 1825, 1826], "op": [19, 32, 161, 164, 181, 237, 277, 278], "eagertensor": [19, 32, 159], "backend": [23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 40, 41, 42, 43, 50, 52, 54, 64, 65, 66, 67, 97, 98, 112, 113, 142, 143, 144, 147, 149, 150, 151, 152, 154, 155, 156, 157, 158, 159, 160, 162, 163, 165, 166, 169, 321, 366, 367, 369, 370, 378, 415, 416, 428, 429, 431, 433, 447, 1090, 1145, 1146, 1178, 1189, 1192, 1194, 1215, 1249, 1253, 1259, 1392, 1492, 1496, 1808, 1809, 1819, 1822, 1825, 1826], "ml": [33, 35, 36, 37, 40, 158, 163, 164, 165, 167, 168, 169, 180, 1809, 1815, 1816, 1817, 1818, 1819, 1822, 1824, 1826], "explos": [33, 35, 1809], "A": [33, 34, 35, 36, 39, 40, 41, 42, 55, 56, 57, 58, 63, 64, 65, 76, 77, 80, 81, 88, 89, 90, 91, 94, 97, 98, 99, 100, 105, 106, 111, 112, 113, 124, 125, 128, 129, 138, 139, 142, 146, 148, 149, 154, 155, 158, 159, 160, 164, 167, 181, 237, 258, 259, 285, 288, 321, 333, 336, 416, 417, 420, 440, 450, 681, 684, 691, 694, 706, 709, 1090, 1162, 1255, 1258, 1283, 1319, 1392, 1467, 1470, 1487, 1490, 1492, 1496, 1552, 1598, 1601, 1608, 1611, 1637, 1638, 1641, 1643, 1645, 1646, 1647, 1648, 1649, 1652, 1653, 1654, 1655, 1661, 1662, 1665, 1667, 1670, 1672, 1675, 1677, 1680, 1683, 1686, 1751, 1762, 1765, 1797, 1798, 1801, 1803, 1806, 1808, 1809, 1819, 1820], "huge": [33, 35, 167, 1809, 1819, 1825], "number": [33, 34, 42, 43, 45, 48, 49, 55, 56, 57, 58, 61, 62, 63, 64, 65, 72, 73, 76, 77, 80, 81, 82, 83, 84, 85, 88, 89, 90, 91, 94, 97, 98, 99, 100, 103, 104, 105, 106, 109, 110, 111, 112, 113, 120, 121, 124, 125, 128, 129, 130, 131, 132, 133, 136, 137, 138, 139, 146, 148, 149, 150, 157, 160, 162, 164, 167, 234, 235, 236, 237, 239, 240, 258, 259, 267, 270, 272, 275, 277, 278, 280, 283, 285, 288, 290, 293, 321, 333, 336, 350, 351, 352, 354, 355, 360, 361, 364, 372, 375, 379, 382, 384, 387, 389, 392, 394, 397, 401, 404, 416, 432, 433, 434, 450, 466, 469, 486, 489, 526, 529, 571, 574, 576, 579, 606, 609, 666, 669, 676, 679, 696, 699, 711, 714, 716, 719, 721, 724, 761, 765, 1090, 1140, 1143, 1161, 1162, 1164, 1167, 1216, 1239, 1242, 1244, 1247, 1265, 1269, 1277, 1281, 1282, 1321, 1382, 1385, 1392, 1413, 1416, 1418, 1421, 1422, 1425, 1427, 1430, 1457, 1460, 1482, 1485, 1492, 1496, 1515, 1519, 1520, 1524, 1535, 1541, 1552, 1553, 1556, 1563, 1566, 1568, 1571, 1578, 1581, 1583, 1586, 1593, 1596, 1598, 1601, 1608, 1611, 1618, 1622, 1628, 1632, 1633, 1634, 1635, 1636, 1661, 1662, 1665, 1682, 1688, 1704, 1707, 1714, 1715, 1719, 1720, 1724, 1751, 1752, 1755, 1757, 1760, 1766, 1769, 1770, 1773, 1774, 1777, 1778, 1781, 1783, 1786, 1787, 1791, 1792, 1796, 1797, 1798, 1801, 1803, 1806, 1809], "tool": [33, 36, 43, 150, 165, 169, 180, 181, 1809, 1817, 1818, 1819, 1820, 1822, 1825, 1826], "have": [33, 34, 35, 36, 38, 39, 41, 42, 43, 45, 46, 47, 48, 49, 55, 56, 57, 58, 61, 62, 63, 64, 65, 66, 67, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 165, 166, 167, 168, 169, 180, 181, 196, 198, 201, 204, 207, 209, 212, 214, 217, 219, 222, 224, 227, 229, 232, 234, 236, 237, 239, 240, 242, 244, 249, 251, 252, 253, 256, 258, 259, 261, 264, 266, 267, 270, 272, 275, 277, 278, 280, 283, 290, 293, 295, 296, 298, 301, 303, 307, 308, 312, 313, 315, 316, 320, 321, 328, 331, 333, 336, 338, 341, 361, 364, 416, 441, 445, 450, 451, 454, 456, 459, 461, 464, 466, 469, 471, 474, 476, 479, 481, 484, 486, 489, 491, 494, 496, 499, 501, 504, 506, 509, 511, 514, 516, 519, 521, 524, 526, 529, 531, 534, 536, 539, 541, 544, 546, 549, 551, 554, 556, 559, 561, 564, 566, 569, 571, 574, 576, 579, 581, 584, 586, 589, 591, 594, 596, 599, 601, 604, 606, 609, 611, 614, 616, 619, 621, 624, 626, 629, 631, 634, 636, 639, 641, 644, 646, 649, 651, 654, 656, 659, 661, 664, 666, 669, 671, 674, 676, 679, 681, 684, 686, 689, 691, 694, 696, 699, 701, 704, 706, 709, 711, 714, 716, 719, 721, 724, 726, 729, 731, 734, 736, 739, 741, 744, 746, 750, 751, 755, 756, 760, 761, 765, 766, 770, 1089, 1090, 1107, 1110, 1112, 1115, 1122, 1125, 1127, 1130, 1132, 1135, 1147, 1150, 1152, 1155, 1218, 1221, 1223, 1226, 1283, 1285, 1288, 1289, 1292, 1295, 1298, 1300, 1303, 1304, 1307, 1308, 1311, 1313, 1317, 1321, 1323, 1326, 1328, 1331, 1333, 1336, 1338, 1340, 1342, 1345, 1347, 1350, 1352, 1353, 1355, 1358, 1360, 1363, 1365, 1368, 1372, 1375, 1382, 1385, 1387, 1390, 1392, 1393, 1396, 1398, 1401, 1403, 1406, 1408, 1411, 1413, 1416, 1418, 1421, 1422, 1425, 1427, 1430, 1432, 1435, 1437, 1440, 1442, 1445, 1447, 1450, 1452, 1455, 1457, 1460, 1462, 1465, 1467, 1470, 1472, 1475, 1477, 1480, 1482, 1485, 1487, 1490, 1492, 1496, 1497, 1501, 1502, 1505, 1510, 1514, 1520, 1524, 1525, 1529, 1530, 1534, 1535, 1536, 1539, 1541, 1542, 1545, 1547, 1550, 1552, 1553, 1556, 1558, 1561, 1563, 1566, 1568, 1571, 1573, 1576, 1578, 1581, 1583, 1586, 1588, 1591, 1593, 1596, 1603, 1606, 1608, 1611, 1613, 1617, 1618, 1622, 1628, 1632, 1633, 1637, 1656, 1657, 1660, 1661, 1662, 1665, 1667, 1670, 1672, 1675, 1677, 1680, 1683, 1686, 1688, 1689, 1692, 1694, 1697, 1699, 1702, 1704, 1707, 1709, 1713, 1714, 1715, 1719, 1720, 1724, 1725, 1729, 1730, 1734, 1735, 1736, 1739, 1746, 1749, 1751, 1752, 1755, 1757, 1760, 1766, 1769, 1770, 1773, 1774, 1777, 1778, 1781, 1783, 1786, 1787, 1791, 1792, 1796, 1797, 1798, 1801, 1803, 1806, 1808, 1809, 1815, 1816, 1817, 1818, 1819, 1820, 1821, 1822, 1823, 1824, 1825, 1826, 1828, 1831, 1833, 1843, 1855, 1859, 1861, 1867], "explod": [33, 34, 1809], "onto": [33, 34, 1637, 1644, 1650, 1809, 1819], "scene": [33, 34, 66, 67, 142, 163, 165, 1809, 1819], "b": [33, 36, 37, 45, 48, 49, 61, 62, 63, 64, 65, 70, 71, 88, 89, 94, 95, 96, 99, 100, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 142, 143, 145, 146, 147, 150, 155, 163, 164, 165, 167, 168, 169, 179, 196, 198, 201, 209, 212, 214, 217, 237, 249, 251, 266, 267, 270, 277, 278, 298, 301, 316, 320, 321, 328, 331, 333, 336, 338, 341, 343, 346, 356, 358, 389, 392, 450, 451, 454, 456, 459, 461, 464, 471, 474, 476, 479, 481, 484, 486, 489, 491, 494, 496, 499, 511, 514, 516, 519, 521, 524, 526, 529, 531, 534, 536, 539, 541, 544, 546, 549, 551, 554, 566, 569, 571, 574, 576, 579, 581, 584, 586, 589, 591, 594, 596, 599, 601, 604, 606, 609, 611, 614, 616, 619, 621, 624, 626, 629, 631, 634, 641, 644, 646, 649, 651, 654, 656, 659, 661, 664, 666, 669, 671, 674, 681, 684, 686, 689, 691, 694, 696, 699, 701, 704, 711, 714, 716, 719, 721, 724, 726, 729, 731, 734, 736, 739, 741, 744, 751, 755, 756, 760, 761, 765, 1090, 1091, 1094, 1098, 1100, 1107, 1110, 1112, 1115, 1119, 1121, 1127, 1130, 1132, 1135, 1137, 1139, 1147, 1150, 1152, 1155, 1164, 1167, 1173, 1176, 1179, 1182, 1184, 1187, 1223, 1226, 1239, 1242, 1249, 1253, 1260, 1264, 1265, 1269, 1283, 1285, 1288, 1295, 1298, 1300, 1303, 1308, 1311, 1313, 1317, 1321, 1323, 1326, 1333, 1336, 1342, 1345, 1347, 1350, 1355, 1358, 1372, 1375, 1382, 1385, 1387, 1390, 1392, 1393, 1396, 1398, 1401, 1403, 1406, 1413, 1416, 1427, 1430, 1432, 1435, 1437, 1440, 1442, 1445, 1447, 1450, 1457, 1460, 1462, 1465, 1467, 1470, 1482, 1485, 1487, 1490, 1492, 1496, 1497, 1501, 1502, 1505, 1510, 1514, 1535, 1536, 1539, 1541, 1552, 1553, 1556, 1563, 1566, 1568, 1571, 1578, 1581, 1583, 1586, 1588, 1591, 1593, 1596, 1603, 1606, 1608, 1611, 1613, 1617, 1618, 1622, 1623, 1627, 1637, 1641, 1644, 1645, 1646, 1647, 1649, 1654, 1655, 1656, 1657, 1660, 1661, 1683, 1686, 1688, 1694, 1697, 1699, 1702, 1704, 1707, 1709, 1713, 1714, 1720, 1724, 1725, 1729, 1735, 1736, 1739, 1746, 1749, 1751, 1752, 1755, 1757, 1760, 1762, 1765, 1766, 1769, 1770, 1773, 1774, 1777, 1778, 1781, 1783, 1786, 1787, 1791, 1792, 1796, 1797, 1798, 1801, 1803, 1806, 1809, 1815], "why": [33, 35, 43, 157, 166, 1809], "unifi": [33, 35, 97, 98, 142, 143, 144, 148, 152, 158, 162, 164, 181, 416, 440, 1809, 1815, 1816, 1817, 1819, 1823, 1826], "should": [33, 35, 38, 39, 41, 42, 43, 45, 46, 47, 48, 49, 55, 56, 61, 62, 63, 64, 65, 66, 67, 72, 73, 76, 77, 80, 81, 82, 83, 88, 89, 94, 95, 96, 97, 98, 99, 100, 103, 104, 109, 110, 111, 114, 115, 120, 121, 124, 125, 128, 129, 130, 131, 134, 135, 136, 137, 140, 141, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 166, 167, 168, 196, 234, 235, 236, 237, 280, 283, 290, 293, 303, 307, 308, 312, 321, 338, 341, 400, 416, 418, 450, 451, 454, 456, 459, 461, 464, 466, 469, 471, 474, 476, 479, 481, 484, 486, 489, 491, 494, 496, 499, 501, 504, 506, 509, 511, 514, 516, 519, 521, 524, 526, 529, 531, 534, 536, 539, 546, 549, 561, 564, 566, 569, 571, 574, 591, 594, 596, 599, 601, 604, 606, 609, 611, 614, 621, 624, 626, 629, 631, 634, 636, 639, 641, 644, 646, 649, 651, 654, 656, 659, 661, 664, 676, 679, 686, 689, 696, 699, 711, 714, 721, 724, 726, 729, 731, 734, 736, 739, 741, 744, 746, 750, 751, 755, 756, 760, 761, 765, 766, 770, 1089, 1090, 1106, 1189, 1192, 1282, 1283, 1289, 1292, 1295, 1298, 1300, 1303, 1304, 1307, 1308, 1311, 1321, 1365, 1368, 1387, 1390, 1392, 1393, 1396, 1398, 1401, 1403, 1406, 1413, 1416, 1432, 1435, 1437, 1440, 1442, 1445, 1447, 1450, 1452, 1455, 1457, 1460, 1467, 1470, 1472, 1475, 1477, 1480, 1482, 1485, 1487, 1490, 1492, 1496, 1502, 1505, 1510, 1514, 1520, 1524, 1525, 1529, 1535, 1552, 1633, 1637, 1656, 1661, 1683, 1686, 1688, 1689, 1692, 1694, 1697, 1714, 1715, 1719, 1720, 1724, 1725, 1729, 1730, 1734, 1735, 1751, 1752, 1755, 1757, 1760, 1762, 1765, 1766, 1769, 1770, 1773, 1774, 1777, 1778, 1781, 1787, 1791, 1792, 1796, 1797, 1809, 1815, 1816, 1819, 1821, 1826, 1828, 1831, 1833, 1843, 1855, 1859, 1861, 1867], "them": [33, 34, 35, 36, 39, 41, 43, 143, 144, 145, 146, 152, 156, 157, 158, 159, 160, 164, 166, 167, 168, 181, 1090, 1106, 1217, 1808, 1809, 1816, 1817, 1819, 1821, 1825], "c": [33, 35, 36, 37, 42, 63, 64, 65, 66, 67, 70, 71, 76, 77, 88, 89, 105, 106, 109, 110, 111, 112, 113, 114, 115, 120, 121, 124, 125, 136, 137, 142, 146, 150, 155, 162, 163, 164, 165, 167, 181, 321, 361, 364, 372, 375, 450, 516, 519, 621, 624, 626, 629, 686, 689, 721, 724, 1090, 1098, 1100, 1132, 1135, 1265, 1269, 1283, 1285, 1288, 1289, 1292, 1295, 1298, 1300, 1303, 1304, 1307, 1308, 1311, 1321, 1333, 1336, 1342, 1345, 1347, 1350, 1392, 1427, 1430, 1437, 1440, 1552, 1588, 1591, 1608, 1611, 1637, 1641, 1645, 1646, 1647, 1649, 1654, 1655, 1688, 1704, 1707, 1751, 1757, 1760, 1762, 1765, 1783, 1786, 1792, 1796, 1808, 1809, 1815, 1819, 1823, 1824, 1826], "standard": [33, 61, 62, 72, 73, 78, 79, 80, 81, 88, 89, 109, 110, 126, 127, 128, 129, 136, 137, 142, 143, 144, 146, 148, 151, 154, 157, 160, 161, 181, 237, 239, 240, 242, 244, 252, 253, 256, 258, 259, 261, 264, 266, 267, 270, 272, 275, 280, 283, 295, 296, 298, 301, 303, 307, 308, 312, 313, 315, 316, 320, 321, 343, 346, 361, 364, 372, 375, 401, 404, 450, 451, 454, 456, 459, 461, 464, 466, 469, 471, 474, 476, 479, 481, 484, 486, 489, 491, 494, 496, 499, 501, 504, 506, 509, 516, 519, 521, 524, 526, 529, 531, 534, 536, 539, 546, 549, 551, 554, 566, 569, 571, 574, 576, 579, 581, 584, 586, 589, 591, 594, 596, 599, 601, 604, 616, 619, 626, 629, 631, 634, 636, 639, 641, 644, 646, 649, 651, 654, 656, 659, 661, 664, 676, 679, 681, 684, 686, 689, 691, 694, 696, 699, 711, 714, 716, 719, 721, 724, 726, 729, 731, 734, 736, 739, 741, 744, 746, 750, 751, 755, 756, 760, 761, 765, 1090, 1282, 1392, 1393, 1396, 1398, 1401, 1403, 1406, 1408, 1411, 1413, 1416, 1418, 1421, 1422, 1425, 1427, 1430, 1437, 1440, 1442, 1445, 1447, 1450, 1452, 1455, 1457, 1460, 1462, 1465, 1467, 1470, 1472, 1475, 1477, 1480, 1482, 1485, 1487, 1490, 1492, 1496, 1497, 1501, 1502, 1505, 1520, 1524, 1525, 1529, 1552, 1558, 1561, 1568, 1571, 1573, 1576, 1578, 1581, 1588, 1591, 1593, 1596, 1603, 1606, 1608, 1611, 1656, 1657, 1660, 1661, 1672, 1675, 1688, 1689, 1692, 1694, 1697, 1704, 1707, 1709, 1713, 1714, 1715, 1719, 1720, 1724, 1725, 1729, 1730, 1734, 1735, 1736, 1739, 1746, 1749, 1751, 1766, 1769, 1770, 1773, 1774, 1777, 1778, 1781, 1783, 1786, 1787, 1791, 1792, 1796, 1797, 1798, 1801, 1803, 1806, 1809, 1815, 1817, 1818, 1821, 1822, 1824], "re": [33, 34, 35, 37, 41, 42, 43, 64, 65, 82, 83, 130, 131, 142, 143, 148, 158, 161, 162, 166, 169, 181, 416, 440, 1090, 1106, 1122, 1125, 1392, 1502, 1505, 1552, 1593, 1596, 1688, 1699, 1702, 1709, 1713, 1809, 1819], "collabor": [33, 34, 35, 1809], "consortium": [33, 35, 1809], "api": [33, 34, 42, 61, 62, 72, 73, 109, 110, 142, 144, 148, 149, 150, 151, 152, 154, 155, 156, 157, 158, 159, 160, 162, 163, 165, 167, 181, 237, 239, 240, 242, 244, 252, 253, 256, 258, 259, 261, 264, 266, 267, 270, 272, 275, 280, 283, 295, 296, 298, 301, 303, 307, 308, 312, 313, 315, 316, 320, 321, 343, 346, 361, 364, 372, 375, 399, 401, 404, 450, 451, 454, 456, 459, 461, 464, 466, 469, 471, 474, 476, 479, 481, 484, 486, 489, 491, 494, 496, 499, 501, 504, 506, 509, 516, 519, 521, 524, 526, 529, 531, 534, 536, 539, 546, 549, 551, 554, 566, 569, 571, 574, 576, 579, 581, 584, 586, 589, 591, 594, 596, 599, 601, 604, 616, 619, 626, 629, 631, 634, 636, 639, 641, 644, 646, 649, 651, 654, 656, 659, 661, 664, 676, 679, 681, 684, 686, 689, 691, 694, 696, 699, 711, 714, 716, 719, 721, 724, 726, 729, 731, 734, 736, 739, 741, 744, 746, 750, 751, 755, 756, 760, 761, 765, 1392, 1393, 1396, 1398, 1401, 1403, 1406, 1408, 1411, 1413, 1416, 1418, 1421, 1422, 1425, 1427, 1430, 1437, 1440, 1442, 1445, 1447, 1450, 1452, 1455, 1457, 1460, 1462, 1465, 1467, 1470, 1472, 1475, 1477, 1480, 1482, 1485, 1487, 1490, 1492, 1496, 1497, 1501, 1502, 1505, 1520, 1524, 1525, 1529, 1552, 1558, 1561, 1568, 1571, 1573, 1576, 1578, 1581, 1588, 1591, 1593, 1596, 1603, 1606, 1608, 1611, 1688, 1689, 1692, 1694, 1697, 1704, 1707, 1709, 1713, 1714, 1715, 1719, 1720, 1724, 1725, 1729, 1730, 1734, 1735, 1736, 1739, 1746, 1749, 1751, 1766, 1769, 1770, 1773, 1774, 1777, 1778, 1781, 1783, 1786, 1787, 1791, 1792, 1796, 1797, 1798, 1801, 1803, 1806, 1808, 1809, 1815, 1817, 1819, 1821, 1824, 1826], "open": [34, 35, 36, 37, 39, 42, 43, 80, 81, 128, 129, 147, 148, 151, 158, 159, 162, 180, 237, 239, 240, 1661, 1667, 1670, 1677, 1680, 1809, 1817, 1818, 1819, 1821, 1822], "project": [34, 35, 36, 39, 42, 43, 145, 160, 168, 180, 181, 1815, 1817, 1819, 1822, 1826], "grown": 34, "consider": [34, 150, 154, 162, 1816, 1817], "recent": [34, 35, 42, 43, 160], "year": [34, 36, 143, 181, 1809, 1819], "especi": [34, 42, 162, 1819], "deep": [34, 37, 40, 41, 43, 97, 98, 143, 146, 148, 159, 163, 166, 167, 1809, 1817, 1819, 1822, 1823, 1825, 1826], "learn": [34, 35, 37, 40, 41, 42, 66, 67, 114, 115, 142, 143, 155, 163, 180, 1283, 1289, 1292, 1295, 1298, 1300, 1303, 1304, 1307, 1308, 1311, 1633, 1634, 1635, 1636, 1808, 1809, 1817, 1821, 1822, 1823, 1824, 1825, 1826], "can": [34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 55, 56, 57, 58, 63, 72, 73, 76, 77, 80, 81, 105, 106, 111, 120, 121, 124, 125, 128, 129, 142, 143, 145, 146, 147, 148, 149, 150, 151, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 180, 181, 237, 242, 244, 285, 288, 321, 343, 346, 416, 420, 438, 439, 440, 1090, 1282, 1283, 1293, 1392, 1437, 1440, 1492, 1496, 1552, 1588, 1591, 1661, 1667, 1670, 1672, 1675, 1677, 1680, 1808, 1809, 1816, 1817, 1818, 1819, 1820, 1822, 1823, 1825, 1826], "seen": [34, 35, 147, 150, 152, 158, 160, 164, 166, 167, 1825], "rapidli": 34, "increas": [34, 72, 73, 120, 121, 148, 152, 161, 162, 1392, 1515, 1519, 1552, 1563, 1566, 1628, 1632, 1637, 1650, 1819], "github": [34, 38, 40, 41, 43, 143, 148, 150, 151, 160], "repo": [34, 38, 39, 40, 42, 43, 143, 148, 158, 159, 160, 161], "contain": [34, 38, 39, 41, 42, 45, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 61, 62, 63, 64, 65, 72, 73, 74, 75, 76, 77, 82, 83, 84, 85, 88, 89, 90, 91, 95, 96, 97, 98, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 147, 148, 150, 151, 154, 155, 156, 157, 160, 163, 164, 165, 168, 181, 196, 198, 201, 209, 212, 214, 217, 219, 222, 229, 232, 237, 239, 240, 242, 244, 249, 251, 252, 253, 256, 258, 259, 261, 264, 266, 267, 270, 272, 275, 277, 278, 280, 283, 295, 296, 298, 301, 303, 307, 308, 312, 313, 315, 316, 320, 321, 328, 331, 333, 336, 338, 341, 343, 346, 356, 358, 361, 364, 372, 375, 379, 382, 389, 392, 401, 404, 416, 430, 434, 450, 451, 454, 456, 459, 461, 464, 466, 469, 471, 474, 476, 479, 481, 484, 486, 489, 491, 494, 496, 499, 501, 504, 506, 509, 511, 514, 516, 519, 521, 524, 526, 529, 531, 534, 536, 539, 541, 544, 546, 549, 551, 554, 561, 564, 566, 569, 571, 574, 576, 579, 581, 584, 586, 589, 591, 594, 596, 599, 601, 604, 606, 609, 611, 614, 616, 619, 621, 624, 626, 629, 631, 634, 636, 639, 641, 644, 646, 649, 651, 654, 656, 659, 661, 664, 666, 669, 671, 674, 676, 679, 681, 684, 686, 689, 691, 694, 696, 699, 701, 704, 711, 714, 716, 719, 721, 724, 726, 729, 731, 734, 736, 739, 741, 744, 746, 750, 751, 755, 756, 760, 761, 765, 766, 770, 1090, 1091, 1094, 1096, 1097, 1107, 1110, 1112, 1115, 1127, 1130, 1132, 1135, 1137, 1139, 1147, 1150, 1152, 1155, 1163, 1164, 1167, 1173, 1176, 1179, 1182, 1184, 1187, 1205, 1207, 1223, 1226, 1232, 1233, 1239, 1242, 1249, 1253, 1255, 1258, 1260, 1264, 1265, 1269, 1273, 1282, 1283, 1285, 1288, 1295, 1298, 1300, 1303, 1308, 1311, 1313, 1317, 1321, 1323, 1326, 1333, 1336, 1342, 1345, 1347, 1350, 1355, 1358, 1372, 1375, 1382, 1385, 1387, 1390, 1392, 1393, 1396, 1398, 1401, 1403, 1406, 1408, 1411, 1413, 1416, 1418, 1421, 1422, 1425, 1427, 1430, 1432, 1435, 1437, 1440, 1442, 1445, 1447, 1450, 1452, 1455, 1457, 1460, 1462, 1465, 1467, 1470, 1472, 1475, 1477, 1480, 1482, 1485, 1487, 1490, 1492, 1496, 1497, 1501, 1502, 1505, 1510, 1514, 1520, 1524, 1525, 1529, 1530, 1534, 1535, 1536, 1539, 1541, 1542, 1545, 1547, 1550, 1552, 1553, 1556, 1558, 1561, 1563, 1566, 1568, 1571, 1573, 1576, 1578, 1581, 1583, 1586, 1588, 1591, 1593, 1596, 1598, 1601, 1603, 1606, 1608, 1611, 1613, 1617, 1618, 1622, 1623, 1627, 1628, 1632, 1633, 1634, 1635, 1636, 1637, 1641, 1645, 1647, 1651, 1654, 1656, 1657, 1660, 1661, 1662, 1665, 1683, 1686, 1688, 1689, 1692, 1694, 1697, 1699, 1702, 1704, 1707, 1709, 1713, 1714, 1715, 1719, 1720, 1724, 1725, 1729, 1730, 1734, 1735, 1736, 1739, 1746, 1749, 1751, 1752, 1755, 1757, 1760, 1762, 1765, 1766, 1769, 1770, 1773, 1774, 1777, 1778, 1781, 1783, 1786, 1787, 1791, 1792, 1796, 1797, 1798, 1801, 1803, 1806, 1808, 1809, 1819, 1820, 1825], "term": [34, 43, 146, 164, 1321, 1377, 1380, 1808, 1819], "time": [34, 35, 36, 41, 42, 43, 63, 66, 67, 84, 85, 111, 114, 115, 132, 133, 145, 146, 147, 148, 150, 154, 155, 156, 157, 158, 160, 161, 164, 167, 169, 181, 1283, 1289, 1292, 1300, 1303, 1321, 1377, 1380, 1552, 1618, 1622, 1633, 1634, 1635, 1636, 1688, 1689, 1692, 1694, 1697, 1714, 1715, 1719, 1720, 1724, 1817, 1819, 1820, 1823, 1824, 1825], "These": [34, 35, 36, 38, 40, 41, 42, 43, 63, 111, 143, 146, 147, 148, 150, 151, 153, 154, 155, 157, 160, 161, 164, 165, 167, 168, 169, 181, 1392, 1418, 1421, 1422, 1425, 1808, 1819, 1823, 1825, 1826], "written": [34, 42, 143, 144, 151, 154, 157, 158, 161, 164, 166, 169, 181, 1817, 1819, 1823, 1825, 1826], "mani": [34, 35, 36, 41, 42, 43, 76, 77, 97, 98, 124, 125, 144, 145, 146, 148, 149, 150, 151, 153, 154, 155, 156, 157, 158, 159, 160, 162, 164, 166, 167, 181, 1552, 1598, 1601, 1815, 1819, 1822, 1825, 1826], "differ": [34, 35, 36, 40, 42, 43, 45, 48, 49, 61, 62, 63, 64, 65, 94, 97, 98, 99, 100, 111, 112, 113, 136, 137, 142, 144, 146, 148, 149, 150, 151, 152, 153, 154, 155, 157, 158, 159, 160, 161, 162, 164, 165, 166, 167, 168, 169, 181, 321, 361, 364, 450, 466, 469, 676, 679, 746, 750, 1090, 1147, 1150, 1321, 1372, 1375, 1392, 1482, 1485, 1552, 1558, 1561, 1608, 1611, 1751, 1752, 1755, 1757, 1760, 1778, 1781, 1787, 1791, 1809, 1816, 1817, 1818, 1819, 1822, 1825, 1826], "while": [34, 35, 41, 42, 43, 94, 97, 98, 99, 100, 145, 148, 150, 153, 154, 157, 158, 160, 162, 166, 168, 169, 181, 237, 290, 293, 321, 400, 450, 651, 654, 656, 659, 1714, 1715, 1719, 1751, 1770, 1773, 1783, 1786, 1819, 1825, 1826], "thi": [34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 180, 181, 196, 229, 232, 234, 236, 237, 239, 240, 242, 244, 252, 253, 256, 258, 259, 261, 264, 266, 267, 270, 272, 275, 277, 278, 280, 283, 285, 288, 295, 296, 298, 301, 303, 307, 308, 312, 313, 315, 316, 320, 321, 343, 346, 361, 364, 372, 375, 379, 382, 389, 392, 400, 401, 404, 416, 418, 420, 435, 440, 449, 450, 451, 454, 456, 459, 461, 464, 466, 469, 471, 474, 476, 479, 481, 484, 486, 489, 491, 494, 496, 499, 501, 504, 506, 509, 516, 519, 521, 524, 526, 529, 531, 534, 536, 539, 546, 549, 551, 554, 566, 569, 571, 574, 576, 579, 581, 584, 586, 589, 591, 594, 596, 599, 601, 604, 616, 619, 626, 629, 631, 634, 636, 639, 641, 644, 646, 649, 651, 654, 656, 659, 661, 664, 676, 679, 681, 684, 686, 689, 691, 694, 696, 699, 711, 714, 716, 719, 721, 724, 726, 729, 731, 734, 736, 739, 741, 744, 746, 750, 751, 755, 756, 760, 761, 765, 1089, 1090, 1140, 1143, 1147, 1150, 1164, 1167, 1169, 1173, 1176, 1179, 1182, 1189, 1192, 1233, 1249, 1253, 1265, 1269, 1282, 1283, 1293, 1312, 1313, 1317, 1318, 1320, 1321, 1333, 1336, 1342, 1345, 1355, 1358, 1365, 1368, 1372, 1375, 1382, 1385, 1387, 1390, 1392, 1393, 1396, 1398, 1401, 1403, 1406, 1408, 1411, 1413, 1416, 1418, 1421, 1422, 1425, 1427, 1430, 1437, 1440, 1442, 1445, 1447, 1450, 1452, 1455, 1457, 1460, 1462, 1465, 1467, 1470, 1472, 1475, 1477, 1480, 1482, 1485, 1487, 1490, 1492, 1496, 1497, 1501, 1502, 1505, 1520, 1524, 1525, 1529, 1530, 1534, 1535, 1552, 1553, 1556, 1558, 1561, 1563, 1566, 1568, 1571, 1573, 1576, 1578, 1581, 1583, 1586, 1588, 1591, 1593, 1596, 1598, 1601, 1603, 1606, 1608, 1611, 1613, 1617, 1618, 1622, 1623, 1627, 1628, 1632, 1633, 1637, 1640, 1644, 1650, 1651, 1656, 1657, 1660, 1661, 1688, 1689, 1692, 1694, 1697, 1704, 1707, 1709, 1713, 1714, 1715, 1719, 1720, 1724, 1725, 1729, 1730, 1734, 1735, 1736, 1739, 1746, 1749, 1751, 1766, 1769, 1770, 1773, 1774, 1777, 1778, 1781, 1783, 1786, 1787, 1791, 1792, 1796, 1797, 1798, 1801, 1803, 1806, 1809, 1815, 1816, 1817, 1818, 1819, 1820, 1821, 1822, 1823, 1824, 1825, 1826, 1828, 1831, 1833, 1843, 1855, 1859, 1861, 1867], "wonder": [34, 36, 166], "thing": [34, 35, 36, 40, 41, 42, 43, 145, 153, 158, 160, 162, 166, 167, 1819], "research": [34, 180, 1819, 1826], "develop": [34, 35, 36, 37, 38, 40, 41, 42, 43, 143, 147, 161, 180, 181, 1808, 1809, 1817, 1818, 1819, 1820, 1821, 1824, 1825, 1826], "also": [34, 35, 37, 38, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 95, 96, 97, 98, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 142, 143, 144, 146, 147, 148, 149, 150, 151, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 167, 168, 169, 180, 181, 237, 239, 240, 242, 244, 252, 253, 256, 258, 259, 261, 264, 266, 267, 270, 272, 275, 277, 278, 280, 283, 295, 296, 298, 301, 303, 307, 308, 312, 313, 315, 316, 320, 321, 343, 346, 379, 382, 389, 392, 450, 451, 454, 456, 459, 461, 464, 466, 469, 471, 474, 476, 479, 481, 484, 486, 489, 491, 494, 496, 499, 501, 504, 506, 509, 516, 519, 521, 524, 526, 529, 531, 534, 536, 539, 546, 549, 551, 554, 566, 569, 571, 574, 576, 579, 581, 584, 586, 589, 591, 594, 596, 599, 601, 604, 606, 609, 616, 619, 626, 629, 631, 634, 636, 639, 641, 644, 646, 649, 651, 654, 656, 659, 661, 664, 676, 679, 681, 684, 686, 689, 691, 694, 696, 699, 711, 714, 716, 719, 721, 724, 726, 729, 731, 734, 736, 739, 741, 744, 746, 750, 751, 755, 756, 760, 761, 765, 1090, 1147, 1150, 1164, 1167, 1173, 1176, 1179, 1182, 1189, 1192, 1249, 1253, 1265, 1269, 1283, 1289, 1292, 1313, 1317, 1321, 1333, 1336, 1342, 1345, 1355, 1358, 1372, 1375, 1382, 1385, 1387, 1390, 1392, 1393, 1396, 1398, 1401, 1403, 1406, 1408, 1411, 1413, 1416, 1418, 1421, 1422, 1425, 1427, 1430, 1437, 1440, 1442, 1445, 1447, 1450, 1452, 1455, 1457, 1460, 1462, 1465, 1467, 1470, 1472, 1475, 1477, 1480, 1482, 1485, 1487, 1490, 1492, 1496, 1497, 1501, 1502, 1505, 1520, 1524, 1525, 1529, 1530, 1534, 1552, 1553, 1556, 1558, 1561, 1563, 1566, 1568, 1571, 1573, 1576, 1578, 1581, 1583, 1586, 1588, 1591, 1593, 1596, 1598, 1601, 1603, 1606, 1608, 1611, 1613, 1617, 1618, 1622, 1623, 1627, 1628, 1632, 1633, 1634, 1635, 1636, 1637, 1638, 1639, 1648, 1649, 1650, 1656, 1657, 1660, 1688, 1689, 1692, 1694, 1697, 1704, 1707, 1709, 1713, 1714, 1715, 1719, 1720, 1724, 1725, 1729, 1730, 1734, 1735, 1736, 1739, 1746, 1749, 1751, 1766, 1769, 1770, 1773, 1774, 1777, 1778, 1781, 1783, 1786, 1787, 1791, 1792, 1796, 1797, 1798, 1801, 1803, 1806, 1815, 1816, 1817, 1818, 1819, 1820, 1822, 1824, 1825, 1826], "consid": [34, 35, 63, 72, 73, 111, 120, 121, 148, 155, 161, 165, 166, 167, 450, 651, 654, 656, 659, 1392, 1408, 1411, 1457, 1460, 1714, 1715, 1719, 1720, 1724, 1725, 1729, 1730, 1734, 1816, 1820, 1824, 1826], "speed": [34, 63, 111, 160, 1822], "evolv": [34, 1819], "shareabl": 34, "code": [34, 35, 36, 39, 40, 41, 42, 43, 61, 62, 94, 97, 98, 99, 100, 107, 108, 109, 110, 142, 143, 144, 145, 146, 147, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 162, 163, 164, 165, 166, 167, 168, 169, 179, 181, 416, 418, 441, 445, 1090, 1249, 1253, 1283, 1312, 1318, 1320, 1321, 1355, 1358, 1392, 1457, 1460, 1462, 1465, 1552, 1608, 1611, 1808, 1809, 1815, 1817, 1818, 1819, 1820, 1822, 1823, 1824, 1825, 1826], "significantli": [34, 1392, 1492, 1496, 1817], "hinder": [34, 154], "librari": [34, 35, 36, 37, 41, 107, 108, 143, 162, 169, 179, 181, 416, 441, 445, 450, 566, 569, 631, 634, 651, 654, 656, 659, 1392, 1422, 1425, 1427, 1430, 1714, 1715, 1719, 1720, 1724, 1725, 1729, 1730, 1734, 1751, 1766, 1769, 1770, 1773, 1774, 1777, 1783, 1786, 1808, 1809, 1815, 1816, 1817, 1819, 1823, 1826], "outdat": 34, "month": [34, 42], "rigor": [34, 160], "maintain": [34, 43, 86, 87, 134, 135, 143, 147, 159, 160, 1735, 1736, 1739, 1746, 1749, 1818], "against": [34, 57, 58, 63, 72, 73, 82, 83, 105, 106, 109, 110, 111, 120, 121, 130, 131, 160, 164, 181, 321, 333, 336, 1392, 1442, 1445, 1447, 1450, 1457, 1460, 1472, 1475, 1688, 1689, 1692, 1819], "newest": 34, "For": [34, 35, 36, 38, 39, 41, 42, 43, 63, 72, 73, 111, 120, 121, 142, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 166, 167, 168, 169, 180, 181, 237, 239, 240, 280, 283, 450, 451, 454, 456, 459, 461, 464, 466, 469, 471, 474, 476, 479, 481, 484, 486, 489, 526, 529, 531, 534, 536, 539, 561, 564, 566, 569, 571, 574, 621, 624, 626, 629, 631, 634, 636, 639, 641, 644, 651, 654, 676, 679, 696, 699, 711, 714, 716, 719, 726, 729, 731, 734, 736, 739, 751, 755, 756, 760, 761, 765, 1392, 1482, 1485, 1492, 1496, 1510, 1514, 1552, 1553, 1556, 1608, 1611, 1714, 1715, 1719, 1720, 1724, 1725, 1729, 1730, 1734, 1751, 1766, 1769, 1774, 1777, 1787, 1791, 1816, 1817, 1820, 1825, 1826], "softwar": [34, 35, 42, 43, 1817, 1822, 1823, 1824], "pipelin": [34, 143, 144, 159, 169, 1808, 1819, 1820, 1825], "where": [34, 35, 36, 37, 39, 42, 43, 55, 56, 61, 62, 63, 64, 65, 72, 73, 76, 77, 80, 81, 82, 83, 88, 89, 90, 91, 97, 98, 103, 104, 109, 110, 111, 120, 121, 124, 125, 128, 129, 130, 131, 136, 137, 138, 139, 143, 144, 145, 146, 148, 149, 151, 152, 153, 155, 156, 157, 158, 159, 160, 161, 162, 164, 167, 168, 169, 181, 237, 266, 267, 270, 280, 283, 290, 293, 450, 486, 489, 561, 564, 606, 609, 631, 634, 666, 669, 671, 674, 676, 679, 696, 699, 1090, 1189, 1192, 1282, 1283, 1312, 1318, 1320, 1392, 1418, 1421, 1422, 1425, 1447, 1450, 1457, 1460, 1472, 1475, 1477, 1480, 1492, 1496, 1497, 1501, 1510, 1514, 1520, 1524, 1552, 1553, 1556, 1563, 1566, 1578, 1581, 1608, 1611, 1628, 1632, 1637, 1649, 1661, 1662, 1665, 1667, 1670, 1672, 1675, 1677, 1680, 1688, 1704, 1707, 1751, 1783, 1786, 1792, 1796, 1797, 1798, 1801, 1803, 1806, 1809, 1817, 1826], "rapid": [34, 35, 42, 1819], "prototyp": [34, 1819], "vital": [34, 169], "signific": [34, 35, 181, 1819], "bottleneck": 34, "As": [34, 43, 92, 93, 140, 141, 144, 146, 148, 149, 152, 154, 155, 156, 157, 158, 159, 160, 161, 162, 166, 167, 168, 181, 1714, 1715, 1719, 1720, 1724, 1725, 1729, 1730, 1734, 1819, 1824], "new": [34, 35, 36, 37, 39, 41, 42, 43, 63, 64, 65, 66, 67, 76, 77, 78, 79, 97, 98, 103, 104, 111, 112, 113, 114, 115, 124, 125, 126, 127, 142, 145, 146, 147, 148, 150, 151, 153, 156, 157, 158, 159, 160, 161, 162, 163, 166, 169, 180, 237, 252, 261, 264, 266, 267, 270, 290, 293, 295, 296, 298, 301, 313, 315, 316, 320, 321, 410, 450, 491, 494, 681, 684, 691, 694, 706, 709, 1090, 1122, 1125, 1127, 1130, 1132, 1135, 1140, 1143, 1147, 1150, 1152, 1155, 1160, 1218, 1221, 1223, 1226, 1230, 1236, 1239, 1242, 1244, 1247, 1260, 1264, 1283, 1289, 1292, 1295, 1298, 1300, 1303, 1304, 1307, 1308, 1311, 1552, 1568, 1571, 1588, 1591, 1608, 1611, 1637, 1643, 1654, 1655, 1656, 1657, 1660, 1808, 1809, 1817, 1821, 1825, 1826], "futur": [34, 36, 42, 43, 148, 160, 161, 162, 166, 181, 1392, 1422, 1425, 1427, 1430, 1825], "avail": [34, 42, 43, 64, 65, 112, 113, 146, 147, 149, 151, 158, 181, 416, 422, 431, 432, 433, 447, 1090, 1127, 1130, 1824, 1825], "quickli": [34, 36, 42, 43, 167, 168, 1819, 1826], "obsolet": [34, 36], "user": [34, 35, 38, 39, 42, 43, 142, 145, 146, 148, 156, 157, 158, 160, 162, 163, 164, 181, 196, 197, 203, 1817, 1819, 1825, 1826], "constantli": [34, 161, 162], "invent": 34, "wheel": 34, "our": [34, 35, 37, 40, 41, 42, 43, 45, 92, 93, 94, 140, 141, 143, 146, 147, 148, 150, 152, 153, 158, 159, 160, 161, 162, 163, 164, 166, 167, 168, 169, 181, 196, 234, 236, 237, 321, 416, 450, 1089, 1090, 1283, 1321, 1392, 1535, 1552, 1633, 1637, 1656, 1661, 1688, 1735, 1751, 1797, 1809, 1824, 1825, 1828, 1831, 1833, 1843, 1855, 1859, 1861, 1867], "desir": [34, 43, 57, 58, 63, 82, 83, 97, 98, 105, 106, 107, 108, 111, 130, 131, 145, 148, 158, 164, 321, 328, 331, 343, 346, 416, 441, 445, 1688, 1699, 1702, 1819], "simultan": [34, 36], "modern": [34, 35, 1824], "simpl": [34, 41, 42, 43, 144, 146, 148, 149, 150, 151, 155, 157, 158, 160, 161, 162, 166, 168, 169, 181, 1090, 1137, 1139, 1808, 1818, 1819, 1820, 1821], "scalabl": [34, 164, 1824, 1825], "manner": [34, 42, 50, 53, 54, 101, 102, 149, 151, 158, 161, 167, 180, 181, 1637, 1650, 1815, 1817, 1825, 1826], "determin": [34, 45, 48, 49, 61, 62, 63, 72, 73, 76, 77, 90, 91, 94, 97, 98, 99, 100, 109, 110, 111, 112, 113, 120, 121, 134, 135, 138, 139, 146, 148, 149, 151, 155, 158, 162, 321, 343, 346, 349, 360, 378, 379, 382, 384, 387, 389, 392, 394, 397, 415, 416, 431, 432, 433, 447, 450, 456, 459, 461, 464, 466, 469, 471, 474, 476, 479, 481, 484, 486, 489, 491, 494, 496, 499, 506, 509, 511, 514, 516, 519, 521, 524, 531, 534, 536, 539, 546, 549, 561, 564, 566, 569, 591, 594, 596, 599, 601, 604, 606, 609, 621, 624, 626, 629, 631, 634, 636, 639, 641, 644, 661, 664, 676, 679, 696, 699, 711, 714, 726, 729, 731, 734, 736, 739, 751, 755, 756, 760, 766, 770, 1090, 1091, 1094, 1098, 1100, 1173, 1176, 1178, 1194, 1195, 1198, 1200, 1203, 1205, 1207, 1208, 1211, 1249, 1253, 1277, 1281, 1321, 1382, 1385, 1392, 1393, 1396, 1398, 1401, 1403, 1406, 1413, 1416, 1432, 1435, 1437, 1440, 1442, 1445, 1452, 1455, 1457, 1460, 1467, 1470, 1472, 1475, 1482, 1485, 1487, 1490, 1510, 1514, 1520, 1524, 1525, 1529, 1552, 1558, 1561, 1633, 1634, 1635, 1636, 1714, 1715, 1719, 1720, 1724, 1725, 1729, 1730, 1734, 1797, 1798, 1801, 1803, 1806], "exactli": [34, 36, 146, 148, 149, 150, 160, 162], "common": [34, 41, 61, 62, 63, 97, 98, 111, 146, 148, 149, 150, 153, 155, 156, 158, 161, 162, 181, 321, 400, 450, 676, 679, 1816, 1819, 1826], "ground": [34, 158, 160], "li": [34, 63, 111], "between": [34, 63, 74, 75, 76, 77, 94, 97, 98, 99, 100, 109, 110, 111, 122, 123, 124, 125, 144, 145, 146, 150, 154, 155, 158, 159, 160, 162, 163, 165, 166, 167, 169, 180, 237, 239, 240, 321, 361, 364, 450, 486, 489, 696, 699, 1535, 1536, 1539, 1541, 1542, 1545, 1547, 1550, 1552, 1608, 1611, 1637, 1644, 1661, 1667, 1670, 1714, 1715, 1719, 1720, 1724, 1725, 1729, 1730, 1734, 1809, 1815, 1816, 1818, 1819, 1820, 1825], "find": [34, 37, 39, 40, 41, 42, 43, 97, 98, 143, 147, 158, 160, 162, 164, 167, 1637, 1640, 1714, 1715, 1719, 1720, 1724, 1725, 1729, 1730, 1734, 1808, 1809], "essenti": [34, 35, 41, 146, 149, 150, 155, 158, 161, 1825], "order": [34, 39, 41, 42, 43, 45, 48, 49, 63, 66, 67, 72, 73, 76, 77, 86, 87, 94, 97, 98, 99, 100, 111, 120, 121, 124, 125, 134, 135, 144, 145, 146, 147, 148, 149, 150, 151, 154, 157, 158, 159, 160, 161, 162, 167, 169, 181, 237, 280, 283, 450, 486, 489, 1392, 1418, 1421, 1422, 1425, 1447, 1450, 1492, 1496, 1497, 1501, 1515, 1519, 1525, 1529, 1552, 1573, 1576, 1588, 1591, 1633, 1634, 1635, 1688, 1704, 1707, 1714, 1715, 1719, 1720, 1724, 1725, 1729, 1730, 1734, 1735, 1736, 1739, 1741, 1744, 1746, 1749, 1815, 1818, 1819, 1820, 1822, 1825], "design": [34, 35, 111, 142, 148, 157, 158, 159, 162, 164, 166, 181, 1815, 1817, 1819, 1822, 1823, 1824], "univers": 34, "abstract": [34, 146, 148, 158, 160, 162, 168, 181, 416, 418, 1817, 1819, 1821, 1822, 1826], "In": [34, 36, 38, 41, 42, 43, 64, 65, 76, 77, 107, 108, 124, 125, 143, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 166, 167, 168, 169, 180, 181, 416, 435, 441, 445, 446, 449, 450, 466, 469, 676, 679, 711, 714, 1090, 1096, 1189, 1192, 1321, 1365, 1368, 1392, 1482, 1485, 1552, 1588, 1591, 1661, 1677, 1680, 1809, 1815, 1817, 1819, 1820, 1822, 1825], "search": [34, 40, 42, 50, 53, 54, 83, 101, 102, 131, 146, 150, 160, 161, 1689, 1692, 1694, 1697, 1699, 1702, 1704, 1707, 1709, 1713], "languag": [34, 36, 158, 162, 164, 1808, 1817, 1820, 1822, 1823, 1824, 1825], "first": [34, 35, 38, 39, 40, 41, 42, 43, 45, 48, 49, 61, 62, 63, 72, 73, 76, 77, 80, 81, 82, 83, 84, 85, 88, 89, 94, 99, 100, 109, 110, 111, 120, 121, 124, 125, 128, 129, 132, 133, 136, 137, 143, 144, 146, 150, 154, 155, 156, 157, 158, 160, 162, 164, 166, 167, 169, 234, 235, 237, 272, 275, 277, 278, 321, 399, 410, 416, 422, 450, 466, 469, 496, 499, 506, 509, 511, 514, 516, 519, 521, 524, 551, 554, 576, 579, 586, 589, 611, 614, 616, 619, 641, 644, 646, 649, 656, 659, 661, 664, 676, 679, 686, 689, 696, 699, 746, 750, 1090, 1098, 1100, 1392, 1398, 1401, 1413, 1416, 1418, 1421, 1422, 1425, 1432, 1435, 1442, 1445, 1467, 1470, 1477, 1480, 1482, 1485, 1492, 1496, 1502, 1505, 1520, 1524, 1552, 1588, 1591, 1593, 1596, 1608, 1611, 1613, 1617, 1633, 1634, 1635, 1636, 1637, 1638, 1639, 1648, 1649, 1651, 1661, 1683, 1686, 1688, 1689, 1692, 1694, 1697, 1714, 1715, 1719, 1720, 1724, 1725, 1729, 1735, 1741, 1744, 1751, 1752, 1755, 1757, 1760, 1817, 1819, 1820, 1824], "see": [34, 37, 39, 41, 42, 43, 45, 48, 49, 57, 58, 61, 62, 72, 73, 82, 83, 88, 89, 90, 91, 94, 99, 100, 109, 110, 120, 121, 130, 131, 136, 137, 138, 139, 143, 146, 147, 149, 150, 154, 155, 158, 159, 160, 161, 162, 164, 166, 167, 180, 181, 237, 239, 240, 261, 264, 272, 275, 277, 278, 321, 338, 341, 401, 404, 450, 466, 469, 496, 499, 506, 509, 511, 514, 516, 519, 521, 524, 546, 549, 566, 569, 611, 614, 631, 634, 641, 644, 656, 659, 661, 664, 686, 689, 696, 699, 711, 714, 746, 750, 766, 770, 1392, 1457, 1460, 1472, 1475, 1487, 1490, 1520, 1524, 1525, 1529, 1688, 1694, 1697, 1714, 1715, 1719, 1720, 1724, 1725, 1729, 1730, 1734, 1751, 1766, 1769, 1770, 1773, 1774, 1777, 1778, 1781, 1783, 1786, 1787, 1791, 1792, 1796, 1797, 1798, 1801, 1803, 1806, 1809, 1815], "clear": [34, 35, 36, 41, 43, 148, 149, 150, 158, 162, 164, 166, 416, 421, 1819], "front": [34, 163, 164, 167, 1809, 1817, 1819], "runner": 34, "look": [34, 38, 39, 42, 43, 145, 146, 148, 149, 150, 152, 154, 155, 158, 159, 160, 161, 162, 164, 166, 168, 169, 1809, 1815, 1819], "littl": [34, 166, 1821], "deeper": [34, 43, 142, 160, 163, 1637, 1638, 1639, 1648, 1649, 1650], "follow": [34, 35, 39, 41, 42, 43, 64, 65, 66, 67, 97, 98, 112, 113, 114, 115, 120, 121, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 154, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 181, 321, 372, 375, 416, 440, 450, 711, 714, 1090, 1179, 1182, 1184, 1187, 1189, 1192, 1239, 1242, 1244, 1247, 1283, 1289, 1292, 1295, 1298, 1300, 1303, 1304, 1307, 1308, 1311, 1321, 1382, 1385, 1387, 1390, 1392, 1447, 1450, 1477, 1480, 1525, 1529, 1637, 1644, 1650, 1714, 1715, 1719, 1720, 1724, 1725, 1729, 1730, 1734, 1809, 1816, 1819, 1822], "same": [34, 36, 38, 39, 42, 43, 45, 48, 49, 50, 51, 52, 55, 56, 57, 58, 61, 62, 63, 66, 67, 70, 71, 72, 73, 76, 77, 80, 81, 84, 85, 86, 87, 88, 89, 97, 98, 103, 104, 105, 106, 109, 110, 111, 112, 113, 114, 115, 118, 119, 120, 121, 124, 125, 128, 129, 132, 133, 136, 137, 144, 145, 146, 147, 148, 149, 150, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 166, 168, 169, 181, 237, 239, 240, 253, 256, 267, 270, 280, 283, 290, 293, 298, 301, 303, 307, 308, 312, 316, 320, 321, 328, 331, 333, 336, 338, 341, 416, 417, 440, 450, 451, 454, 466, 469, 501, 504, 526, 529, 571, 574, 676, 679, 711, 714, 716, 719, 721, 724, 761, 765, 1283, 1313, 1317, 1321, 1323, 1326, 1328, 1331, 1333, 1336, 1338, 1340, 1342, 1345, 1347, 1350, 1352, 1353, 1355, 1358, 1387, 1390, 1392, 1393, 1396, 1398, 1401, 1403, 1406, 1413, 1416, 1418, 1421, 1422, 1425, 1427, 1430, 1437, 1440, 1452, 1455, 1462, 1465, 1472, 1475, 1477, 1480, 1487, 1490, 1492, 1496, 1510, 1514, 1520, 1524, 1552, 1558, 1561, 1573, 1576, 1578, 1581, 1588, 1591, 1593, 1596, 1603, 1606, 1608, 1611, 1633, 1634, 1635, 1637, 1651, 1661, 1677, 1680, 1714, 1715, 1719, 1720, 1724, 1725, 1729, 1730, 1734, 1735, 1736, 1739, 1746, 1749, 1751, 1752, 1755, 1757, 1760, 1762, 1765, 1766, 1769, 1770, 1773, 1774, 1777, 1778, 1781, 1783, 1786, 1787, 1791, 1792, 1796, 1809, 1816, 1818, 1825, 1826], "core": [34, 41, 42, 149, 160, 169, 416, 432, 1809, 1817, 1818, 1819, 1820, 1824, 1826], "principl": [34, 1817, 1819, 1822], "oper": [34, 41, 42, 57, 58, 63, 64, 65, 66, 67, 70, 71, 94, 97, 98, 99, 100, 105, 106, 111, 112, 113, 118, 119, 143, 144, 146, 148, 149, 150, 151, 155, 157, 158, 160, 162, 164, 167, 168, 237, 272, 275, 277, 278, 321, 401, 404, 450, 466, 469, 516, 519, 711, 714, 1090, 1101, 1104, 1122, 1125, 1127, 1130, 1132, 1135, 1249, 1253, 1321, 1323, 1326, 1328, 1331, 1333, 1336, 1338, 1340, 1342, 1345, 1347, 1350, 1352, 1353, 1355, 1358, 1372, 1375, 1808, 1815, 1816, 1817, 1818, 1819, 1820, 1822, 1823, 1824, 1825, 1826], "expos": [34, 164, 168, 1090, 1117], "almost": [34, 40, 146, 159, 165, 167], "ident": [34, 36, 97, 98, 146, 155, 156, 158, 159, 161, 162, 166, 167, 181, 416, 430, 1090, 1160, 1392, 1452, 1455, 1637, 1651, 1808, 1809], "uniqu": [34, 63, 84, 85, 111, 132, 133, 143, 146, 155, 158, 159, 162, 181, 1633, 1634, 1635, 1636, 1637, 1640, 1644, 1714, 1715, 1719, 1720, 1724, 1725, 1729, 1730, 1734, 1822], "syntax": [34, 35, 148, 153, 1819], "There": [34, 41, 42, 43, 143, 144, 146, 148, 150, 152, 153, 155, 158, 159, 164, 167, 181, 1820, 1821, 1825, 1826], "onli": [34, 37, 41, 42, 43, 45, 48, 49, 63, 76, 77, 80, 81, 97, 98, 111, 124, 125, 128, 129, 143, 144, 145, 146, 147, 148, 149, 150, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 166, 167, 168, 169, 179, 181, 321, 399, 400, 416, 436, 449, 450, 651, 654, 656, 659, 1090, 1106, 1392, 1442, 1445, 1477, 1480, 1492, 1496, 1552, 1573, 1576, 1588, 1591, 1637, 1638, 1639, 1648, 1649, 1661, 1667, 1670, 1672, 1675, 1677, 1680, 1688, 1689, 1692, 1694, 1697, 1735, 1741, 1744, 1751, 1770, 1773, 1783, 1786, 1809, 1818, 1819, 1820, 1825, 1826], "so": [34, 35, 41, 42, 43, 45, 46, 47, 48, 49, 50, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 95, 96, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 143, 144, 145, 146, 148, 149, 150, 151, 153, 154, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 181, 182, 194, 1637, 1638, 1649, 1809, 1819, 1820, 1821, 1823], "wai": [34, 35, 40, 41, 42, 143, 145, 148, 157, 159, 160, 162, 166, 167, 168, 169, 181, 1821, 1825, 1826], "manipul": [34, 77, 125, 158, 161, 162, 164, 169, 180, 1553, 1556, 1558, 1561, 1563, 1566, 1568, 1571, 1573, 1576, 1578, 1581, 1583, 1586, 1588, 1591, 1593, 1596, 1598, 1601, 1603, 1606, 1608, 1611, 1613, 1617, 1618, 1622, 1623, 1627, 1628, 1632, 1819], "unsurprisingli": [34, 150], "fundament": [34, 158, 162, 164, 1819], "consist": [34, 88, 89, 97, 98, 143, 144, 148, 152, 157, 164, 1392, 1418, 1421, 1422, 1425, 1751, 1762, 1765, 1820], "each": [34, 35, 36, 38, 41, 42, 43, 45, 48, 49, 57, 58, 61, 62, 63, 64, 65, 66, 67, 70, 71, 72, 73, 76, 77, 82, 83, 84, 85, 88, 89, 94, 97, 98, 99, 100, 105, 106, 109, 110, 111, 112, 113, 114, 115, 118, 119, 120, 121, 124, 125, 130, 131, 132, 133, 136, 137, 142, 143, 144, 145, 146, 147, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 166, 167, 169, 180, 181, 196, 214, 217, 219, 222, 229, 232, 237, 280, 283, 321, 333, 336, 416, 440, 450, 451, 454, 456, 459, 461, 464, 466, 469, 471, 474, 476, 479, 481, 484, 486, 489, 491, 494, 496, 499, 501, 504, 506, 509, 511, 514, 516, 519, 521, 524, 526, 529, 531, 534, 536, 539, 541, 544, 546, 549, 551, 554, 561, 564, 566, 569, 571, 574, 576, 579, 581, 584, 586, 589, 591, 594, 596, 599, 601, 604, 606, 609, 611, 614, 616, 619, 621, 624, 626, 629, 631, 634, 636, 639, 641, 644, 646, 649, 651, 654, 656, 659, 661, 664, 676, 679, 681, 684, 686, 689, 691, 694, 696, 699, 701, 704, 706, 709, 711, 714, 716, 719, 721, 724, 726, 729, 731, 734, 736, 739, 741, 744, 746, 750, 751, 755, 756, 760, 761, 765, 1090, 1091, 1094, 1147, 1150, 1282, 1283, 1289, 1292, 1293, 1295, 1298, 1300, 1303, 1304, 1307, 1308, 1311, 1321, 1323, 1326, 1328, 1331, 1333, 1336, 1338, 1340, 1342, 1345, 1347, 1350, 1352, 1353, 1355, 1358, 1360, 1363, 1392, 1393, 1396, 1398, 1401, 1403, 1406, 1418, 1421, 1422, 1425, 1427, 1430, 1442, 1445, 1452, 1455, 1457, 1460, 1462, 1465, 1472, 1475, 1482, 1485, 1487, 1490, 1492, 1496, 1515, 1519, 1552, 1563, 1566, 1583, 1586, 1593, 1596, 1598, 1601, 1608, 1611, 1618, 1622, 1628, 1632, 1637, 1644, 1651, 1661, 1662, 1665, 1688, 1704, 1707, 1714, 1715, 1719, 1720, 1724, 1751, 1757, 1760, 1762, 1765, 1809, 1815, 1816, 1820, 1822, 1825], "veri": [34, 35, 40, 41, 42, 43, 63, 111, 146, 148, 149, 150, 154, 155, 157, 158, 159, 160, 161, 162, 165, 167, 168, 169, 181, 1392, 1482, 1485, 1809, 1815, 1816, 1817, 1819, 1820, 1821, 1824, 1825, 1826], "similar": [34, 41, 42, 146, 147, 148, 149, 152, 156, 158, 159, 160, 161, 167, 181, 450, 711, 714, 1321, 1382, 1385, 1815, 1816, 1817, 1818, 1825], "convent": [34, 145, 154, 161, 180, 1392, 1442, 1445, 1751, 1762, 1765, 1825], "those": [34, 41, 42, 43, 76, 77, 97, 98, 111, 124, 125, 146, 148, 156, 158, 160, 162, 237, 239, 240, 321, 400, 1090, 1282, 1392, 1477, 1480, 1492, 1496, 1552, 1553, 1556, 1637, 1640, 1816], "introduc": [34, 146, 147, 148, 159, 160, 167, 1552, 1593, 1596, 1714, 1715, 1719], "2006": 34, "layer": [34, 71, 78, 79, 119, 126, 127, 151, 158, 161, 162, 164, 165, 168, 1322, 1323, 1326, 1328, 1331, 1333, 1336, 1338, 1340, 1342, 1345, 1347, 1350, 1352, 1353, 1354, 1355, 1358, 1360, 1363, 1365, 1368, 1370, 1371, 1372, 1375, 1377, 1380, 1382, 1385, 1387, 1390, 1656, 1657, 1660, 1809, 1817, 1819, 1823, 1826], "therefor": [34, 38, 41, 43, 61, 62, 72, 73, 109, 110, 143, 144, 146, 148, 149, 150, 151, 152, 154, 155, 157, 158, 159, 160, 161, 162, 164, 166, 168, 181, 237, 239, 240, 242, 244, 252, 253, 256, 258, 259, 261, 264, 266, 267, 270, 272, 275, 277, 278, 280, 283, 295, 296, 298, 301, 303, 307, 308, 312, 313, 315, 316, 320, 321, 343, 346, 379, 382, 389, 392, 400, 450, 451, 454, 456, 459, 461, 464, 466, 469, 471, 474, 476, 479, 481, 484, 486, 489, 491, 494, 496, 499, 501, 504, 506, 509, 516, 519, 521, 524, 526, 529, 531, 534, 536, 539, 546, 549, 551, 554, 566, 569, 571, 574, 576, 579, 581, 584, 586, 589, 591, 594, 596, 599, 601, 604, 616, 619, 626, 629, 631, 634, 636, 639, 641, 644, 646, 649, 651, 654, 656, 659, 661, 664, 676, 679, 681, 684, 686, 689, 691, 694, 696, 699, 711, 714, 716, 719, 721, 724, 726, 729, 731, 734, 736, 739, 741, 744, 746, 750, 751, 755, 756, 760, 761, 765, 1090, 1147, 1150, 1164, 1167, 1173, 1176, 1179, 1182, 1249, 1253, 1265, 1269, 1283, 1313, 1317, 1321, 1333, 1336, 1342, 1345, 1355, 1358, 1372, 1375, 1382, 1385, 1387, 1390, 1392, 1393, 1396, 1398, 1401, 1403, 1406, 1408, 1411, 1413, 1416, 1418, 1421, 1422, 1425, 1427, 1430, 1437, 1440, 1442, 1445, 1447, 1450, 1452, 1455, 1457, 1460, 1462, 1465, 1467, 1470, 1472, 1475, 1477, 1480, 1482, 1485, 1487, 1490, 1492, 1496, 1497, 1501, 1502, 1505, 1520, 1524, 1525, 1529, 1530, 1534, 1552, 1553, 1556, 1558, 1561, 1563, 1566, 1568, 1571, 1573, 1576, 1578, 1581, 1583, 1586, 1588, 1591, 1593, 1596, 1598, 1601, 1603, 1606, 1608, 1611, 1613, 1617, 1618, 1622, 1623, 1627, 1628, 1632, 1656, 1657, 1660, 1688, 1689, 1692, 1694, 1697, 1704, 1707, 1709, 1713, 1714, 1715, 1719, 1720, 1724, 1725, 1729, 1730, 1734, 1735, 1736, 1739, 1746, 1749, 1751, 1766, 1769, 1770, 1773, 1774, 1777, 1778, 1781, 1783, 1786, 1787, 1791, 1792, 1796, 1797, 1798, 1801, 1803, 1806, 1816, 1819, 1825], "present": [34, 41, 43, 97, 98, 146, 148, 149, 154, 157, 164, 1816, 1817, 1826], "itself": [34, 42, 43, 63, 143, 146, 157, 158, 168, 180, 181, 1090, 1096, 1270, 1637, 1650, 1818, 1819, 1820, 1825], "cut": [34, 1825], "cloth": 34, "adher": [34, 35, 143, 148, 151, 154, 162, 164, 169, 1815, 1816, 1825], "semant": [34, 164, 169, 450, 711, 714, 1820], "round": [34, 35, 36, 38, 39, 41, 42, 43, 61, 62, 63, 109, 110, 111, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 165, 166, 167, 168, 169, 180, 450, 466, 469, 526, 529, 571, 574, 576, 579, 676, 679, 736, 739, 761, 765, 766, 770, 1809, 1816, 1817, 1818, 1819, 1820, 1821, 1822, 1823, 1824, 1825, 1826], "up": [34, 35, 36, 37, 38, 39, 41, 43, 63, 111, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 165, 166, 167, 168, 169, 180, 181, 1816, 1817, 1818, 1819, 1820, 1821, 1822, 1823, 1824, 1825, 1826], "hopefulli": [34, 35, 36, 38, 39, 41, 42, 43, 45, 94, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 165, 166, 167, 168, 169, 180, 196, 234, 236, 237, 321, 416, 450, 1089, 1090, 1283, 1321, 1392, 1535, 1552, 1633, 1637, 1656, 1661, 1688, 1735, 1751, 1797, 1828, 1831, 1833, 1843, 1855, 1859, 1861, 1867], "paint": [34, 164], "pictur": [34, 41, 164], "how": [34, 36, 37, 39, 40, 41, 42, 43, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 158, 159, 161, 162, 163, 165, 166, 167, 168, 169, 180, 181, 1809, 1815, 1819], "pleas": [34, 35, 36, 38, 39, 41, 42, 43, 45, 94, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 165, 166, 167, 168, 169, 180, 196, 234, 236, 237, 321, 416, 450, 1089, 1090, 1283, 1321, 1392, 1535, 1552, 1633, 1637, 1656, 1661, 1688, 1735, 1751, 1797, 1809, 1816, 1817, 1818, 1819, 1820, 1821, 1822, 1823, 1824, 1825, 1826, 1828, 1831, 1833, 1843, 1855, 1859, 1861, 1867], "reach": [34, 35, 36, 38, 39, 41, 42, 43, 45, 94, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 165, 166, 167, 168, 169, 180, 196, 234, 236, 237, 321, 416, 450, 1089, 1090, 1283, 1321, 1392, 1535, 1552, 1633, 1637, 1650, 1656, 1661, 1688, 1735, 1751, 1797, 1816, 1817, 1818, 1819, 1820, 1821, 1822, 1823, 1824, 1825, 1826, 1828, 1831, 1833, 1843, 1855, 1859, 1861, 1867], "out": [34, 35, 36, 37, 38, 39, 40, 41, 42, 45, 46, 47, 48, 49, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 94, 95, 96, 97, 98, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 180, 196, 198, 201, 204, 207, 209, 212, 214, 217, 219, 222, 224, 227, 229, 232, 234, 236, 237, 239, 240, 242, 244, 249, 251, 252, 253, 256, 258, 259, 261, 264, 266, 267, 270, 272, 275, 277, 278, 290, 293, 295, 296, 298, 301, 303, 307, 308, 312, 313, 315, 316, 320, 321, 328, 331, 338, 341, 416, 441, 445, 450, 451, 454, 456, 459, 461, 464, 466, 469, 471, 474, 476, 479, 481, 484, 486, 489, 491, 494, 496, 499, 501, 504, 506, 509, 511, 514, 516, 519, 521, 524, 526, 529, 531, 534, 536, 539, 541, 544, 546, 549, 551, 554, 556, 559, 561, 564, 566, 569, 571, 574, 576, 579, 581, 584, 586, 589, 591, 594, 596, 599, 601, 604, 606, 609, 611, 614, 616, 619, 621, 624, 626, 629, 631, 634, 636, 639, 641, 644, 646, 649, 651, 654, 656, 659, 661, 664, 666, 669, 671, 674, 676, 679, 681, 684, 686, 689, 691, 694, 696, 699, 701, 704, 706, 709, 711, 714, 716, 719, 721, 724, 726, 729, 731, 734, 736, 739, 741, 744, 746, 750, 751, 755, 756, 760, 761, 765, 766, 770, 1089, 1090, 1097, 1107, 1110, 1112, 1115, 1122, 1125, 1127, 1130, 1132, 1135, 1147, 1150, 1152, 1155, 1214, 1218, 1221, 1223, 1226, 1283, 1285, 1288, 1289, 1292, 1295, 1298, 1300, 1303, 1304, 1307, 1308, 1311, 1313, 1317, 1318, 1321, 1322, 1323, 1326, 1328, 1331, 1333, 1336, 1338, 1340, 1342, 1345, 1347, 1350, 1352, 1353, 1355, 1358, 1360, 1363, 1365, 1368, 1372, 1375, 1377, 1380, 1382, 1385, 1387, 1390, 1392, 1393, 1396, 1398, 1401, 1403, 1406, 1408, 1411, 1413, 1416, 1418, 1421, 1422, 1425, 1427, 1430, 1432, 1435, 1437, 1440, 1442, 1445, 1447, 1450, 1452, 1455, 1457, 1460, 1462, 1465, 1467, 1470, 1472, 1475, 1487, 1490, 1497, 1501, 1502, 1505, 1506, 1509, 1510, 1514, 1515, 1519, 1520, 1524, 1525, 1529, 1530, 1534, 1535, 1536, 1539, 1541, 1542, 1545, 1547, 1550, 1552, 1553, 1556, 1558, 1561, 1563, 1566, 1568, 1571, 1573, 1576, 1578, 1581, 1583, 1586, 1588, 1591, 1593, 1596, 1603, 1606, 1608, 1611, 1613, 1617, 1618, 1622, 1628, 1632, 1633, 1637, 1656, 1657, 1660, 1661, 1662, 1665, 1667, 1670, 1672, 1675, 1677, 1680, 1683, 1686, 1688, 1689, 1692, 1694, 1697, 1699, 1702, 1709, 1713, 1714, 1730, 1734, 1735, 1736, 1739, 1741, 1744, 1746, 1749, 1751, 1752, 1755, 1757, 1760, 1762, 1765, 1766, 1769, 1770, 1773, 1774, 1777, 1778, 1781, 1783, 1786, 1787, 1791, 1792, 1796, 1797, 1798, 1801, 1803, 1806, 1809, 1816, 1817, 1818, 1819, 1820, 1821, 1822, 1823, 1824, 1825, 1826, 1828, 1831, 1833, 1843, 1855, 1859, 1861, 1867], "discord": [34, 35, 36, 38, 39, 41, 42, 43, 45, 94, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 165, 166, 167, 168, 169, 180, 196, 234, 236, 237, 321, 416, 450, 1089, 1090, 1283, 1321, 1392, 1535, 1552, 1633, 1637, 1656, 1661, 1688, 1735, 1751, 1797, 1816, 1817, 1818, 1819, 1820, 1821, 1822, 1823, 1824, 1825, 1826, 1828, 1831, 1833, 1843, 1855, 1859, 1861, 1867], "you": [34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 64, 65, 94, 112, 113, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 180, 181, 196, 234, 236, 237, 321, 416, 450, 1089, 1090, 1147, 1150, 1283, 1321, 1392, 1535, 1552, 1633, 1637, 1656, 1661, 1688, 1735, 1751, 1797, 1808, 1809, 1816, 1817, 1818, 1819, 1820, 1821, 1822, 1823, 1824, 1825, 1826, 1828, 1831, 1833, 1843, 1855, 1859, 1861, 1867], "question": [34, 35, 36, 38, 39, 41, 42, 43, 45, 94, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 165, 166, 167, 168, 169, 180, 181, 196, 234, 236, 237, 321, 416, 450, 1089, 1090, 1283, 1321, 1392, 1535, 1552, 1633, 1637, 1656, 1661, 1688, 1735, 1751, 1797, 1816, 1817, 1818, 1819, 1820, 1821, 1822, 1823, 1824, 1825, 1826, 1828, 1831, 1833, 1843, 1855, 1859, 1861, 1867], "With": [35, 36, 42, 45, 48, 49, 55, 56, 57, 58, 61, 62, 63, 64, 65, 66, 67, 72, 73, 76, 77, 82, 83, 88, 89, 94, 99, 100, 103, 104, 105, 106, 109, 110, 111, 112, 113, 114, 115, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 150, 156, 158, 160, 162, 164, 196, 197, 198, 201, 203, 204, 207, 209, 212, 214, 217, 219, 222, 224, 227, 229, 232, 237, 249, 251, 266, 267, 270, 277, 278, 280, 283, 298, 301, 316, 320, 321, 328, 331, 333, 336, 338, 341, 343, 346, 349, 356, 358, 360, 361, 364, 372, 375, 389, 392, 401, 404, 406, 408, 416, 420, 423, 425, 450, 451, 454, 456, 459, 461, 464, 466, 469, 471, 474, 476, 479, 481, 484, 486, 489, 491, 494, 496, 499, 511, 514, 516, 519, 521, 524, 526, 529, 531, 534, 536, 539, 541, 544, 546, 549, 551, 554, 566, 569, 571, 574, 576, 579, 581, 584, 586, 589, 591, 594, 596, 599, 601, 604, 606, 609, 611, 614, 616, 619, 621, 624, 626, 629, 631, 634, 641, 644, 646, 649, 651, 654, 656, 659, 661, 664, 666, 669, 671, 674, 676, 679, 681, 684, 686, 689, 691, 694, 696, 699, 701, 704, 711, 714, 716, 719, 721, 724, 726, 729, 731, 734, 736, 739, 741, 744, 751, 755, 756, 760, 761, 765, 766, 770, 1090, 1091, 1094, 1106, 1107, 1110, 1112, 1115, 1119, 1121, 1127, 1130, 1132, 1135, 1137, 1139, 1147, 1150, 1152, 1155, 1164, 1167, 1173, 1176, 1179, 1182, 1184, 1187, 1223, 1226, 1239, 1242, 1249, 1253, 1255, 1258, 1260, 1264, 1265, 1269, 1282, 1283, 1285, 1288, 1295, 1298, 1299, 1300, 1303, 1308, 1311, 1313, 1317, 1319, 1321, 1323, 1326, 1333, 1336, 1342, 1345, 1347, 1350, 1355, 1358, 1372, 1375, 1382, 1385, 1387, 1390, 1392, 1393, 1396, 1398, 1401, 1403, 1406, 1408, 1411, 1413, 1416, 1427, 1430, 1437, 1440, 1442, 1445, 1447, 1450, 1457, 1460, 1462, 1465, 1482, 1485, 1492, 1496, 1497, 1501, 1502, 1505, 1510, 1514, 1515, 1519, 1535, 1536, 1539, 1541, 1547, 1550, 1552, 1553, 1556, 1563, 1566, 1568, 1571, 1573, 1576, 1578, 1581, 1583, 1586, 1588, 1591, 1593, 1596, 1598, 1601, 1603, 1606, 1608, 1611, 1613, 1617, 1618, 1622, 1623, 1627, 1637, 1639, 1641, 1644, 1645, 1646, 1647, 1649, 1654, 1655, 1656, 1657, 1660, 1661, 1662, 1665, 1683, 1686, 1688, 1689, 1692, 1694, 1697, 1699, 1702, 1704, 1707, 1709, 1713, 1714, 1715, 1719, 1720, 1724, 1725, 1729, 1735, 1736, 1739, 1741, 1744, 1746, 1749, 1751, 1752, 1755, 1757, 1760, 1762, 1765, 1766, 1769, 1770, 1773, 1774, 1777, 1778, 1781, 1783, 1786, 1787, 1791, 1792, 1796, 1797, 1798, 1801, 1803, 1806, 1819, 1822], "central": [35, 41, 162, 1825], "goal": [35, 41, 1819, 1825], "being": [35, 36, 42, 43, 45, 48, 49, 97, 98, 143, 144, 145, 146, 147, 148, 149, 150, 153, 154, 156, 157, 158, 159, 160, 162, 164, 167, 180, 181, 237, 239, 240, 1090, 1106, 1169, 1233, 1392, 1427, 1430, 1809, 1815, 1817, 1818, 1819, 1820, 1825, 1826], "would": [35, 37, 39, 41, 42, 43, 76, 77, 107, 108, 124, 125, 142, 143, 144, 145, 146, 148, 150, 151, 153, 154, 156, 157, 158, 159, 160, 162, 163, 164, 166, 168, 169, 181, 196, 209, 212, 224, 227, 416, 441, 445, 1552, 1588, 1591, 1809, 1819, 1825], "entir": [35, 36, 41, 42, 43, 88, 89, 90, 91, 97, 98, 112, 113, 136, 137, 138, 139, 143, 144, 146, 148, 150, 157, 158, 159, 160, 162, 164, 167, 168, 169, 181, 416, 440, 1321, 1365, 1368, 1751, 1766, 1769, 1770, 1773, 1774, 1777, 1778, 1781, 1783, 1786, 1787, 1791, 1792, 1796, 1797, 1798, 1801, 1803, 1806, 1819, 1825, 1826], "forgiven": 35, "rais": [35, 43, 63, 64, 65, 76, 77, 80, 81, 90, 91, 97, 98, 111, 112, 113, 124, 125, 128, 129, 138, 139, 143, 145, 152, 153, 157, 158, 164, 166, 321, 338, 341, 450, 561, 564, 696, 699, 1090, 1101, 1104, 1161, 1189, 1192, 1230, 1244, 1247, 1249, 1253, 1270, 1283, 1312, 1318, 1320, 1392, 1442, 1445, 1452, 1455, 1520, 1524, 1552, 1568, 1571, 1588, 1591, 1608, 1611, 1661, 1667, 1670, 1672, 1675, 1677, 1680, 1688, 1704, 1707, 1751, 1766, 1769, 1774, 1777, 1797, 1798, 1801, 1803, 1806], "an": [35, 36, 38, 39, 41, 42, 43, 45, 46, 47, 48, 49, 50, 53, 54, 55, 56, 57, 58, 61, 62, 63, 64, 65, 72, 73, 76, 77, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 97, 98, 99, 100, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 120, 121, 124, 125, 128, 129, 130, 131, 132, 133, 136, 137, 138, 139, 140, 141, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 166, 167, 168, 169, 180, 181, 196, 214, 217, 219, 222, 229, 232, 234, 236, 237, 239, 240, 242, 244, 249, 251, 252, 253, 256, 258, 259, 261, 264, 266, 267, 270, 272, 275, 277, 278, 280, 283, 285, 288, 295, 296, 298, 301, 303, 307, 308, 312, 313, 315, 316, 320, 321, 328, 331, 333, 336, 338, 341, 343, 346, 361, 364, 372, 375, 379, 382, 389, 392, 400, 401, 404, 416, 417, 441, 445, 450, 451, 454, 456, 459, 461, 464, 466, 469, 471, 474, 476, 479, 481, 484, 486, 489, 491, 494, 496, 499, 501, 504, 506, 509, 511, 514, 516, 519, 521, 524, 526, 529, 531, 534, 536, 539, 541, 544, 546, 549, 551, 554, 561, 564, 566, 569, 571, 574, 576, 579, 581, 584, 586, 589, 591, 594, 596, 599, 601, 604, 606, 609, 611, 614, 616, 619, 621, 624, 626, 629, 631, 634, 636, 639, 641, 644, 646, 649, 651, 654, 656, 659, 661, 664, 666, 669, 671, 674, 676, 679, 681, 684, 686, 689, 691, 694, 696, 699, 701, 704, 711, 714, 716, 719, 721, 724, 726, 729, 731, 734, 736, 739, 741, 744, 746, 750, 751, 755, 756, 760, 761, 765, 766, 770, 1089, 1090, 1107, 1110, 1112, 1115, 1140, 1143, 1147, 1150, 1164, 1167, 1173, 1176, 1179, 1182, 1189, 1192, 1195, 1198, 1200, 1203, 1205, 1207, 1208, 1211, 1223, 1226, 1237, 1249, 1253, 1260, 1264, 1265, 1269, 1270, 1282, 1283, 1293, 1312, 1313, 1317, 1320, 1321, 1333, 1336, 1342, 1345, 1355, 1358, 1365, 1368, 1372, 1375, 1382, 1385, 1387, 1390, 1392, 1393, 1396, 1398, 1401, 1403, 1406, 1408, 1411, 1413, 1416, 1418, 1421, 1422, 1425, 1427, 1430, 1437, 1440, 1442, 1445, 1447, 1450, 1452, 1455, 1457, 1460, 1462, 1465, 1467, 1470, 1472, 1475, 1477, 1480, 1482, 1485, 1487, 1490, 1492, 1496, 1497, 1501, 1502, 1505, 1510, 1514, 1520, 1524, 1525, 1529, 1530, 1534, 1535, 1541, 1552, 1553, 1556, 1558, 1561, 1563, 1566, 1568, 1571, 1573, 1576, 1578, 1581, 1583, 1586, 1588, 1591, 1593, 1596, 1598, 1601, 1603, 1606, 1608, 1611, 1613, 1617, 1618, 1622, 1623, 1627, 1628, 1632, 1633, 1637, 1644, 1656, 1657, 1660, 1661, 1667, 1670, 1683, 1686, 1688, 1689, 1692, 1694, 1697, 1704, 1707, 1709, 1713, 1714, 1715, 1719, 1720, 1724, 1725, 1729, 1730, 1734, 1735, 1736, 1739, 1741, 1744, 1746, 1749, 1751, 1752, 1755, 1757, 1760, 1762, 1765, 1766, 1769, 1770, 1773, 1774, 1777, 1778, 1781, 1783, 1786, 1787, 1791, 1792, 1796, 1797, 1798, 1801, 1803, 1806, 1808, 1809, 1815, 1817, 1818, 1819, 1820, 1822, 1823, 1825, 1826, 1828, 1831, 1833, 1843, 1855, 1859, 1861, 1867], "eyebrow": 35, "somehow": 35, "pytorch": [35, 36, 40, 41, 66, 67, 147, 148, 149, 152, 154, 155, 157, 158, 159, 161, 162, 164, 169, 181, 450, 716, 719, 1808, 1809, 1820, 1822, 1823, 1825, 1826], "other": [35, 38, 41, 42, 43, 45, 48, 49, 57, 58, 64, 65, 88, 89, 94, 97, 98, 99, 100, 105, 106, 109, 110, 112, 113, 136, 137, 143, 144, 146, 147, 150, 151, 153, 155, 157, 158, 159, 160, 161, 162, 164, 166, 168, 169, 179, 180, 181, 234, 235, 237, 239, 240, 290, 293, 321, 400, 450, 566, 569, 631, 634, 1090, 1091, 1094, 1096, 1661, 1677, 1680, 1751, 1783, 1786, 1792, 1796, 1808, 1809, 1815, 1817, 1818, 1819, 1825, 1826], "strong": [35, 181, 1819], "industri": [35, 1819, 1821], "back": [35, 42, 43, 63, 76, 77, 111, 124, 125, 144, 148, 156, 163, 181, 1090, 1228, 1271, 1552, 1588, 1591, 1817, 1821], "momentum": 35, "won": [35, 36, 42, 43, 146, 169], "ad": [35, 40, 41, 42, 43, 76, 77, 124, 125, 140, 141, 143, 144, 146, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 168, 181, 1090, 1239, 1242, 1244, 1247, 1392, 1422, 1425, 1427, 1430, 1552, 1568, 1571, 1818, 1819], "just": [35, 36, 42, 43, 88, 89, 143, 145, 148, 150, 151, 155, 156, 157, 158, 159, 160, 164, 166, 167, 181, 1751, 1762, 1765, 1819, 1820, 1825], "problem": [35, 43, 143, 144, 158, 166, 1815, 1821, 1825], "even": [35, 36, 42, 43, 63, 111, 143, 148, 149, 151, 154, 155, 158, 162, 166, 167, 168, 169, 181, 450, 696, 699, 716, 719, 1825], "wors": 35, "rather": [35, 43, 64, 65, 97, 98, 112, 113, 143, 146, 148, 151, 157, 158, 159, 160, 161, 169, 181, 237, 239, 240, 416, 440, 1090, 1195, 1198, 1200, 1203, 1208, 1211, 1815, 1818, 1819], "funni": 35, "comic": 35, "strip": 35, "easi": [35, 42, 43, 146, 155, 159, 160, 162, 1817, 1819, 1825, 1826], "feasibl": [35, 41], "space": [35, 63, 64, 65, 109, 110, 111, 112, 113, 162, 237, 239, 240, 272, 275, 277, 278, 1090, 1140, 1143, 1283, 1312, 1318, 1320], "case": [35, 41, 42, 43, 50, 53, 54, 63, 64, 65, 76, 77, 88, 89, 94, 97, 98, 99, 100, 112, 113, 124, 125, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 166, 168, 169, 181, 237, 280, 283, 416, 420, 435, 446, 449, 450, 451, 454, 456, 459, 461, 464, 466, 469, 471, 474, 476, 479, 481, 484, 486, 489, 521, 524, 526, 529, 531, 534, 536, 539, 561, 564, 566, 569, 571, 574, 621, 624, 626, 629, 631, 634, 636, 639, 641, 644, 651, 654, 676, 679, 696, 699, 711, 714, 716, 719, 721, 724, 726, 729, 731, 734, 736, 739, 751, 755, 756, 760, 761, 765, 1090, 1189, 1192, 1223, 1226, 1321, 1365, 1368, 1392, 1482, 1485, 1552, 1588, 1591, 1637, 1641, 1647, 1751, 1766, 1769, 1770, 1773, 1774, 1777, 1783, 1786, 1787, 1791, 1792, 1796, 1818, 1822], "unlik": [35, 143, 146, 150, 157, 1824, 1826], "charger": 35, "charact": [35, 153], "encod": [35, 64, 65, 112, 113, 167, 1090, 1140, 1143], "instant": [35, 1809], "much": [35, 41, 42, 43, 144, 146, 148, 157, 158, 159, 161, 164, 166, 167, 1817, 1819, 1825, 1826], "doe": [35, 39, 41, 43, 63, 76, 77, 97, 98, 111, 124, 125, 142, 145, 148, 150, 151, 154, 155, 157, 158, 159, 160, 161, 162, 164, 166, 167, 181, 450, 521, 524, 1090, 1189, 1192, 1392, 1418, 1421, 1552, 1598, 1601, 1808, 1815, 1819, 1820, 1826], "mandat": [35, 148, 157, 160, 161], "adopt": [35, 43, 144, 154, 162, 1818, 1819, 1824], "continu": [35, 36, 40, 41, 42, 142, 143, 153, 160, 181, 1819], "own": [35, 36, 42, 143, 148, 151, 152, 158, 161, 164, 181, 1808, 1815, 1818, 1819, 1824, 1825], "signatur": [35, 61, 62, 109, 110, 148, 149, 150, 151, 154, 157, 160, 161, 162, 321, 343, 346, 450, 591, 594, 716, 719, 1392, 1482, 1485, 1751, 1783, 1786, 1816, 1825], "replac": [35, 39, 43, 61, 62, 63, 64, 65, 76, 77, 80, 81, 97, 98, 111, 112, 113, 124, 125, 128, 129, 146, 148, 149, 150, 156, 158, 160, 166, 169, 181, 1090, 1218, 1221, 1223, 1226, 1552, 1553, 1556, 1661, 1662, 1665, 1826], "your": [35, 36, 37, 38, 39, 40, 41, 42, 143, 151, 161, 162, 167, 168, 181, 1809, 1819], "10": [35, 39, 42, 61, 62, 63, 64, 65, 66, 67, 72, 73, 80, 81, 88, 89, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 143, 146, 148, 150, 159, 160, 164, 166, 167, 237, 277, 278, 450, 461, 464, 496, 499, 501, 504, 516, 519, 536, 539, 566, 569, 586, 589, 616, 619, 626, 629, 701, 704, 731, 734, 736, 739, 1090, 1106, 1127, 1130, 1132, 1135, 1147, 1150, 1152, 1155, 1160, 1169, 1179, 1182, 1184, 1187, 1223, 1226, 1233, 1239, 1242, 1274, 1283, 1300, 1303, 1321, 1323, 1326, 1392, 1403, 1406, 1413, 1416, 1437, 1440, 1447, 1450, 1467, 1470, 1492, 1496, 1497, 1501, 1502, 1505, 1552, 1573, 1576, 1598, 1601, 1608, 1611, 1623, 1627, 1637, 1644, 1646, 1649, 1656, 1657, 1660, 1661, 1662, 1665, 1667, 1670, 1688, 1704, 1707, 1714, 1715, 1719, 1735, 1741, 1744, 1751, 1752, 1755, 1757, 1760, 1762, 1765, 1766, 1769, 1774, 1777, 1787, 1791, 1792, 1796, 1824], "100": [35, 36, 63, 109, 110, 111, 112, 113, 160, 167, 168, 169, 181, 237, 277, 278, 450, 516, 519, 736, 739, 1090, 1152, 1155, 1184, 1187, 1223, 1226, 1392, 1437, 1440, 1637, 1644, 1809], "despit": [35, 146, 148, 149, 159, 162, 164, 1816, 1819], "distinct": [35, 42, 146, 151, 157, 158, 163, 1714, 1715, 1719, 1720, 1724, 1725, 1729, 1730, 1734, 1809, 1819], "still": [35, 41, 43, 97, 98, 148, 151, 157, 158, 160, 162, 168, 181, 1392, 1492, 1496, 1809, 1816, 1819, 1825], "believ": [35, 43], "share": [35, 97, 98, 145, 146, 150, 155, 159, 160, 162, 164, 321, 410, 1817, 1818, 1825], "bring": [35, 143, 160, 164, 165, 1808], "benefit": [35, 36, 42, 144, 146, 157, 162, 166, 167, 181, 1817, 1821, 1824], "unrel": [35, 43], "what": [35, 36, 38, 43, 142, 146, 150, 151, 154, 156, 158, 160, 163, 164, 166, 167, 168, 169, 180, 181, 1809, 1815, 1820, 1821, 1824], "again": [35, 36, 43, 145, 146, 150, 157, 158, 160, 161, 162, 167, 169, 181, 1392, 1482, 1485, 1824, 1825], "contrari": 35, "bumpi": 35, "road": 35, "allud": [35, 167], "most": [35, 40, 41, 42, 97, 98, 103, 104, 144, 146, 148, 149, 153, 154, 155, 157, 158, 159, 160, 161, 162, 164, 166, 167, 168, 181, 237, 290, 293, 1392, 1418, 1421, 1422, 1425, 1819, 1820, 1822, 1823, 1825, 1826], "technologi": [35, 1817, 1821], "sector": [35, 61, 62, 109, 110, 450, 461, 464, 476, 479, 491, 494], "full": [35, 36, 43, 72, 73, 118, 119, 148, 151, 154, 158, 160, 162, 164, 181, 237, 321, 361, 364, 450, 586, 589, 616, 619, 1090, 1159, 1171, 1229, 1235, 1272, 1276, 1321, 1347, 1350, 1392, 1457, 1460, 1477, 1480, 1487, 1490, 1492, 1496, 1817, 1819, 1825], "success": 35, "reason": [35, 41, 43, 143, 144, 146, 148, 150, 155, 157, 158, 161, 162, 164, 166, 450, 711, 714, 1825], "build": [35, 37, 38, 42, 147, 148, 155, 163, 165, 168, 169, 181, 1714, 1715, 1719, 1720, 1724, 1725, 1729, 1730, 1734, 1808, 1809, 1817, 1819, 1821, 1824, 1825, 1826], "custom": [35, 147, 152, 159, 160, 168, 1819, 1823, 1824, 1825], "comput": [35, 36, 42, 46, 47, 61, 62, 63, 64, 65, 66, 67, 70, 71, 72, 73, 74, 75, 88, 89, 95, 96, 97, 98, 109, 110, 111, 112, 113, 114, 115, 118, 119, 120, 121, 122, 123, 136, 137, 146, 148, 155, 158, 160, 162, 164, 167, 181, 416, 440, 450, 466, 469, 496, 499, 511, 514, 521, 524, 551, 554, 556, 559, 581, 584, 586, 589, 611, 614, 616, 619, 646, 649, 651, 654, 656, 659, 661, 664, 676, 679, 686, 689, 711, 714, 1090, 1106, 1107, 1110, 1112, 1115, 1283, 1285, 1288, 1293, 1294, 1299, 1312, 1313, 1317, 1318, 1319, 1320, 1321, 1323, 1326, 1328, 1331, 1333, 1336, 1338, 1340, 1342, 1345, 1347, 1350, 1352, 1353, 1355, 1358, 1372, 1375, 1382, 1385, 1392, 1393, 1396, 1398, 1401, 1418, 1421, 1422, 1425, 1427, 1430, 1437, 1440, 1442, 1445, 1447, 1450, 1477, 1480, 1487, 1490, 1492, 1496, 1520, 1524, 1525, 1529, 1535, 1536, 1539, 1541, 1542, 1545, 1547, 1550, 1552, 1568, 1571, 1637, 1644, 1714, 1715, 1719, 1720, 1724, 1725, 1729, 1730, 1734, 1751, 1752, 1755, 1757, 1760, 1762, 1765, 1766, 1769, 1770, 1773, 1774, 1777, 1778, 1781, 1783, 1786, 1787, 1791, 1792, 1796, 1808, 1815, 1817, 1819, 1820, 1822, 1823, 1825], "thank": [35, 167], "interoper": [35, 1816, 1817, 1819, 1822], "compon": [35, 164, 1283, 1312, 1318, 1320, 1815, 1820, 1822], "bio": [35, 42], "hardwar": [35, 42, 45, 48, 49, 162, 1815, 1817, 1818, 1819, 1820, 1821, 1822, 1823, 1824, 1825], "initi": [35, 43, 94, 97, 98, 99, 100, 145, 148, 149, 159, 160, 164, 1321, 1377, 1380, 1819, 1825, 1826], "pcie": 35, "interfac": [35, 166, 169, 181, 1808, 1815, 1816, 1817, 1818, 1819, 1823, 1826], "motherboard": 35, "raid": 35, "storag": [35, 167], "virtual": [35, 38, 39, 43, 1822, 1823], "bluetooth": 35, "wireless": 35, "exchang": [35, 40, 1815, 1817], "btx": 35, "form": [35, 37, 50, 51, 52, 53, 54, 55, 56, 66, 67, 72, 73, 97, 98, 120, 121, 155, 160, 162, 168, 169, 237, 242, 244, 285, 288, 303, 307, 308, 312, 1090, 1096, 1254, 1259, 1321, 1392, 1393, 1396, 1403, 1406, 1413, 1416, 1418, 1421, 1422, 1425, 1427, 1430, 1437, 1440, 1447, 1450, 1452, 1455, 1457, 1460, 1462, 1465, 1472, 1475, 1477, 1480, 1482, 1485, 1487, 1490, 1492, 1496, 1497, 1501, 1510, 1514, 1637, 1639, 1650, 1819, 1820, 1825], "factor": [35, 66, 67, 70, 71, 72, 73, 111, 114, 115, 118, 119, 120, 121, 152, 416, 438, 439, 440, 1283, 1285, 1288, 1289, 1292, 1300, 1303, 1304, 1307, 1321, 1323, 1326, 1328, 1331, 1333, 1336, 1338, 1340, 1342, 1345, 1347, 1350, 1352, 1353, 1355, 1358, 1392, 1393, 1396], "sata": 35, "connect": [35, 42, 168, 169, 1817], "host": [35, 181, 1824], "bu": 35, "adapt": [35, 114, 115, 1283, 1304, 1307], "devic": [35, 43, 45, 48, 49, 55, 56, 60, 80, 81, 97, 98, 103, 104, 108, 111, 112, 113, 128, 129, 142, 145, 148, 152, 155, 156, 159, 160, 161, 162, 164, 169, 181, 237, 239, 240, 242, 244, 252, 253, 256, 258, 259, 266, 267, 270, 272, 275, 277, 278, 285, 288, 290, 293, 295, 296, 298, 301, 303, 307, 308, 312, 313, 315, 316, 320, 417, 418, 419, 420, 421, 422, 423, 425, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 445, 446, 447, 448, 449, 1090, 1097, 1145, 1146, 1661, 1662, 1665, 1667, 1670, 1672, 1675, 1677, 1680, 1808, 1818, 1819, 1821, 1822, 1823, 1824], "html": [35, 39, 61, 62, 109, 110, 151, 321, 343, 346, 450, 591, 594, 716, 719, 1392, 1482, 1485, 1751, 1783, 1786], "enabl": [35, 42, 43, 94, 97, 98, 99, 100, 144, 146, 155, 156, 157, 158, 160, 162, 163, 165, 167, 169, 181, 1283, 1312, 1320, 1808, 1817, 1818, 1819, 1820, 1821, 1822, 1825, 1826], "anyon": [35, 37, 43, 181, 1825], "websit": [35, 143], "tcp": 35, "ip": 35, "node": [35, 97, 98, 112, 113, 146, 158, 1637, 1648, 1649, 1820], "commun": [35, 37, 41, 42, 43, 181, 1809, 1818, 1819, 1821], "network": [35, 146, 155, 164, 168, 180, 1321, 1372, 1375, 1809, 1815, 1817, 1818, 1819, 1823, 1825, 1826], "smtp": 35, "possibl": [35, 37, 41, 42, 43, 76, 77, 124, 125, 143, 146, 147, 148, 150, 151, 157, 158, 159, 160, 162, 164, 167, 180, 181, 1090, 1214, 1552, 1588, 1591, 1751, 1766, 1769, 1774, 1777, 1817, 1819, 1825], "send": [35, 1824], "gmail": 35, "outlook": 35, "pop": [35, 42], "u": [35, 37, 42, 43, 72, 73, 120, 121, 146, 156, 157, 158, 159, 160, 161, 162, 168, 181, 1392, 1393, 1396, 1427, 1430, 1492, 1496, 1637, 1646], "email": 35, "ieee": [35, 236, 321, 361, 364, 450, 466, 469, 566, 569, 631, 634, 676, 679, 711, 714, 736, 739], "754": [35, 236, 321, 361, 364, 450, 466, 469, 566, 569, 631, 634, 676, 679, 711, 714, 736, 739], "allow": [35, 38, 41, 43, 147, 148, 152, 153, 156, 158, 159, 160, 164, 166, 181, 237, 272, 275, 277, 278, 1090, 1214, 1735, 1741, 1744, 1808, 1817, 1819, 1823, 1824], "calcul": [35, 41, 61, 62, 63, 74, 75, 88, 89, 94, 97, 98, 99, 100, 109, 110, 111, 122, 123, 136, 137, 151, 164, 450, 451, 454, 456, 459, 461, 464, 466, 469, 471, 474, 476, 479, 481, 484, 486, 489, 531, 534, 536, 539, 546, 549, 561, 564, 566, 569, 621, 624, 626, 629, 631, 634, 636, 639, 641, 644, 666, 669, 671, 674, 676, 679, 696, 699, 726, 729, 731, 734, 736, 739, 746, 750, 751, 755, 756, 760, 1392, 1427, 1430, 1482, 1485, 1535, 1536, 1539, 1541, 1542, 1545, 1547, 1550, 1751, 1766, 1769, 1770, 1773, 1774, 1777, 1778, 1781, 1783, 1786, 1787, 1791, 1792, 1796], "live": [35, 36, 148, 1815, 1817], "depend": [35, 38, 41, 42, 43, 57, 58, 64, 65, 86, 87, 105, 106, 134, 135, 136, 137, 148, 151, 156, 157, 158, 160, 162, 164, 181, 321, 328, 331, 450, 451, 454, 456, 459, 461, 464, 471, 474, 476, 479, 481, 484, 486, 489, 531, 534, 536, 539, 561, 564, 566, 569, 621, 624, 626, 629, 631, 634, 636, 639, 696, 699, 726, 729, 731, 734, 751, 755, 756, 760, 1090, 1249, 1253, 1392, 1418, 1421, 1422, 1425, 1477, 1480, 1482, 1485, 1487, 1490, 1492, 1496, 1688, 1709, 1713, 1735, 1736, 1739, 1746, 1749, 1817, 1819, 1820], "did": [35, 41, 169, 1825], "aris": [35, 148, 181], "until": [35, 43, 153, 161, 164, 181, 1809, 1826], "substanti": [35, 43, 144, 148, 160, 1819], "innov": 35, "growth": [35, 1822], "usag": [35, 148, 160, 164, 181, 416, 440, 1822], "relev": [35, 41, 42, 43, 146, 147, 148, 150, 159, 160, 167, 1817, 1824, 1825], "area": [35, 61, 62, 109, 110, 157, 179, 450, 461, 464, 476, 479, 491, 494, 1809, 1815], "necess": 35, "parti": [35, 181, 1818, 1819, 1825], "could": [35, 36, 41, 42, 43, 143, 148, 150, 156, 157, 158, 159, 160, 164, 166, 167, 168, 1714, 1715, 1719, 1720, 1724, 1725, 1729, 1730, 1734, 1819, 1824, 1825], "easili": [35, 42, 147, 158, 162, 167, 168, 169, 181, 1809, 1819, 1825, 1826], "engag": [35, 37, 43], "regard": [35, 40, 146, 158, 159, 162], "effect": [35, 41, 66, 67, 88, 89, 114, 115, 136, 137, 144, 146, 151, 154, 157, 162, 181, 237, 280, 283, 1283, 1285, 1288, 1308, 1311, 1751, 1783, 1786, 1792, 1796], "2015": [35, 1819], "sinc": [35, 42, 43, 63, 111, 143, 146, 157, 158, 181, 1819, 1825], "alongsid": 35, "machin": [35, 42, 72, 73, 120, 121, 143, 155, 180, 321, 361, 364, 372, 375, 1392, 1457, 1460, 1472, 1475, 1808, 1817, 1819, 1821, 1822, 1823, 1824, 1825], "frame": [35, 180, 1819], "less": [35, 43, 45, 48, 49, 61, 62, 63, 72, 73, 80, 81, 88, 89, 94, 99, 100, 109, 110, 111, 120, 121, 128, 129, 146, 148, 150, 152, 154, 157, 158, 160, 162, 163, 164, 450, 456, 459, 461, 464, 471, 474, 486, 489, 526, 529, 621, 624, 626, 629, 631, 634, 636, 639, 696, 699, 711, 714, 721, 724, 736, 739, 1392, 1452, 1455, 1457, 1460, 1472, 1475, 1525, 1529, 1661, 1677, 1680, 1751, 1783, 1786, 1792, 1796, 1819, 1821], "matur": [35, 181, 1819], "state": [35, 42, 148, 151, 152, 154, 158, 160, 163, 164, 165, 167, 180, 321, 411, 412, 413, 414, 450, 676, 679, 1090, 1158, 1159, 1171, 1238, 1271, 1273, 1274, 1275, 1321, 1377, 1380, 1809, 1825, 1826], "than": [35, 38, 43, 45, 48, 49, 61, 62, 63, 64, 65, 72, 73, 76, 77, 80, 81, 82, 83, 84, 85, 88, 89, 94, 97, 98, 99, 100, 109, 110, 111, 112, 113, 120, 121, 124, 125, 128, 129, 130, 131, 132, 133, 136, 137, 143, 146, 147, 148, 150, 152, 157, 158, 159, 160, 161, 162, 164, 167, 168, 169, 181, 237, 239, 240, 321, 361, 364, 416, 440, 450, 456, 459, 461, 464, 471, 474, 486, 489, 506, 509, 516, 519, 526, 529, 571, 574, 576, 579, 621, 624, 626, 629, 631, 634, 636, 639, 666, 669, 696, 699, 711, 714, 721, 724, 736, 739, 761, 765, 1090, 1195, 1198, 1200, 1203, 1208, 1211, 1392, 1398, 1401, 1442, 1445, 1452, 1455, 1457, 1460, 1472, 1475, 1525, 1529, 1552, 1553, 1556, 1573, 1576, 1603, 1606, 1661, 1677, 1680, 1688, 1704, 1707, 1714, 1715, 1719, 1720, 1724, 1725, 1729, 1730, 1734, 1751, 1752, 1755, 1757, 1760, 1778, 1781, 1783, 1786, 1787, 1791, 1792, 1796, 1816, 1817, 1818, 1819, 1825, 1826], "preced": [35, 168], "mention": [35, 41, 42, 43, 150, 154, 155, 157, 158, 160, 162, 1819], "aros": 35, "70": [35, 112, 113, 1392, 1467, 1470, 1751, 1762, 1765], "80": [35, 63, 111, 1392, 1467, 1470, 1637, 1649, 1751, 1762, 1765], "90": [35, 61, 62, 63, 109, 110, 111, 450, 521, 524, 541, 544, 701, 704, 716, 719, 1392, 1467, 1470, 1751, 1762, 1765], "effort": [35, 37, 181, 1815, 1819, 1825], "stage": [35, 37, 39, 43, 142, 153, 160, 1809, 1819], "complet": [35, 41, 43, 97, 98, 143, 144, 146, 147, 150, 158, 159, 160, 166, 167, 1392, 1477, 1480, 1817], "natur": [35, 72, 73, 120, 121, 144, 150, 159, 180, 450, 561, 564, 621, 624, 631, 634, 716, 719, 1392, 1482, 1485], "like": [35, 39, 41, 42, 43, 63, 76, 77, 111, 124, 125, 142, 143, 146, 148, 149, 150, 151, 153, 154, 156, 157, 158, 159, 160, 161, 162, 163, 164, 166, 167, 168, 169, 180, 181, 321, 348, 400, 1392, 1418, 1421, 1552, 1588, 1591, 1661, 1677, 1680, 1809, 1819, 1824], "certainli": [35, 1825], "mission": [35, 1809, 1821], "creat": [35, 37, 38, 39, 41, 42, 43, 55, 56, 63, 80, 81, 97, 98, 103, 104, 111, 112, 113, 128, 129, 148, 149, 152, 156, 157, 158, 159, 160, 162, 164, 165, 168, 179, 180, 237, 239, 240, 242, 244, 252, 253, 256, 258, 259, 266, 267, 270, 272, 275, 277, 278, 285, 288, 290, 293, 295, 296, 298, 301, 313, 315, 316, 320, 1090, 1255, 1258, 1282, 1283, 1319, 1661, 1662, 1665, 1667, 1670, 1672, 1675, 1677, 1680, 1683, 1686, 1808, 1809, 1819, 1820, 1825], "At": [35, 41, 42, 143, 158, 160, 161, 1819], "process": [35, 36, 37, 39, 42, 43, 146, 155, 158, 159, 160, 162, 164, 169, 416, 435, 449, 1817, 1818, 1819, 1822, 1823, 1825, 1826], "ourselv": [35, 1825], "lead": [35, 36, 94, 97, 98, 99, 100, 150, 181, 1392, 1477, 1480, 1492, 1496], "quansight": [35, 1825], "compani": [35, 1815], "made": [35, 38, 41, 43, 63, 76, 77, 111, 143, 146, 147, 157, 158, 161, 164, 166, 1819], "organ": [35, 144, 146, 155, 158, 161, 1808], "panda": 35, "scipi": [35, 1821, 1826], "conda": [35, 39, 42, 1821], "dask": [35, 1714, 1715, 1719, 1720, 1724, 1725, 1729, 1730, 1734], "apach": [35, 1821, 1825], "mxnet": [35, 1826], "onnx": [35, 1817, 1825], "scikit": 35, "jupyt": [35, 1821], "aw": 35, "cupi": [35, 1819, 1826], "net": [35, 36, 164, 169], "sympi": 35, "rai": [35, 450, 486, 489], "modin": 35, "spyder": 35, "includ": [35, 41, 43, 55, 56, 63, 64, 65, 82, 83, 88, 89, 90, 91, 97, 98, 109, 110, 111, 112, 113, 120, 121, 130, 131, 136, 137, 138, 139, 143, 144, 145, 146, 148, 149, 150, 151, 152, 153, 154, 155, 157, 158, 159, 160, 161, 162, 164, 180, 181, 237, 239, 240, 242, 244, 272, 275, 285, 288, 1090, 1173, 1176, 1277, 1281, 1392, 1525, 1529, 1637, 1638, 1661, 1677, 1680, 1688, 1694, 1697, 1751, 1766, 1769, 1770, 1773, 1774, 1777, 1778, 1781, 1783, 1786, 1787, 1791, 1792, 1796, 1797, 1798, 1801, 1803, 1806, 1816, 1817, 1819, 1821, 1824, 1825, 1826], "member": [35, 41, 43, 158], "googl": [35, 1809], "octoml": [35, 1825], "einop": [35, 64, 65, 112, 113, 1090, 1122, 1125, 1127, 1130, 1132, 1135], "further": [35, 36, 39, 43, 143, 144, 150, 152, 158, 160, 163, 164, 167, 168, 1809, 1824, 1825], "sponsor": 35, "lg": 35, "electron": 35, "microsoft": [35, 1819, 1824, 1826], "d": [35, 36, 37, 42, 63, 70, 71, 72, 73, 111, 118, 119, 120, 121, 142, 146, 160, 167, 1321, 1323, 1326, 1328, 1331, 1333, 1336, 1338, 1340, 1342, 1345, 1347, 1350, 1352, 1353, 1355, 1358, 1392, 1408, 1411, 1413, 1416, 1447, 1450, 1467, 1470, 1515, 1519, 1637, 1641, 1645, 1646, 1647, 1654, 1655, 1809, 1815], "shaw": 35, "co": [35, 40, 61, 62, 64, 65, 109, 110, 148, 164, 180, 450, 1090, 1140, 1143, 1809], "intel": [35, 1817, 1824], "togeth": [35, 97, 98, 144, 146, 153, 158, 161, 162, 168, 169, 181, 1817, 1819, 1820, 1825], "major": [35, 148, 149, 159, 160, 181, 1688, 1704, 1707, 1816, 1819], "involv": [35, 37, 39, 57, 58, 105, 106, 142, 148, 150, 162, 169, 321, 401, 404, 450, 466, 469, 676, 679, 1819, 1825], "anoth": [35, 41, 42, 43, 146, 148, 155, 156, 158, 159, 160, 162, 164, 166, 169, 237, 261, 264, 321, 333, 336, 343, 346, 1808, 1819, 1825], "promis": 35, "sign": [35, 42, 61, 62, 72, 73, 109, 110, 120, 121, 164, 169, 237, 239, 240, 450, 451, 454, 466, 469, 486, 489, 516, 519, 676, 679, 711, 714, 1392, 1482, 1485, 1714, 1715, 1719, 1720, 1724, 1725, 1729, 1730, 1734, 1751, 1752, 1755, 1757, 1760, 1778, 1781, 1787, 1791], "pursuit": 35, "unif": [35, 37, 166, 1815, 1825], "clearli": [35, 41, 43, 150, 159, 160, 1823], "lot": [35, 36, 148, 156, 160, 181, 1818], "thought": [35, 42, 43, 154, 1817], "care": [35, 43, 158, 162, 169], "attent": [35, 43, 144, 1321, 1382, 1385, 1387, 1390], "gone": [35, 163], "simplifi": [35, 152, 158, 164, 165, 168, 1815, 1817, 1818, 1819, 1822, 1825, 1826], "compat": [35, 45, 48, 49, 61, 62, 72, 73, 76, 77, 82, 83, 88, 89, 90, 91, 94, 99, 100, 109, 110, 120, 121, 124, 125, 130, 131, 136, 137, 138, 139, 145, 154, 158, 159, 161, 164, 181, 321, 338, 341, 450, 466, 469, 486, 489, 496, 499, 506, 509, 511, 514, 516, 519, 521, 524, 546, 549, 551, 554, 576, 579, 586, 589, 611, 614, 616, 619, 641, 644, 646, 649, 656, 659, 661, 664, 676, 679, 686, 689, 696, 699, 711, 714, 746, 750, 766, 770, 1392, 1457, 1460, 1472, 1475, 1487, 1490, 1502, 1505, 1520, 1524, 1525, 1529, 1552, 1588, 1591, 1688, 1694, 1697, 1751, 1766, 1769, 1770, 1773, 1774, 1777, 1778, 1781, 1783, 1786, 1787, 1791, 1792, 1796, 1797, 1798, 1801, 1803, 1806, 1809], "excit": [35, 37, 142, 1809], "complianc": 35, "hope": [35, 181, 1825], "due": [35, 38, 42, 143, 157, 158, 450, 676, 679, 716, 719, 1819], "suit": [35, 42, 142, 143, 147, 160, 167, 180, 1808, 1819, 1825], "some": [35, 36, 41, 42, 43, 97, 98, 114, 115, 143, 144, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 166, 167, 168, 180, 181, 416, 418, 450, 566, 569, 631, 634, 1283, 1285, 1288, 1289, 1292, 1295, 1298, 1300, 1303, 1304, 1307, 1308, 1311, 1321, 1360, 1363, 1365, 1368, 1637, 1649, 1808, 1809, 1815, 1816, 1818, 1819, 1820, 1825, 1826], "motiv": [35, 166], "great": [35, 36, 43, 160, 164, 166, 1825], "convinc": 35, "celebr": 35, "encourag": [35, 180, 181], "foundat": [35, 1822], "mai": [36, 40, 41, 42, 43, 45, 48, 49, 61, 62, 63, 86, 87, 94, 99, 100, 107, 108, 109, 110, 134, 135, 143, 146, 148, 157, 158, 159, 160, 165, 166, 168, 237, 239, 240, 261, 264, 416, 441, 445, 450, 551, 554, 586, 589, 616, 619, 651, 654, 656, 659, 1090, 1119, 1121, 1392, 1482, 1485, 1714, 1715, 1719, 1720, 1724, 1725, 1729, 1730, 1734, 1735, 1736, 1739, 1746, 1749, 1751, 1766, 1769, 1770, 1773, 1774, 1777, 1783, 1786, 1826], "ask": [36, 41, 42, 150, 164, 166, 181], "perfectli": 36, "happi": [36, 42, 181], "abund": 36, "better": [36, 38, 142, 158, 159, 161, 162, 163, 166, 167, 168, 1822], "ll": [36, 37, 42, 43, 150, 157, 167], "give": [36, 38, 42, 43, 142, 145, 150, 151, 154, 160, 321, 400, 1552, 1588, 1591, 1819, 1823], "two": [36, 41, 42, 45, 48, 49, 55, 56, 63, 72, 73, 94, 99, 100, 111, 120, 121, 143, 144, 148, 150, 151, 158, 159, 160, 162, 163, 167, 169, 237, 239, 240, 258, 259, 280, 283, 303, 307, 308, 312, 321, 399, 410, 450, 516, 519, 716, 719, 1090, 1098, 1100, 1392, 1393, 1396, 1403, 1406, 1413, 1416, 1418, 1421, 1422, 1425, 1427, 1430, 1432, 1435, 1437, 1440, 1442, 1445, 1447, 1450, 1452, 1455, 1457, 1460, 1462, 1465, 1467, 1470, 1472, 1475, 1477, 1480, 1482, 1485, 1487, 1490, 1492, 1496, 1497, 1501, 1510, 1514, 1520, 1524, 1552, 1613, 1617, 1714, 1715, 1719, 1720, 1724, 1725, 1729, 1730, 1734, 1809, 1816, 1824], "streamlin": [36, 1822], "workflow": [36, 41, 43, 145, 147, 148, 158, 167, 179, 1808, 1809, 1818, 1825, 1826], "save": [36, 38, 97, 98, 153, 160, 181, 416, 418, 1090, 1172, 1236, 1818], "week": [36, 43, 1809], "let": [36, 38, 64, 65, 88, 89, 112, 113, 146, 148, 149, 150, 151, 152, 158, 159, 160, 161, 162, 164, 166, 167, 168, 169, 1090, 1147, 1150, 1751, 1770, 1773, 1783, 1786, 1787, 1791, 1792, 1796, 1809, 1826], "sai": [36, 42, 156, 166], "deepmind": 36, "releas": [36, 41, 42, 43, 148, 158, 161, 162, 181, 1809, 1819, 1825], "awesom": 36, "paper": 36, "love": 36, "choic": [36, 42, 88, 89, 136, 137, 157, 158, 167, 1751, 1783, 1786, 1792, 1796, 1819], "perceiverio": 36, "happen": [36, 42, 43, 160, 167], "slew": 36, "rush": 36, "f": [36, 37, 39, 43, 63, 76, 77, 111, 124, 125, 142, 146, 153, 164, 167, 1090, 1178, 1194, 1552, 1588, 1591, 1637, 1641, 1645, 1646, 1647, 1654, 1655, 1815], "g": [36, 37, 41, 42, 63, 80, 81, 128, 129, 142, 143, 146, 158, 160, 164, 181, 321, 327, 401, 404, 416, 419, 1637, 1641, 1645, 1647, 1654, 1661, 1667, 1670, 1672, 1675, 1677, 1680, 1714, 1715, 1719, 1720, 1724, 1725, 1729, 1730, 1734, 1751, 1752, 1755, 1757, 1760, 1766, 1769, 1774, 1777, 1778, 1781, 1787, 1791, 1808, 1815], "inevit": [36, 1820], "deviat": [36, 78, 79, 80, 81, 88, 89, 126, 127, 128, 129, 136, 137, 143, 1656, 1657, 1660, 1661, 1672, 1675, 1751, 1783, 1786], "often": [36, 40, 143, 152, 153, 154, 155, 158, 160, 181, 1820, 1823, 1826], "erron": 36, "train": [36, 66, 67, 70, 71, 114, 115, 118, 119, 146, 149, 155, 167, 168, 169, 179, 180, 181, 1283, 1285, 1288, 1289, 1292, 1300, 1303, 1321, 1365, 1368, 1808, 1809, 1817, 1818, 1823, 1825, 1826], "poor": 36, "converg": 36, "perform": [36, 66, 67, 88, 89, 90, 91, 112, 113, 136, 137, 138, 139, 143, 144, 145, 146, 148, 149, 150, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 167, 181, 196, 209, 212, 224, 227, 237, 272, 275, 277, 278, 450, 766, 770, 1090, 1122, 1125, 1127, 1130, 1132, 1135, 1179, 1182, 1184, 1187, 1189, 1192, 1228, 1235, 1321, 1360, 1363, 1365, 1368, 1377, 1380, 1392, 1492, 1496, 1633, 1634, 1635, 1636, 1637, 1645, 1646, 1751, 1752, 1755, 1757, 1760, 1797, 1798, 1801, 1803, 1806, 1816, 1819, 1820, 1821, 1822, 1823, 1824, 1826], "issu": [36, 37, 40, 41, 143, 145, 148, 150, 152, 158, 160, 164, 168, 181], "etc": [36, 41, 42, 43, 55, 56, 80, 81, 92, 93, 112, 113, 128, 129, 140, 141, 143, 144, 146, 147, 148, 150, 152, 154, 158, 159, 160, 161, 164, 166, 167, 181, 237, 272, 275, 277, 278, 290, 293, 1661, 1662, 1665, 1667, 1670, 1672, 1675, 1677, 1680, 1714, 1715, 1719, 1720, 1724, 1725, 1729, 1730, 1734, 1808, 1817, 1819, 1825], "publish": [36, 181], "manag": [36, 37, 157, 181, 1821, 1823], "get": [36, 37, 40, 41, 42, 61, 62, 97, 98, 142, 147, 148, 149, 155, 156, 157, 158, 159, 160, 161, 164, 165, 166, 167, 168, 196, 321, 356, 358, 360, 361, 364, 372, 375, 416, 422, 423, 425, 427, 430, 435, 439, 446, 449, 450, 676, 679, 1090, 1097, 1157, 1158, 1159, 1161, 1162, 1163, 1169, 1171, 1172, 1217, 1238, 1637, 1640, 1808, 1819, 1825], "work": [36, 40, 41, 42, 43, 63, 111, 142, 143, 146, 148, 149, 150, 152, 158, 159, 160, 161, 163, 164, 166, 168, 169, 1816, 1817, 1818, 1819, 1820, 1821, 1822, 1823, 1824, 1825, 1826], "repositori": [36, 38, 39, 42, 43, 142, 143, 147, 153], "pull": [36, 37, 38, 39, 41, 42, 143, 150, 161, 162, 181], "request": [36, 37, 41, 150, 161, 162, 416, 432], "confus": [36, 148, 152, 157, 162, 1808], "do": [36, 41, 42, 43, 63, 64, 65, 97, 98, 111, 143, 144, 145, 146, 148, 149, 150, 151, 154, 155, 156, 157, 158, 159, 161, 162, 164, 166, 167, 168, 169, 181, 450, 711, 714, 1090, 1189, 1192, 1637, 1638, 1648, 1649, 1650, 1808, 1820, 1825, 1826], "don": [36, 41, 42, 43, 92, 93, 140, 141, 148, 159, 160, 168, 181], "expect": [36, 43, 143, 148, 152, 159, 160, 181, 321, 400, 1090, 1097, 1809], "codebas": [36, 37, 142, 148, 157, 158, 160, 161, 163, 416, 438, 439, 1809], "total": [36, 37, 43, 63, 88, 89, 94, 97, 98, 99, 100, 111, 136, 137, 148, 149, 150, 160, 162, 167, 168, 181, 416, 446, 1688, 1704, 1707, 1751, 1783, 1786, 1792, 1796], "hour": [36, 147], "spent": 36, "spin": 36, "off": [36, 42, 163, 1392, 1413, 1416, 1510, 1514, 1825], "test": [36, 40, 41, 61, 62, 63, 90, 91, 109, 110, 111, 138, 139, 142, 148, 150, 152, 153, 156, 158, 161, 181, 321, 379, 382, 389, 392, 450, 591, 594, 596, 599, 601, 604, 606, 609, 1321, 1365, 1368, 1797, 1798, 1801, 1803, 1806, 1819], "discuss": [36, 42, 43, 148, 149, 157, 158, 160, 162, 165, 166, 167, 181, 1809, 1815, 1820], "error": [36, 40, 42, 43, 61, 62, 97, 98, 109, 110, 143, 144, 145, 147, 148, 149, 150, 152, 153, 154, 158, 160, 161, 166, 181, 196, 198, 201, 450, 556, 559, 1392, 1482, 1485, 1497, 1501, 1751, 1766, 1769, 1774, 1777, 1819], "iter": [36, 50, 51, 52, 53, 54, 64, 65, 92, 93, 94, 97, 98, 99, 100, 112, 113, 140, 141, 146, 164, 167, 234, 235, 416, 440, 1090, 1091, 1094, 1214, 1552, 1563, 1566, 1583, 1586, 1618, 1622, 1628, 1632, 1637, 1638, 1639, 1640, 1641, 1643, 1644, 1646, 1647, 1648, 1649, 1650, 1652, 1653, 1655], "address": [36, 41, 43, 143, 144, 164, 1090, 1260, 1264, 1815, 1817, 1819, 1825], "sake": 36, "singl": [36, 41, 42, 43, 63, 80, 81, 97, 98, 109, 110, 128, 129, 143, 146, 150, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 167, 168, 169, 181, 1090, 1265, 1269, 1277, 1281, 1283, 1293, 1661, 1667, 1670, 1672, 1675, 1677, 1680, 1714, 1715, 1719], "multipl": [36, 43, 63, 78, 79, 88, 89, 90, 91, 97, 98, 109, 110, 111, 112, 113, 114, 115, 120, 121, 124, 125, 126, 127, 136, 137, 138, 139, 145, 146, 150, 152, 155, 157, 158, 160, 162, 164, 181, 450, 516, 519, 641, 644, 666, 669, 671, 674, 676, 679, 1090, 1091, 1094, 1214, 1283, 1285, 1288, 1295, 1298, 1300, 1303, 1308, 1311, 1313, 1317, 1321, 1333, 1336, 1342, 1345, 1392, 1393, 1396, 1437, 1440, 1447, 1450, 1552, 1553, 1556, 1568, 1571, 1593, 1596, 1598, 1601, 1656, 1657, 1660, 1688, 1689, 1692, 1694, 1697, 1751, 1766, 1769, 1770, 1773, 1774, 1777, 1778, 1781, 1783, 1786, 1787, 1791, 1792, 1796, 1797, 1798, 1801, 1803, 1806, 1817, 1818, 1819, 1826], "line": [36, 42, 143, 144, 150, 153, 156, 160, 162, 165, 166, 167, 168, 179, 1809, 1822], "convert": [36, 41, 50, 51, 52, 53, 54, 55, 56, 61, 62, 101, 102, 109, 110, 144, 156, 160, 164, 181, 182, 194, 237, 242, 244, 285, 288, 321, 326, 327, 416, 419, 420, 421, 422, 435, 446, 449, 450, 541, 544, 701, 704, 1090, 1228, 1254, 1259, 1260, 1264, 1265, 1269, 1271, 1392, 1530, 1534, 1637, 1639, 1650, 1651, 1808, 1817, 1818, 1825], "directli": [36, 43, 143, 144, 146, 147, 148, 149, 151, 155, 156, 157, 158, 159, 161, 162, 164, 166, 168, 169, 180, 181, 1637, 1650, 1823, 1824, 1825], "graph": [36, 66, 67, 146, 155, 158, 162, 165, 181, 1714, 1715, 1719, 1720, 1724, 1725, 1729, 1730, 1734, 1808, 1815, 1819, 1822], "guarante": [36, 144, 181, 1714, 1715, 1719, 1725, 1729], "turn": [36, 42, 146, 150, 158, 160], "4": [36, 39, 41, 42, 45, 46, 47, 48, 49, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 70, 71, 72, 73, 76, 77, 80, 81, 82, 83, 84, 85, 88, 89, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 145, 146, 150, 160, 164, 166, 167, 168, 169, 196, 198, 201, 204, 207, 209, 212, 214, 217, 224, 227, 237, 249, 251, 267, 270, 277, 278, 280, 283, 298, 301, 316, 320, 321, 333, 336, 338, 341, 343, 346, 356, 358, 361, 364, 384, 387, 389, 392, 401, 404, 416, 423, 425, 427, 434, 438, 450, 451, 454, 466, 469, 471, 474, 476, 479, 481, 484, 486, 489, 496, 499, 511, 514, 516, 519, 521, 524, 526, 529, 531, 534, 536, 539, 541, 544, 546, 549, 551, 554, 571, 574, 576, 579, 581, 584, 586, 589, 596, 599, 601, 604, 611, 614, 616, 619, 621, 624, 626, 629, 631, 634, 641, 644, 661, 664, 666, 669, 671, 674, 676, 679, 681, 684, 686, 689, 691, 694, 696, 699, 701, 704, 711, 714, 716, 719, 721, 724, 726, 729, 731, 734, 736, 739, 741, 744, 746, 750, 751, 755, 756, 760, 761, 765, 766, 770, 1090, 1107, 1110, 1112, 1115, 1119, 1121, 1127, 1130, 1132, 1135, 1140, 1143, 1147, 1150, 1152, 1155, 1160, 1173, 1176, 1179, 1182, 1223, 1226, 1239, 1242, 1255, 1258, 1270, 1282, 1283, 1285, 1288, 1294, 1295, 1298, 1299, 1300, 1303, 1308, 1311, 1313, 1317, 1319, 1321, 1323, 1326, 1333, 1336, 1338, 1340, 1342, 1345, 1352, 1353, 1355, 1358, 1372, 1375, 1377, 1380, 1382, 1385, 1387, 1390, 1392, 1393, 1396, 1403, 1406, 1408, 1411, 1413, 1416, 1427, 1430, 1437, 1440, 1442, 1445, 1447, 1450, 1457, 1460, 1462, 1465, 1467, 1470, 1472, 1475, 1482, 1485, 1492, 1496, 1497, 1501, 1502, 1505, 1510, 1514, 1515, 1519, 1535, 1541, 1547, 1550, 1552, 1553, 1556, 1558, 1561, 1563, 1566, 1568, 1571, 1573, 1576, 1578, 1581, 1583, 1586, 1588, 1591, 1593, 1596, 1598, 1601, 1603, 1606, 1608, 1611, 1613, 1617, 1618, 1622, 1623, 1627, 1637, 1639, 1641, 1644, 1645, 1646, 1647, 1649, 1654, 1655, 1656, 1657, 1660, 1661, 1662, 1665, 1672, 1675, 1677, 1680, 1683, 1686, 1688, 1689, 1692, 1694, 1697, 1699, 1702, 1704, 1707, 1709, 1713, 1714, 1715, 1719, 1720, 1724, 1725, 1729, 1735, 1736, 1739, 1741, 1744, 1746, 1749, 1751, 1752, 1755, 1757, 1760, 1762, 1765, 1766, 1769, 1770, 1773, 1774, 1777, 1778, 1781, 1783, 1786, 1787, 1791, 1797, 1798, 1801, 1803, 1806, 1809, 1819, 1825, 1826], "step": [36, 38, 39, 41, 42, 43, 63, 66, 67, 103, 104, 111, 114, 115, 144, 145, 146, 148, 149, 150, 158, 160, 164, 167, 168, 169, 180, 237, 239, 240, 272, 275, 277, 278, 1283, 1285, 1288, 1289, 1292, 1295, 1298, 1300, 1303, 1304, 1307, 1308, 1311, 1633, 1634, 1635, 1636, 1809, 1819], "take": [36, 37, 41, 42, 43, 63, 76, 77, 88, 89, 111, 124, 125, 143, 146, 147, 148, 149, 150, 151, 157, 158, 159, 160, 162, 164, 166, 168, 169, 181, 237, 290, 293, 450, 521, 524, 1552, 1588, 1591, 1809, 1816, 1817, 1825], "few": [36, 40, 41, 43, 146, 148, 149, 154, 155, 157, 160, 162, 164, 165, 166, 167, 168, 179, 1809, 1819, 1821], "second": [36, 42, 45, 48, 49, 61, 62, 63, 66, 67, 72, 73, 80, 81, 84, 85, 94, 99, 100, 109, 110, 111, 114, 115, 120, 121, 132, 133, 143, 148, 150, 157, 158, 160, 166, 321, 399, 410, 450, 466, 469, 496, 499, 506, 509, 511, 514, 516, 519, 521, 524, 551, 554, 576, 579, 586, 589, 611, 614, 616, 619, 641, 644, 646, 649, 656, 659, 661, 664, 676, 679, 686, 689, 696, 699, 746, 750, 1090, 1098, 1100, 1169, 1233, 1274, 1283, 1285, 1288, 1289, 1292, 1300, 1303, 1392, 1398, 1401, 1413, 1416, 1418, 1421, 1422, 1425, 1432, 1435, 1442, 1445, 1467, 1470, 1477, 1480, 1482, 1485, 1492, 1496, 1502, 1505, 1520, 1524, 1552, 1608, 1611, 1613, 1617, 1633, 1635, 1637, 1639, 1714, 1715, 1719, 1720, 1724, 1725, 1729, 1824], "automat": [36, 41, 42, 43, 142, 146, 147, 148, 153, 155, 162, 163, 165, 168, 169, 1808, 1809, 1819, 1822, 1826], "convers": [36, 41, 51, 52, 53, 54, 61, 62, 102, 156, 163, 165, 169, 180, 181, 1090, 1228, 1235, 1808, 1809, 1818, 1825], "everyon": [36, 37, 43, 181], "regardless": [36, 37, 97, 98, 148, 166, 169, 234, 235], "wouldn": 36, "nice": [36, 160, 1819], "write": [36, 39, 40, 41, 43, 45, 46, 47, 48, 49, 55, 56, 57, 58, 61, 62, 63, 64, 65, 66, 67, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 88, 89, 90, 91, 95, 96, 97, 98, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 134, 135, 136, 137, 138, 139, 142, 143, 145, 148, 150, 151, 155, 157, 158, 159, 161, 164, 166, 169, 196, 198, 201, 204, 207, 209, 212, 214, 217, 219, 222, 224, 227, 229, 232, 237, 239, 240, 242, 244, 249, 251, 252, 253, 256, 258, 259, 261, 264, 266, 267, 270, 272, 275, 277, 278, 290, 293, 295, 296, 298, 301, 303, 307, 308, 312, 313, 315, 316, 320, 321, 328, 331, 338, 341, 416, 441, 445, 450, 451, 454, 456, 459, 461, 464, 466, 469, 471, 474, 476, 479, 481, 484, 486, 489, 491, 494, 496, 499, 501, 504, 506, 509, 511, 514, 516, 519, 521, 524, 526, 529, 531, 534, 536, 539, 541, 544, 546, 549, 551, 554, 556, 559, 561, 564, 566, 569, 571, 574, 576, 579, 581, 584, 586, 589, 591, 594, 596, 599, 601, 604, 606, 609, 611, 614, 621, 624, 626, 629, 631, 634, 636, 639, 641, 644, 646, 649, 651, 654, 656, 659, 661, 664, 666, 669, 671, 674, 676, 679, 681, 684, 686, 689, 691, 694, 696, 699, 701, 704, 706, 709, 711, 714, 716, 719, 721, 724, 726, 729, 731, 734, 736, 739, 741, 744, 746, 750, 751, 755, 756, 760, 761, 765, 766, 770, 1090, 1107, 1110, 1112, 1115, 1122, 1125, 1127, 1130, 1132, 1135, 1147, 1150, 1152, 1155, 1218, 1221, 1223, 1226, 1283, 1285, 1288, 1289, 1292, 1295, 1298, 1300, 1303, 1304, 1307, 1308, 1311, 1313, 1317, 1321, 1323, 1326, 1328, 1331, 1333, 1336, 1338, 1340, 1342, 1345, 1347, 1350, 1352, 1353, 1355, 1358, 1360, 1363, 1365, 1368, 1372, 1375, 1382, 1385, 1387, 1390, 1392, 1393, 1396, 1398, 1401, 1403, 1406, 1408, 1411, 1413, 1416, 1427, 1430, 1432, 1435, 1437, 1440, 1442, 1445, 1447, 1450, 1457, 1460, 1462, 1465, 1467, 1470, 1472, 1475, 1487, 1490, 1497, 1501, 1502, 1505, 1510, 1514, 1515, 1519, 1520, 1524, 1525, 1529, 1530, 1534, 1535, 1536, 1539, 1541, 1542, 1545, 1547, 1550, 1552, 1553, 1556, 1558, 1561, 1563, 1566, 1568, 1571, 1573, 1576, 1578, 1581, 1583, 1586, 1588, 1591, 1593, 1596, 1603, 1606, 1608, 1611, 1613, 1617, 1618, 1622, 1628, 1632, 1656, 1657, 1660, 1661, 1662, 1665, 1667, 1670, 1672, 1675, 1677, 1680, 1683, 1686, 1688, 1699, 1702, 1709, 1713, 1714, 1730, 1734, 1735, 1736, 1739, 1741, 1744, 1746, 1749, 1751, 1752, 1755, 1757, 1760, 1762, 1765, 1766, 1769, 1770, 1773, 1774, 1777, 1778, 1781, 1783, 1786, 1787, 1791, 1792, 1796, 1797, 1798, 1801, 1803, 1806, 1819, 1826], "onc": [36, 41, 42, 43, 80, 81, 128, 129, 146, 148, 149, 150, 158, 160, 162, 164, 167, 181, 416, 440, 1392, 1418, 1421, 1422, 1425, 1427, 1430, 1437, 1440, 1492, 1496, 1661, 1662, 1665], "know": [36, 43, 159, 160, 161, 1714, 1715, 1719, 1720, 1724, 1725, 1729, 1730, 1734, 1820], "among": [36, 97, 98, 160, 162, 1819], "frantic": 36, "port": 36, "lucid": 36, "honk": 36, "improv": [36, 43, 148, 154, 155, 162, 164, 1808, 1817, 1819, 1821, 1822], "understand": [36, 38, 39, 40, 41, 42, 43, 142, 143, 150, 151, 154, 159, 162, 163, 1815, 1825], "pattern": [36, 64, 65, 112, 113, 148, 151, 1090, 1122, 1125, 1127, 1130, 1132, 1135], "hasn": 36, "chang": [36, 38, 39, 41, 42, 43, 45, 46, 47, 48, 49, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 95, 96, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 143, 145, 146, 147, 148, 150, 151, 158, 160, 161, 162, 164, 168, 181, 1552, 1588, 1591, 1637, 1639, 1650, 1809, 1822, 1825], "now": [36, 39, 42, 143, 145, 146, 148, 153, 154, 156, 158, 159, 160, 161, 162, 166, 167, 169, 180, 181, 237, 277, 278, 298, 301, 316, 320, 1819], "spend": [36, 1819], "torchvis": 36, "probabl": [36, 80, 81, 128, 129, 160, 1321, 1360, 1363, 1365, 1368, 1661, 1662, 1665], "sonnet": 36, "about": [36, 40, 41, 42, 43, 143, 147, 148, 154, 159, 160, 161, 162, 163, 164, 166, 167, 168, 169, 181, 321, 361, 364, 372, 375, 1820, 1821, 1824], "next": [36, 38, 41, 42, 43, 63, 111, 145, 150, 151, 156, 158, 161, 165, 166, 167, 321, 361, 364, 1809, 1819, 1821], "everyth": [36, 41, 43, 150, 158, 159, 160, 161, 165, 181], "zero": [36, 55, 56, 57, 58, 61, 62, 63, 66, 67, 72, 73, 76, 77, 82, 83, 88, 89, 90, 91, 103, 104, 105, 106, 109, 110, 111, 114, 115, 120, 121, 128, 129, 130, 131, 136, 137, 138, 139, 144, 146, 148, 149, 150, 154, 156, 159, 164, 167, 168, 196, 204, 207, 214, 217, 237, 249, 251, 252, 258, 259, 277, 278, 280, 283, 290, 293, 298, 301, 303, 307, 308, 312, 316, 320, 321, 328, 331, 333, 336, 450, 456, 459, 461, 464, 466, 469, 471, 474, 476, 479, 481, 484, 486, 489, 491, 494, 506, 509, 516, 519, 531, 534, 536, 539, 541, 544, 566, 569, 571, 574, 591, 594, 596, 599, 601, 604, 606, 609, 631, 634, 651, 654, 656, 659, 666, 669, 671, 674, 676, 679, 681, 684, 686, 689, 691, 694, 696, 699, 701, 704, 711, 714, 716, 719, 726, 729, 736, 739, 741, 744, 751, 755, 756, 760, 761, 765, 766, 770, 1090, 1112, 1115, 1214, 1283, 1285, 1288, 1289, 1292, 1300, 1303, 1304, 1307, 1308, 1311, 1313, 1317, 1321, 1360, 1363, 1365, 1368, 1372, 1375, 1387, 1390, 1392, 1393, 1396, 1403, 1406, 1427, 1430, 1437, 1440, 1442, 1445, 1447, 1450, 1452, 1455, 1457, 1460, 1462, 1465, 1472, 1475, 1482, 1485, 1520, 1524, 1525, 1529, 1552, 1563, 1566, 1568, 1571, 1573, 1576, 1578, 1581, 1593, 1596, 1628, 1632, 1656, 1657, 1660, 1661, 1667, 1670, 1672, 1675, 1677, 1680, 1688, 1689, 1692, 1694, 1697, 1699, 1702, 1704, 1707, 1714, 1715, 1719, 1720, 1724, 1725, 1729, 1730, 1734, 1735, 1746, 1749, 1751, 1752, 1755, 1757, 1760, 1766, 1769, 1770, 1773, 1774, 1777, 1778, 1781, 1783, 1786, 1787, 1791, 1792, 1796, 1797, 1798, 1801, 1803, 1806, 1809, 1818], "need": [36, 38, 39, 41, 42, 43, 64, 65, 76, 77, 112, 113, 124, 125, 143, 144, 146, 148, 150, 151, 152, 155, 157, 158, 159, 161, 162, 164, 166, 167, 180, 181, 1090, 1107, 1110, 1112, 1115, 1392, 1418, 1421, 1552, 1553, 1556, 1637, 1649, 1815, 1819, 1820, 1821, 1825], "said": 36, "high": [36, 41, 80, 81, 128, 129, 158, 162, 167, 1661, 1667, 1670, 1677, 1680, 1808, 1815, 1816, 1817, 1818, 1819, 1823, 1825, 1826], "level": [36, 37, 41, 43, 146, 155, 158, 162, 163, 164, 167, 168, 169, 181, 1808, 1815, 1816, 1817, 1818, 1819, 1820, 1821, 1823, 1824, 1825, 1826], "optim": [36, 66, 67, 114, 115, 157, 165, 167, 169, 180, 1090, 1097, 1283, 1308, 1311, 1633, 1634, 1635, 1636, 1809, 1817, 1818, 1819, 1820, 1821, 1822, 1823, 1826], "trainer": [36, 179, 181, 1809, 1826], "statu": [36, 41, 147], "quo": 36, "kera": [36, 1825], "dopamin": 36, "ignit": 36, "catalyst": 36, "lightn": 36, "fastai": 36, "haiku": [36, 169, 1819], "flax": [36, 169, 181, 1819], "trax": [36, 169], "objax": [36, 169], "idea": [36, 38, 158, 161, 165, 180, 1818], "fulli": [36, 144, 148, 154, 157, 162, 164, 165, 166, 167, 168, 169, 181, 1817, 1818, 1819, 1825, 1826], "offer": [36, 42, 158, 168, 1819, 1825, 1826], "strongli": [37, 42, 1825, 1826], "welcom": [37, 42, 43], "absolut": [37, 42, 45, 48, 49, 61, 62, 63, 72, 73, 97, 98, 109, 110, 111, 120, 121, 162, 450, 451, 454, 1392, 1447, 1450, 1452, 1455, 1457, 1460, 1482, 1485], "skill": [37, 1821], "whether": [37, 41, 42, 50, 51, 52, 53, 54, 55, 56, 57, 58, 61, 62, 63, 64, 65, 66, 67, 76, 77, 80, 81, 88, 89, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 118, 119, 120, 121, 122, 123, 124, 125, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 146, 148, 150, 154, 157, 158, 160, 161, 162, 196, 198, 201, 234, 235, 237, 242, 244, 321, 328, 331, 350, 351, 352, 354, 355, 356, 358, 366, 367, 369, 370, 378, 379, 382, 384, 387, 389, 392, 394, 397, 399, 415, 416, 422, 423, 425, 428, 429, 431, 432, 435, 436, 440, 447, 449, 450, 601, 604, 606, 609, 666, 669, 671, 674, 711, 714, 1090, 1091, 1094, 1098, 1100, 1119, 1121, 1137, 1139, 1140, 1143, 1145, 1146, 1163, 1164, 1167, 1171, 1173, 1176, 1178, 1189, 1192, 1194, 1195, 1198, 1200, 1203, 1205, 1207, 1208, 1211, 1214, 1228, 1229, 1232, 1234, 1235, 1237, 1249, 1253, 1260, 1264, 1273, 1276, 1277, 1281, 1283, 1289, 1292, 1293, 1295, 1298, 1300, 1303, 1304, 1307, 1308, 1311, 1312, 1313, 1317, 1320, 1321, 1360, 1363, 1365, 1368, 1392, 1422, 1425, 1427, 1430, 1552, 1588, 1591, 1623, 1627, 1633, 1634, 1635, 1636, 1637, 1638, 1639, 1644, 1648, 1649, 1650, 1651, 1661, 1662, 1665, 1751, 1752, 1755, 1757, 1760, 1797, 1798, 1801, 1803, 1806], "veteran": 37, "beginn": [37, 1819], "aspect": [37, 167, 1809, 1819], "guid": [37, 41, 42, 43, 153, 158, 1809, 1825], "through": [37, 40, 41, 43, 63, 111, 142, 145, 146, 150, 155, 156, 157, 158, 159, 160, 162, 163, 164, 167, 168, 169, 180, 450, 486, 489, 1637, 1641, 1647, 1817, 1819, 1820, 1821], "journei": [37, 1809], "inclus": [37, 63, 111, 145, 157, 162, 237, 239, 240, 1661, 1667, 1670], "big": [37, 181, 1819], "team": [37, 41, 42, 43, 158, 1821], "board": 37, "contributor": [37, 42, 43, 158, 163, 1809, 1819], "split": [37, 43, 63, 76, 77, 97, 98, 111, 124, 125, 163, 164, 181, 416, 438, 439, 440, 1090, 1214, 1321, 1382, 1385, 1552, 1809, 1826], "section": [37, 38, 40, 41, 43, 63, 111, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 167, 168, 1714, 1715, 1719, 1720, 1724, 1725, 1729, 1730, 1734, 1815, 1822, 1825], "below": [37, 39, 41, 42, 55, 56, 136, 137, 142, 143, 146, 147, 148, 149, 150, 153, 155, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 180, 237, 303, 307, 308, 312, 450, 606, 609, 1392, 1413, 1416, 1510, 1514, 1809, 1815, 1817, 1822, 1824], "best": [37, 40, 41, 42, 43, 142, 148, 153, 160, 161, 1090, 1214, 1822, 1823], "go": [37, 38, 41, 42, 43, 142, 145, 148, 150, 158, 159, 160, 161, 163, 167, 181, 1637, 1638, 1639, 1648, 1649, 1650, 1815, 1819, 1820, 1824, 1826], "start": [37, 38, 39, 41, 42, 43, 97, 98, 103, 104, 142, 147, 148, 150, 151, 154, 158, 160, 162, 163, 164, 166, 167, 168, 180, 181, 237, 239, 240, 272, 275, 277, 278, 416, 418, 1819, 1825], "finish": [37, 41, 42, 142, 1809], "dive": [37, 40, 41, 43, 143, 146, 148, 159, 163, 166, 167, 181, 1809, 1825], "right": [37, 42, 43, 72, 73, 94, 97, 98, 99, 100, 120, 121, 142, 143, 150, 162, 167, 450, 506, 509, 516, 519, 1392, 1492, 1496, 1515, 1519, 1735, 1741, 1744], "environ": [37, 38, 39, 43, 180, 1819, 1821], "basic": [37, 39, 41, 150, 160], "fork": [37, 42, 143, 1090, 1215], "doc": [37, 40, 41, 150, 151, 154, 160, 164, 167, 168, 450, 716, 719, 1809], "document": [37, 40, 43, 76, 77, 148, 150, 158, 159, 160, 167, 169, 1090, 1282], "local": [37, 38, 39, 42, 143, 155, 159, 160], "task": [37, 43, 158, 159, 180, 1633, 1634, 1635, 1636, 1809, 1819, 1825, 1826], "help": [37, 38, 41, 42, 144, 145, 146, 148, 150, 156, 158, 160, 161, 162, 166, 167, 168, 179, 1090, 1096, 1751, 1787, 1791, 1808, 1809, 1815, 1819, 1821, 1825], "appli": [37, 41, 42, 43, 45, 46, 47, 48, 49, 50, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 95, 96, 97, 98, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 166, 167, 168, 169, 179, 181, 196, 198, 201, 204, 207, 209, 212, 214, 217, 219, 222, 224, 227, 229, 232, 321, 401, 404, 1090, 1122, 1125, 1127, 1130, 1132, 1135, 1283, 1300, 1303, 1304, 1307, 1321, 1372, 1375, 1382, 1385, 1387, 1390, 1392, 1457, 1460, 1472, 1475, 1535, 1536, 1539, 1541, 1542, 1545, 1547, 1550, 1552, 1558, 1561, 1608, 1611, 1633, 1634, 1635, 1637, 1644, 1647, 1650, 1651, 1656, 1657, 1660, 1751, 1757, 1760, 1808, 1809, 1820], "resourc": [37, 41], "video": [37, 42, 43, 143, 144, 145, 146, 148, 149, 150, 151, 153, 154, 155, 156, 157, 158, 160, 161, 162, 1817], "contribut": [38, 40, 41, 42, 43, 158, 164, 1823], "toward": [38, 42, 63, 76, 77, 124, 125, 161, 164, 450, 766, 770, 1552, 1593, 1596, 1815, 1819], "requir": [38, 39, 41, 42, 63, 111, 144, 147, 148, 149, 150, 151, 152, 154, 156, 158, 159, 160, 161, 162, 164, 166, 181, 234, 235, 450, 736, 739, 1392, 1418, 1421, 1422, 1425, 1427, 1430, 1552, 1608, 1611, 1819, 1825], "slightli": [38, 146, 158, 164, 168], "more": [38, 40, 41, 43, 63, 76, 77, 84, 85, 111, 124, 125, 132, 133, 142, 143, 144, 145, 146, 147, 148, 150, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 169, 180, 181, 237, 239, 240, 321, 333, 336, 450, 566, 569, 631, 634, 1392, 1442, 1445, 1482, 1485, 1552, 1573, 1576, 1714, 1715, 1719, 1720, 1724, 1725, 1729, 1730, 1734, 1809, 1817, 1818, 1819, 1820, 1821, 1822, 1825, 1826], "complex": [38, 41, 148, 150, 160, 162, 167, 168, 169, 181, 450, 606, 609, 1090, 1239, 1242, 1392, 1418, 1421, 1422, 1425, 1427, 1430, 1492, 1496, 1808, 1815, 1817, 1819, 1821, 1825, 1826], "setup": [38, 42, 43], "alon": [38, 160, 416, 435, 449], "instanc": [38, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 143, 144, 148, 150, 151, 154, 155, 156, 157, 160, 167, 168, 169, 182, 194, 196, 219, 222, 224, 227, 229, 232, 237, 239, 240, 242, 244, 249, 251, 252, 253, 256, 258, 259, 261, 264, 266, 267, 270, 272, 275, 277, 278, 280, 283, 295, 296, 298, 301, 303, 307, 308, 312, 313, 315, 316, 320, 321, 328, 331, 343, 346, 361, 364, 379, 382, 389, 392, 416, 417, 437, 450, 451, 454, 456, 459, 461, 464, 466, 469, 471, 474, 476, 479, 481, 484, 486, 489, 491, 494, 496, 499, 501, 504, 506, 509, 516, 519, 521, 524, 526, 529, 531, 534, 536, 539, 546, 549, 551, 554, 566, 569, 571, 574, 576, 579, 581, 584, 586, 589, 591, 594, 596, 599, 601, 604, 606, 609, 616, 619, 626, 629, 631, 634, 636, 639, 641, 644, 646, 649, 651, 654, 656, 659, 661, 664, 676, 679, 681, 684, 686, 689, 691, 694, 696, 699, 711, 714, 716, 719, 721, 724, 726, 729, 731, 734, 736, 739, 741, 744, 746, 750, 751, 755, 756, 760, 761, 765, 1090, 1147, 1150, 1164, 1167, 1173, 1176, 1179, 1182, 1189, 1192, 1234, 1249, 1253, 1265, 1269, 1283, 1313, 1317, 1321, 1333, 1336, 1342, 1345, 1347, 1350, 1355, 1358, 1372, 1375, 1382, 1385, 1387, 1390, 1392, 1393, 1396, 1398, 1401, 1403, 1406, 1408, 1411, 1413, 1416, 1418, 1421, 1422, 1425, 1427, 1430, 1437, 1440, 1442, 1445, 1447, 1450, 1452, 1455, 1457, 1460, 1462, 1465, 1467, 1470, 1472, 1475, 1477, 1480, 1482, 1485, 1487, 1490, 1492, 1496, 1497, 1501, 1502, 1505, 1520, 1524, 1525, 1529, 1530, 1534, 1535, 1536, 1539, 1541, 1552, 1553, 1556, 1558, 1561, 1563, 1566, 1568, 1571, 1573, 1576, 1578, 1581, 1583, 1586, 1588, 1591, 1593, 1596, 1598, 1601, 1603, 1606, 1608, 1611, 1613, 1617, 1618, 1622, 1623, 1627, 1628, 1632, 1656, 1657, 1660, 1688, 1689, 1692, 1694, 1697, 1704, 1707, 1709, 1713, 1714, 1715, 1719, 1720, 1724, 1725, 1729, 1730, 1734, 1735, 1736, 1739, 1746, 1749, 1751, 1766, 1769, 1770, 1773, 1774, 1777, 1778, 1781, 1783, 1786, 1787, 1791, 1792, 1796, 1797, 1798, 1801, 1803, 1806, 1808, 1820], "mech": 38, "vision": [38, 179, 1809, 1815, 1825], "demo": [38, 180, 1809], "util": [38, 91, 139, 149, 152, 161, 416, 427, 1798, 1801, 1803, 1806, 1817, 1825, 1826], "thu": [38, 41, 152, 158, 450, 516, 519, 696, 699, 711, 714, 1392, 1418, 1421, 1422, 1425], "relat": [38, 40, 42, 43, 153, 158, 160, 161, 162, 180, 416, 417, 1816, 1817, 1818, 1819, 1820, 1821, 1822, 1823, 1824, 1825, 1826], "folder": [38, 39, 42, 43, 143, 155, 158, 160, 161], "To": [38, 39, 42, 143, 146, 148, 150, 152, 153, 155, 158, 159, 160, 161, 167, 168, 169, 1090, 1230, 1231, 1233, 1236, 1809], "grasp": [38, 158], "directori": [38, 39, 41, 42, 43, 147, 158, 160, 416, 418, 1090, 1172, 1236], "tree": [38, 39, 148], "place": [38, 40, 43, 50, 52, 54, 55, 56, 61, 62, 63, 64, 65, 72, 73, 76, 77, 97, 98, 103, 104, 107, 108, 109, 110, 111, 112, 113, 124, 125, 128, 129, 142, 143, 146, 149, 150, 151, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 169, 237, 239, 240, 242, 244, 252, 253, 256, 258, 259, 261, 264, 266, 267, 270, 272, 275, 277, 278, 280, 283, 285, 288, 295, 296, 298, 301, 303, 307, 308, 312, 313, 315, 316, 320, 321, 343, 346, 379, 382, 389, 392, 416, 441, 445, 450, 451, 454, 456, 459, 461, 464, 466, 469, 471, 474, 476, 479, 481, 484, 486, 489, 491, 494, 496, 499, 501, 504, 506, 509, 516, 519, 521, 524, 526, 529, 531, 534, 536, 539, 546, 549, 551, 554, 566, 569, 571, 574, 576, 579, 581, 584, 586, 589, 591, 594, 596, 599, 601, 604, 606, 609, 616, 619, 626, 629, 631, 634, 636, 639, 641, 644, 646, 649, 651, 654, 656, 659, 661, 664, 676, 679, 681, 684, 686, 689, 691, 694, 696, 699, 711, 714, 716, 719, 721, 724, 726, 729, 731, 734, 736, 739, 741, 744, 746, 750, 751, 755, 756, 760, 761, 765, 1090, 1147, 1150, 1164, 1167, 1173, 1176, 1179, 1182, 1184, 1187, 1189, 1192, 1249, 1253, 1265, 1269, 1283, 1313, 1317, 1321, 1333, 1336, 1342, 1345, 1355, 1358, 1372, 1375, 1382, 1385, 1387, 1390, 1392, 1393, 1396, 1398, 1401, 1403, 1406, 1408, 1411, 1413, 1416, 1418, 1421, 1422, 1425, 1427, 1430, 1437, 1440, 1442, 1445, 1447, 1450, 1452, 1455, 1457, 1460, 1462, 1465, 1467, 1470, 1472, 1475, 1477, 1480, 1482, 1485, 1487, 1490, 1492, 1496, 1497, 1501, 1502, 1505, 1520, 1524, 1525, 1529, 1530, 1534, 1552, 1553, 1556, 1558, 1561, 1563, 1566, 1568, 1571, 1573, 1576, 1578, 1581, 1583, 1586, 1588, 1591, 1593, 1596, 1598, 1601, 1603, 1606, 1608, 1611, 1613, 1617, 1618, 1622, 1623, 1627, 1628, 1632, 1656, 1657, 1660, 1688, 1689, 1692, 1694, 1697, 1704, 1707, 1709, 1713, 1714, 1715, 1719, 1720, 1724, 1725, 1729, 1730, 1734, 1735, 1736, 1739, 1746, 1749, 1751, 1766, 1769, 1770, 1773, 1774, 1777, 1778, 1781, 1783, 1786, 1787, 1791, 1792, 1796, 1797, 1798, 1801, 1803, 1806, 1808, 1821], "dir": [38, 167], "clone": [38, 39, 43], "mutual": [38, 146, 155], "git": [38, 40, 42, 43, 143, 160], "http": [38, 42, 61, 62, 109, 110, 114, 115, 143, 148, 151, 321, 343, 346, 450, 591, 594, 716, 719, 1283, 1285, 1288, 1289, 1292, 1392, 1482, 1485, 1530, 1534, 1751, 1783, 1786], "com": [38, 42, 143, 148], "unifyai": [38, 39, 42, 43], "venv": 38, "python3": [38, 39, 42, 43], "m": [38, 39, 42, 43, 45, 48, 49, 55, 56, 63, 72, 73, 80, 81, 109, 110, 111, 120, 121, 128, 129, 142, 164, 237, 280, 283, 303, 307, 308, 312, 1392, 1393, 1396, 1403, 1406, 1413, 1416, 1418, 1421, 1422, 1425, 1427, 1430, 1432, 1435, 1437, 1440, 1442, 1445, 1447, 1450, 1452, 1455, 1457, 1460, 1462, 1465, 1467, 1470, 1472, 1475, 1477, 1480, 1482, 1485, 1487, 1490, 1492, 1496, 1497, 1501, 1510, 1514, 1637, 1646, 1661, 1667, 1670, 1672, 1675, 1677, 1680], "ivy_dev": [38, 39, 42, 43], "activ": [38, 39, 42, 43, 47, 64, 65, 92, 93, 96, 140, 141, 161, 168, 197, 198, 201, 203, 204, 207, 209, 212, 214, 217, 219, 222, 224, 227, 229, 232, 1809, 1819, 1822], "window": [38, 39, 43, 63, 70, 71, 111, 118, 119, 1321, 1323, 1326, 1328, 1331, 1333, 1336, 1338, 1340, 1342, 1345, 1347, 1350, 1352, 1353, 1355, 1358, 1824], "script": [38, 39, 42, 43, 150, 164, 181, 1819], "bat": [38, 39, 42, 43], "mac": [38, 39, 42, 43], "linux": [38, 39, 42, 43, 1822, 1824], "bin": [38, 39, 42, 43, 143, 146], "instal": [38, 39, 42, 43, 145, 153, 180, 1809], "packag": [38, 39, 42, 153, 158, 181, 1819, 1821], "edit": [38, 41, 42, 43], "mode": [38, 42, 43, 63, 72, 73, 97, 98, 111, 120, 121, 146, 150, 162, 181, 234, 235, 416, 440, 450, 466, 469, 676, 679, 1090, 1163, 1228, 1229, 1232, 1234, 1235, 1271, 1272, 1273, 1275, 1276, 1392, 1477, 1480, 1819, 1822], "cd": [38, 39, 42, 43], "pip": [38, 42, 180, 1809], "repeat": [38, 43, 64, 65, 76, 77, 112, 113, 124, 125, 144, 145, 150, 151, 153, 160, 1090, 1132, 1135, 1552, 1618, 1622], "note": [38, 41, 42, 43, 61, 62, 63, 76, 77, 111, 124, 125, 148, 150, 151, 158, 159, 160, 161, 321, 400, 450, 631, 634, 711, 714, 716, 719, 1090, 1106, 1392, 1418, 1421, 1422, 1425, 1482, 1485, 1492, 1496, 1552, 1588, 1591, 1608, 1611, 1714, 1720, 1724, 1751, 1770, 1773], "link": [38, 41, 42, 147, 148, 158, 160, 1815, 1817], "reflect": [38, 43, 144, 160], "immedi": [38, 42, 162, 1809], "ivy_robot": [38, 180], "docker": [38, 40], "desktop": [38, 42], "imag": [38, 39, 42, 63, 69, 70, 71, 111, 117, 118, 119, 161, 164, 165, 167, 169, 180, 1321, 1323, 1326, 1328, 1331, 1333, 1336, 1338, 1340, 1347, 1350, 1352, 1353, 1355, 1358, 1809, 1819], "my": [38, 161], "mount": [38, 43], "run": [38, 39, 41, 42, 66, 67, 114, 115, 142, 145, 147, 150, 153, 154, 158, 159, 164, 165, 166, 167, 168, 169, 180, 181, 1283, 1285, 1288, 1289, 1292, 1300, 1303, 1633, 1634, 1635, 1636, 1817, 1819, 1820, 1821, 1822, 1824, 1825, 1826], "rm": [38, 43], "v": [38, 42, 43, 70, 71, 86, 87, 118, 119, 134, 135, 164, 167, 168, 169, 1321, 1382, 1385, 1387, 1390, 1735, 1741, 1744, 1809], "pwd": 38, "volum": [38, 63, 70, 71, 111, 118, 119, 1321, 1342, 1345], "rebuild": [38, 94, 97, 98, 99, 100], "after": [38, 39, 41, 42, 43, 66, 67, 78, 79, 97, 98, 114, 115, 126, 127, 143, 148, 150, 152, 154, 158, 160, 163, 321, 410, 416, 417, 418, 450, 736, 739, 1283, 1289, 1292, 1295, 1298, 1300, 1303, 1304, 1307, 1308, 1311, 1637, 1649, 1656, 1657, 1660, 1819], "everi": [38, 39, 41, 43, 55, 56, 63, 64, 65, 111, 112, 113, 143, 145, 146, 147, 148, 150, 154, 155, 156, 157, 158, 159, 160, 161, 164, 166, 168, 237, 266, 267, 270, 1090, 1091, 1094, 1819], "id": [38, 40, 42, 144, 146, 153, 416, 422], "pycharm": 38, "configur": [38, 39, 42, 43, 97, 98, 147, 148, 156, 416, 439, 1637, 1651], "part": [38, 43, 55, 56, 63, 66, 67, 111, 143, 155, 158, 160, 161, 162, 164, 165, 169, 180, 181, 237, 303, 307, 308, 312, 450, 606, 609, 1392, 1427, 1430, 1817, 1819, 1824, 1825, 1826], "vscode": [38, 42], "found": [38, 41, 42, 43, 76, 77, 94, 97, 98, 99, 100, 144, 145, 146, 148, 151, 153, 156, 157, 158, 162, 416, 430, 1637, 1649, 1821], "devcontain": [38, 42], "extens": [38, 40, 42, 43, 61, 62, 72, 73, 109, 110, 151, 160, 237, 239, 240, 242, 244, 252, 253, 256, 258, 259, 261, 264, 266, 267, 270, 272, 275, 280, 283, 295, 296, 298, 301, 303, 307, 308, 312, 313, 315, 316, 320, 321, 343, 346, 361, 364, 372, 375, 401, 404, 450, 451, 454, 456, 459, 461, 464, 466, 469, 471, 474, 476, 479, 481, 484, 486, 489, 491, 494, 496, 499, 501, 504, 506, 509, 516, 519, 521, 524, 526, 529, 531, 534, 536, 539, 546, 549, 551, 554, 566, 569, 571, 574, 576, 579, 581, 584, 586, 589, 591, 594, 596, 599, 601, 604, 616, 619, 626, 629, 631, 634, 636, 639, 641, 644, 646, 649, 651, 654, 656, 659, 661, 664, 676, 679, 681, 684, 686, 689, 691, 694, 696, 699, 711, 714, 716, 719, 721, 724, 726, 729, 731, 734, 736, 739, 741, 744, 746, 750, 751, 755, 756, 760, 761, 765, 1089, 1392, 1393, 1396, 1398, 1401, 1403, 1406, 1408, 1411, 1413, 1416, 1418, 1421, 1422, 1425, 1427, 1430, 1437, 1440, 1442, 1445, 1447, 1450, 1452, 1455, 1457, 1460, 1462, 1465, 1467, 1470, 1472, 1475, 1477, 1480, 1482, 1485, 1487, 1490, 1492, 1496, 1497, 1501, 1502, 1505, 1520, 1524, 1525, 1529, 1552, 1558, 1561, 1568, 1571, 1573, 1576, 1578, 1581, 1588, 1591, 1593, 1596, 1603, 1606, 1608, 1611, 1688, 1689, 1692, 1694, 1697, 1704, 1707, 1709, 1713, 1714, 1715, 1719, 1720, 1724, 1725, 1729, 1730, 1734, 1735, 1736, 1739, 1746, 1749, 1751, 1766, 1769, 1770, 1773, 1774, 1777, 1778, 1781, 1783, 1786, 1787, 1791, 1792, 1796, 1797, 1798, 1801, 1803, 1806, 1816, 1819, 1826], "remot": [38, 42, 143], "codespac": 38, "config": [38, 42, 97, 98, 143, 167, 1637, 1651, 1820], "json": [38, 42, 97, 98, 167], "good": [38, 39, 40, 41, 42, 43, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 159, 160, 161, 162, 164, 165, 168], "feel": [38, 39, 41, 42, 43, 45, 94, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 196, 234, 236, 237, 321, 416, 450, 1089, 1090, 1283, 1321, 1392, 1535, 1552, 1633, 1637, 1656, 1661, 1688, 1735, 1751, 1797, 1816, 1817, 1818, 1819, 1820, 1821, 1822, 1823, 1824, 1825, 1826, 1828, 1831, 1833, 1843, 1855, 1859, 1861, 1867], "free": [38, 39, 40, 41, 43, 45, 94, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 180, 196, 234, 236, 237, 321, 416, 450, 1089, 1090, 1283, 1321, 1392, 1535, 1552, 1633, 1637, 1656, 1661, 1688, 1735, 1751, 1797, 1816, 1817, 1818, 1819, 1820, 1821, 1822, 1823, 1824, 1825, 1826, 1828, 1831, 1833, 1843, 1855, 1859, 1861, 1867], "channel": [38, 39, 41, 42, 43, 45, 64, 65, 94, 112, 113, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 196, 234, 236, 237, 321, 416, 450, 1089, 1090, 1140, 1143, 1283, 1321, 1365, 1368, 1392, 1535, 1552, 1633, 1637, 1656, 1661, 1688, 1735, 1751, 1797, 1816, 1817, 1818, 1819, 1820, 1821, 1822, 1823, 1824, 1825, 1826, 1828, 1831, 1833, 1843, 1855, 1859, 1861, 1867], "pre": [38, 41, 160, 169, 181, 1819], "commit": [38, 41, 143, 147, 150, 160], "_": [38, 39, 42, 61, 62, 109, 110, 114, 115, 151, 153, 157, 160, 167, 321, 343, 346, 450, 591, 594, 716, 719, 1283, 1285, 1288, 1289, 1292, 1392, 1482, 1485, 1497, 1501, 1530, 1534, 1637, 1645, 1751, 1783, 1786], "builder": [39, 179, 181, 1808, 1809], "dockerfil": [39, 42], "command": [39, 42, 143, 156, 1809], "maco": [39, 1824], "latest": [39, 41, 42, 43, 61, 62, 109, 110, 145, 147, 148, 151, 161, 181, 321, 343, 346, 450, 591, 594, 716, 719, 1392, 1482, 1485, 1751, 1783, 1786, 1824], "ubuntu": [39, 147], "uid": 39, "bash": [39, 42, 43, 143], "root": [39, 42, 43, 61, 62, 109, 110, 158, 167, 450, 736, 739], "both": [39, 43, 61, 62, 63, 72, 73, 103, 104, 109, 110, 111, 120, 121, 145, 146, 148, 149, 150, 151, 154, 155, 157, 158, 160, 162, 164, 166, 167, 168, 169, 180, 181, 237, 239, 240, 242, 244, 252, 253, 256, 258, 259, 261, 264, 266, 267, 270, 272, 275, 277, 278, 280, 283, 295, 296, 298, 301, 303, 307, 308, 312, 313, 315, 316, 320, 321, 343, 346, 379, 382, 389, 392, 399, 450, 451, 454, 456, 459, 461, 464, 466, 469, 471, 474, 476, 479, 481, 484, 486, 489, 491, 494, 496, 499, 501, 504, 506, 509, 516, 519, 521, 524, 526, 529, 531, 534, 536, 539, 546, 549, 551, 554, 566, 569, 571, 574, 576, 579, 581, 584, 586, 589, 591, 594, 596, 599, 601, 604, 616, 619, 626, 629, 631, 634, 636, 639, 641, 644, 646, 649, 651, 654, 656, 659, 661, 664, 676, 679, 681, 684, 686, 689, 691, 694, 696, 699, 711, 714, 716, 719, 721, 724, 726, 729, 731, 734, 736, 739, 741, 744, 746, 750, 751, 755, 756, 760, 761, 765, 1090, 1147, 1150, 1164, 1167, 1173, 1176, 1179, 1182, 1265, 1269, 1283, 1313, 1317, 1319, 1321, 1333, 1336, 1342, 1345, 1355, 1358, 1372, 1375, 1382, 1385, 1387, 1390, 1392, 1393, 1396, 1398, 1401, 1403, 1406, 1408, 1411, 1413, 1416, 1418, 1421, 1422, 1425, 1427, 1430, 1437, 1440, 1442, 1445, 1447, 1450, 1452, 1455, 1457, 1460, 1462, 1465, 1467, 1470, 1472, 1475, 1477, 1480, 1482, 1485, 1487, 1490, 1492, 1496, 1497, 1501, 1502, 1505, 1520, 1524, 1525, 1529, 1530, 1534, 1552, 1553, 1556, 1558, 1561, 1563, 1566, 1568, 1571, 1573, 1576, 1578, 1581, 1583, 1586, 1588, 1591, 1593, 1596, 1598, 1601, 1603, 1606, 1608, 1611, 1613, 1617, 1618, 1622, 1623, 1627, 1628, 1632, 1656, 1657, 1660, 1688, 1689, 1692, 1694, 1697, 1704, 1707, 1709, 1713, 1714, 1715, 1719, 1720, 1724, 1725, 1729, 1730, 1734, 1735, 1736, 1739, 1746, 1749, 1751, 1766, 1769, 1770, 1773, 1774, 1777, 1778, 1781, 1783, 1786, 1787, 1791, 1792, 1796, 1797, 1798, 1801, 1803, 1806, 1819, 1822, 1824, 1825, 1826], "termin": [39, 42, 43, 94, 97, 98, 99, 100, 146, 164, 167], "3": [39, 42, 45, 46, 47, 48, 49, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 70, 71, 72, 73, 76, 77, 80, 81, 82, 83, 84, 85, 88, 89, 94, 95, 96, 99, 100, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 143, 145, 146, 148, 150, 159, 160, 164, 166, 167, 168, 169, 196, 198, 201, 204, 207, 209, 212, 214, 217, 219, 222, 224, 227, 229, 232, 236, 237, 267, 270, 277, 278, 280, 283, 298, 301, 313, 315, 316, 320, 321, 328, 331, 333, 336, 338, 341, 343, 346, 356, 358, 361, 364, 384, 387, 389, 392, 401, 404, 416, 420, 422, 423, 425, 436, 438, 441, 445, 450, 451, 454, 456, 459, 461, 464, 466, 469, 471, 474, 476, 479, 481, 484, 486, 489, 491, 494, 496, 499, 511, 514, 516, 519, 521, 524, 526, 529, 531, 534, 536, 539, 541, 544, 546, 549, 551, 554, 556, 559, 561, 564, 566, 569, 571, 574, 576, 579, 581, 584, 586, 589, 591, 594, 596, 599, 601, 604, 606, 609, 611, 614, 616, 619, 621, 624, 626, 629, 631, 634, 641, 644, 651, 654, 656, 659, 661, 664, 666, 669, 671, 674, 676, 679, 681, 684, 686, 689, 691, 694, 696, 699, 701, 704, 711, 714, 716, 719, 721, 724, 726, 729, 731, 734, 736, 739, 741, 744, 746, 750, 751, 755, 756, 760, 761, 765, 766, 770, 1090, 1098, 1100, 1106, 1107, 1110, 1112, 1115, 1119, 1121, 1127, 1130, 1132, 1135, 1137, 1139, 1147, 1150, 1152, 1155, 1164, 1167, 1173, 1176, 1179, 1182, 1184, 1187, 1200, 1203, 1208, 1211, 1214, 1223, 1226, 1237, 1239, 1242, 1255, 1258, 1265, 1269, 1270, 1282, 1283, 1285, 1288, 1294, 1295, 1298, 1299, 1300, 1303, 1308, 1311, 1313, 1317, 1319, 1321, 1323, 1326, 1328, 1331, 1333, 1336, 1342, 1345, 1347, 1350, 1352, 1353, 1355, 1358, 1372, 1375, 1382, 1385, 1387, 1390, 1392, 1393, 1396, 1398, 1401, 1403, 1406, 1408, 1411, 1413, 1416, 1427, 1430, 1437, 1440, 1442, 1445, 1447, 1450, 1457, 1460, 1462, 1465, 1467, 1470, 1472, 1475, 1482, 1485, 1492, 1496, 1497, 1501, 1502, 1505, 1510, 1514, 1515, 1519, 1530, 1534, 1535, 1536, 1539, 1541, 1547, 1550, 1552, 1553, 1556, 1558, 1561, 1563, 1566, 1568, 1571, 1573, 1576, 1578, 1581, 1583, 1586, 1588, 1591, 1593, 1596, 1598, 1601, 1603, 1606, 1608, 1611, 1613, 1617, 1618, 1622, 1623, 1627, 1637, 1639, 1641, 1644, 1645, 1646, 1647, 1649, 1654, 1655, 1656, 1657, 1660, 1661, 1662, 1665, 1667, 1670, 1672, 1675, 1677, 1680, 1683, 1686, 1688, 1689, 1692, 1694, 1697, 1699, 1702, 1704, 1707, 1709, 1713, 1714, 1715, 1719, 1720, 1724, 1725, 1729, 1735, 1736, 1739, 1741, 1744, 1746, 1749, 1751, 1752, 1755, 1757, 1760, 1762, 1765, 1766, 1769, 1770, 1773, 1774, 1777, 1778, 1781, 1783, 1786, 1787, 1791, 1792, 1796, 1797, 1798, 1801, 1803, 1806, 1809, 1826], "8": [39, 42, 45, 48, 49, 61, 62, 63, 64, 65, 70, 71, 72, 73, 74, 75, 76, 77, 80, 81, 84, 85, 86, 87, 88, 89, 94, 99, 100, 109, 110, 111, 112, 113, 114, 115, 118, 119, 120, 121, 122, 123, 124, 125, 128, 129, 132, 133, 134, 135, 136, 137, 146, 150, 160, 163, 167, 196, 198, 201, 219, 222, 237, 266, 267, 270, 277, 278, 298, 301, 316, 320, 321, 351, 352, 354, 355, 361, 364, 416, 427, 446, 450, 466, 469, 476, 479, 496, 499, 516, 519, 526, 529, 536, 539, 576, 579, 581, 584, 586, 589, 611, 614, 616, 619, 641, 644, 651, 654, 666, 669, 671, 674, 676, 679, 696, 699, 701, 704, 716, 719, 721, 724, 736, 739, 741, 744, 756, 760, 761, 765, 1090, 1106, 1112, 1115, 1147, 1150, 1164, 1167, 1179, 1182, 1184, 1187, 1200, 1203, 1208, 1211, 1223, 1226, 1239, 1242, 1249, 1253, 1283, 1285, 1288, 1294, 1299, 1308, 1311, 1319, 1321, 1323, 1326, 1342, 1345, 1347, 1350, 1355, 1358, 1372, 1375, 1382, 1385, 1392, 1403, 1406, 1408, 1411, 1413, 1416, 1427, 1430, 1442, 1445, 1447, 1450, 1467, 1470, 1482, 1485, 1492, 1496, 1497, 1501, 1502, 1505, 1510, 1514, 1515, 1519, 1535, 1536, 1539, 1541, 1552, 1553, 1556, 1573, 1576, 1598, 1601, 1608, 1611, 1623, 1627, 1637, 1639, 1646, 1661, 1662, 1665, 1667, 1670, 1672, 1675, 1677, 1680, 1683, 1686, 1688, 1709, 1713, 1714, 1715, 1719, 1725, 1729, 1735, 1736, 1739, 1746, 1749, 1751, 1757, 1760, 1762, 1765, 1770, 1773, 1787, 1791, 1809], "built": [39, 42, 43, 146, 160, 165, 237, 239, 240, 1808, 1818, 1819, 1823], "explicit": [39, 42, 146, 148, 157, 158, 164, 181, 1819], "cmd": [39, 42], "file": [39, 41, 42, 43, 97, 98, 143, 144, 145, 146, 147, 151, 153, 155, 158, 159, 160, 161, 164, 167, 1090, 1172, 1236, 1815, 1818, 1819, 1820], "abov": [39, 42, 43, 55, 56, 61, 62, 72, 73, 80, 81, 95, 96, 109, 110, 128, 129, 144, 145, 146, 147, 148, 150, 151, 153, 154, 155, 157, 158, 159, 160, 162, 164, 166, 167, 168, 169, 196, 229, 232, 237, 239, 240, 242, 244, 252, 253, 256, 258, 259, 261, 264, 266, 267, 270, 272, 275, 277, 278, 280, 283, 295, 296, 298, 301, 303, 307, 308, 312, 313, 315, 316, 320, 321, 343, 346, 379, 382, 389, 392, 450, 451, 454, 456, 459, 461, 464, 466, 469, 471, 474, 476, 479, 481, 484, 486, 489, 491, 494, 496, 499, 501, 504, 506, 509, 516, 519, 521, 524, 526, 529, 531, 534, 536, 539, 546, 549, 551, 554, 566, 569, 571, 574, 576, 579, 581, 584, 586, 589, 591, 594, 596, 599, 601, 604, 606, 609, 616, 619, 626, 629, 631, 634, 636, 639, 641, 644, 646, 649, 651, 654, 656, 659, 661, 664, 676, 679, 681, 684, 686, 689, 691, 694, 696, 699, 711, 714, 716, 719, 721, 724, 726, 729, 731, 734, 736, 739, 741, 744, 746, 750, 751, 755, 756, 760, 761, 765, 1090, 1147, 1150, 1164, 1167, 1173, 1176, 1179, 1182, 1265, 1269, 1283, 1313, 1317, 1321, 1333, 1336, 1342, 1345, 1355, 1358, 1372, 1375, 1382, 1385, 1387, 1390, 1392, 1393, 1396, 1398, 1401, 1403, 1406, 1408, 1411, 1413, 1416, 1418, 1421, 1422, 1425, 1427, 1430, 1437, 1440, 1442, 1445, 1447, 1450, 1452, 1455, 1457, 1460, 1462, 1465, 1467, 1470, 1472, 1475, 1477, 1480, 1482, 1485, 1487, 1490, 1492, 1496, 1497, 1501, 1502, 1505, 1510, 1514, 1520, 1524, 1525, 1529, 1530, 1534, 1552, 1553, 1556, 1558, 1561, 1563, 1566, 1568, 1571, 1573, 1576, 1578, 1581, 1583, 1586, 1588, 1591, 1593, 1596, 1598, 1601, 1603, 1606, 1608, 1611, 1613, 1617, 1618, 1622, 1623, 1627, 1628, 1632, 1656, 1657, 1660, 1661, 1667, 1670, 1688, 1689, 1692, 1694, 1697, 1704, 1707, 1709, 1713, 1714, 1715, 1719, 1720, 1724, 1725, 1729, 1730, 1734, 1735, 1736, 1739, 1746, 1749, 1751, 1766, 1769, 1770, 1773, 1774, 1777, 1778, 1781, 1783, 1786, 1787, 1791, 1792, 1796, 1797, 1798, 1801, 1803, 1806, 1819, 1824], "OR": [39, 42, 43, 90, 91, 138, 139, 450, 511, 514, 656, 659, 1797, 1803, 1806], "move": [39, 43, 63, 107, 108, 111, 161, 416, 441, 445], "execut": [39, 42, 43, 146, 150, 157, 160, 162, 164, 166, 169, 181, 416, 418, 1090, 1270, 1808, 1815, 1819, 1820, 1821, 1822, 1823, 1825], "insid": [39, 42, 43, 94, 99, 100, 146, 148, 156, 160, 161, 1825], "make_docs_without_dock": 39, "path": [39, 42, 157, 158, 159, 1090, 1172, 1819], "rel": [39, 43, 45, 48, 49, 63, 66, 67, 72, 73, 76, 77, 86, 87, 103, 104, 111, 114, 115, 120, 121, 124, 125, 134, 135, 159, 162, 1283, 1289, 1292, 1295, 1298, 1300, 1303, 1304, 1307, 1308, 1311, 1392, 1413, 1416, 1457, 1460, 1472, 1475, 1510, 1514, 1552, 1573, 1576, 1593, 1596, 1735, 1736, 1739, 1746, 1749, 1809, 1819, 1821], "assum": [39, 61, 62, 63, 72, 73, 109, 110, 111, 143, 145, 148, 151, 159, 162, 166, 167, 181, 237, 239, 240, 242, 244, 252, 253, 256, 258, 259, 261, 264, 266, 267, 270, 272, 275, 277, 278, 280, 283, 295, 296, 298, 301, 303, 307, 308, 312, 313, 315, 316, 320, 321, 343, 346, 379, 382, 389, 392, 450, 451, 454, 456, 459, 461, 464, 466, 469, 471, 474, 476, 479, 481, 484, 486, 489, 491, 494, 496, 499, 501, 504, 506, 509, 516, 519, 521, 524, 526, 529, 531, 534, 536, 539, 546, 549, 551, 554, 566, 569, 571, 574, 576, 579, 581, 584, 586, 589, 591, 594, 596, 599, 601, 604, 606, 609, 616, 619, 626, 629, 631, 634, 636, 639, 641, 644, 646, 649, 651, 654, 656, 659, 661, 664, 676, 679, 681, 684, 686, 689, 691, 694, 696, 699, 711, 714, 716, 719, 721, 724, 726, 729, 731, 734, 736, 739, 741, 744, 746, 750, 751, 755, 756, 760, 761, 765, 1090, 1147, 1150, 1164, 1167, 1173, 1176, 1179, 1182, 1265, 1269, 1283, 1313, 1317, 1321, 1333, 1336, 1342, 1345, 1355, 1358, 1365, 1368, 1372, 1375, 1382, 1385, 1387, 1390, 1392, 1393, 1396, 1398, 1401, 1403, 1406, 1408, 1411, 1413, 1416, 1418, 1421, 1422, 1425, 1427, 1430, 1437, 1440, 1442, 1445, 1447, 1450, 1452, 1455, 1457, 1460, 1462, 1465, 1467, 1470, 1472, 1475, 1477, 1480, 1482, 1485, 1487, 1490, 1492, 1496, 1497, 1501, 1502, 1505, 1520, 1524, 1525, 1529, 1530, 1534, 1552, 1553, 1556, 1558, 1561, 1563, 1566, 1568, 1571, 1573, 1576, 1578, 1581, 1583, 1586, 1588, 1591, 1593, 1596, 1598, 1601, 1603, 1606, 1608, 1611, 1613, 1617, 1618, 1622, 1623, 1627, 1628, 1632, 1656, 1657, 1660, 1688, 1689, 1692, 1694, 1697, 1704, 1707, 1709, 1713, 1714, 1715, 1719, 1720, 1724, 1725, 1729, 1730, 1734, 1735, 1736, 1739, 1746, 1749, 1751, 1766, 1769, 1770, 1773, 1774, 1777, 1778, 1781, 1783, 1786, 1787, 1791, 1792, 1796, 1797, 1798, 1801, 1803, 1806], "gener": [39, 41, 42, 43, 61, 62, 65, 80, 81, 92, 93, 109, 110, 113, 128, 129, 140, 141, 142, 143, 144, 146, 148, 149, 150, 151, 153, 154, 155, 156, 157, 158, 159, 161, 163, 164, 166, 168, 169, 180, 181, 234, 237, 239, 240, 272, 275, 277, 278, 321, 343, 346, 450, 591, 594, 711, 714, 716, 719, 1091, 1094, 1096, 1097, 1098, 1100, 1101, 1104, 1106, 1107, 1110, 1112, 1115, 1117, 1118, 1119, 1121, 1122, 1125, 1127, 1130, 1132, 1135, 1137, 1139, 1140, 1143, 1145, 1146, 1147, 1150, 1152, 1155, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1167, 1169, 1170, 1171, 1172, 1173, 1176, 1178, 1179, 1182, 1184, 1187, 1189, 1192, 1194, 1195, 1198, 1200, 1203, 1205, 1207, 1208, 1211, 1213, 1214, 1215, 1216, 1217, 1218, 1221, 1223, 1226, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1242, 1244, 1247, 1249, 1253, 1254, 1255, 1258, 1259, 1260, 1264, 1265, 1269, 1270, 1271, 1272, 1273, 1274, 1275, 1276, 1277, 1281, 1282, 1392, 1482, 1485, 1515, 1519, 1661, 1662, 1665, 1667, 1670, 1677, 1680, 1682, 1751, 1783, 1786, 1808, 1809, 1817, 1818, 1819, 1820, 1821, 1822, 1823, 1824, 1825], "prefer": [39, 42, 146, 156, 158, 162, 1819], "browser": [39, 42], "affect": [39, 158], "page": [39, 42, 43, 147, 165, 166, 169, 179, 1809], "It": [39, 41, 42, 43, 45, 46, 47, 48, 49, 55, 56, 57, 58, 61, 62, 63, 64, 65, 66, 67, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 90, 91, 95, 96, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 134, 135, 136, 137, 138, 139, 142, 143, 144, 145, 146, 147, 148, 150, 151, 156, 157, 158, 159, 160, 161, 162, 164, 166, 167, 168, 196, 198, 201, 204, 207, 209, 212, 214, 217, 219, 222, 224, 227, 229, 232, 237, 239, 240, 242, 244, 249, 251, 252, 253, 256, 258, 259, 261, 264, 266, 267, 270, 272, 275, 277, 278, 290, 293, 295, 296, 298, 301, 303, 307, 308, 312, 313, 315, 316, 320, 321, 328, 331, 338, 341, 416, 441, 445, 450, 451, 454, 456, 459, 461, 464, 466, 469, 471, 474, 476, 479, 481, 484, 486, 489, 491, 494, 496, 499, 501, 504, 506, 509, 511, 514, 516, 519, 521, 524, 526, 529, 531, 534, 536, 539, 541, 544, 546, 549, 551, 554, 556, 559, 561, 564, 566, 569, 571, 574, 576, 579, 581, 584, 586, 589, 591, 594, 596, 599, 601, 604, 606, 609, 611, 614, 621, 624, 626, 629, 631, 634, 636, 639, 641, 644, 646, 649, 651, 654, 656, 659, 661, 664, 666, 669, 671, 674, 676, 679, 681, 684, 686, 689, 691, 694, 696, 699, 701, 704, 706, 709, 711, 714, 716, 719, 721, 724, 726, 729, 731, 734, 736, 739, 741, 744, 746, 750, 751, 755, 756, 760, 761, 765, 766, 770, 1090, 1107, 1110, 1112, 1115, 1122, 1125, 1127, 1130, 1132, 1135, 1147, 1150, 1152, 1155, 1218, 1221, 1223, 1226, 1283, 1285, 1288, 1289, 1292, 1295, 1298, 1300, 1303, 1304, 1307, 1308, 1311, 1313, 1317, 1321, 1323, 1326, 1328, 1331, 1333, 1336, 1338, 1340, 1342, 1345, 1347, 1350, 1352, 1353, 1355, 1358, 1360, 1363, 1365, 1368, 1372, 1375, 1382, 1385, 1387, 1390, 1392, 1393, 1396, 1398, 1401, 1403, 1406, 1408, 1411, 1413, 1416, 1427, 1430, 1432, 1435, 1437, 1440, 1442, 1445, 1447, 1450, 1457, 1460, 1462, 1465, 1467, 1470, 1472, 1475, 1487, 1490, 1497, 1501, 1502, 1505, 1510, 1514, 1520, 1524, 1525, 1529, 1530, 1534, 1535, 1536, 1539, 1541, 1542, 1545, 1547, 1550, 1552, 1553, 1556, 1558, 1561, 1563, 1566, 1568, 1571, 1573, 1576, 1578, 1581, 1583, 1586, 1588, 1591, 1593, 1596, 1603, 1606, 1608, 1611, 1613, 1617, 1618, 1622, 1628, 1632, 1656, 1657, 1660, 1661, 1662, 1665, 1667, 1670, 1672, 1675, 1677, 1680, 1683, 1686, 1688, 1689, 1692, 1699, 1702, 1709, 1713, 1714, 1730, 1734, 1735, 1736, 1739, 1746, 1749, 1751, 1752, 1755, 1757, 1760, 1797, 1798, 1801, 1803, 1806, 1817, 1819, 1820, 1822, 1823, 1824, 1825, 1826], "synchron": [39, 147], "respons": [39, 43, 148], "rest": [39, 42, 63, 111, 147, 169, 1321, 1365, 1368, 1821], "remove_doc": 39, "privat": [39, 160], "access": [39, 41, 42, 43, 97, 98, 148, 158, 1819, 1821, 1823], "fulfil": [39, 163, 1809], "purpos": [39, 43, 144, 146, 147, 150, 152, 154, 155, 156, 158, 160, 162, 163, 166, 450, 566, 569, 631, 634, 1392, 1482, 1485, 1808, 1809, 1818, 1820, 1823, 1824, 1825], "delet": [39, 43, 1283, 1318], "autogenerated_sourc": 39, "Then": [39, 41, 43, 156, 161, 181], "format": [39, 88, 89, 95, 96, 97, 98, 101, 102, 142, 148, 149, 150, 151, 152, 164, 166, 167, 196, 229, 232, 321, 356, 358, 416, 423, 425, 1751, 1762, 1765, 1809, 1815, 1817, 1819, 1820], "png": [39, 167], "_imag": 39, "lastli": 39, "docstr": [39, 40, 41, 45, 46, 47, 48, 49, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 95, 96, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 142, 153, 154, 155, 158, 161, 237, 239, 240, 242, 244, 252, 253, 256, 258, 259, 261, 264, 266, 267, 270, 272, 275, 280, 283, 295, 296, 298, 301, 303, 307, 308, 312, 313, 315, 316, 320, 321, 343, 346, 361, 364, 372, 375, 401, 404, 450, 451, 454, 456, 459, 461, 464, 466, 469, 471, 474, 476, 479, 481, 484, 486, 489, 491, 494, 496, 499, 501, 504, 506, 509, 516, 519, 521, 524, 526, 529, 531, 534, 536, 539, 546, 549, 551, 554, 566, 569, 571, 574, 576, 579, 581, 584, 586, 589, 591, 594, 596, 599, 601, 604, 616, 619, 626, 629, 631, 634, 636, 639, 641, 644, 646, 649, 651, 654, 656, 659, 661, 664, 676, 679, 681, 684, 686, 689, 691, 694, 696, 699, 711, 714, 716, 719, 721, 724, 726, 729, 731, 734, 736, 739, 741, 744, 746, 750, 751, 755, 756, 760, 761, 765, 1090, 1282, 1392, 1393, 1396, 1398, 1401, 1403, 1406, 1408, 1411, 1413, 1416, 1418, 1421, 1422, 1425, 1427, 1430, 1437, 1440, 1442, 1445, 1447, 1450, 1452, 1455, 1457, 1460, 1462, 1465, 1467, 1470, 1472, 1475, 1477, 1480, 1482, 1485, 1487, 1490, 1492, 1496, 1497, 1501, 1502, 1505, 1520, 1524, 1525, 1529, 1552, 1558, 1561, 1568, 1571, 1573, 1576, 1578, 1581, 1588, 1591, 1593, 1596, 1603, 1606, 1608, 1611, 1688, 1689, 1692, 1694, 1697, 1704, 1707, 1709, 1713, 1714, 1715, 1719, 1720, 1724, 1725, 1729, 1730, 1734, 1735, 1736, 1739, 1746, 1749, 1751, 1766, 1769, 1770, 1773, 1774, 1777, 1778, 1781, 1783, 1786, 1787, 1791, 1792, 1796, 1797, 1798, 1801, 1803, 1806], "structur": [39, 43, 94, 97, 98, 99, 100, 144, 146, 155, 159, 160, 161, 167, 168, 1090, 1117, 1637, 1651, 1818, 1819], "rst": 39, "main": [39, 42, 55, 56, 72, 73, 120, 121, 143, 146, 153, 156, 237, 258, 259, 303, 307, 308, 312, 1392, 1408, 1411, 1413, 1416, 1510, 1514, 1817, 1819, 1820, 1825], "submodul": [39, 41, 42, 43, 45, 94, 143, 147, 149, 155, 156, 160, 163, 164, 168, 196, 234, 236, 237, 321, 416, 450, 1089, 1090, 1283, 1321, 1392, 1535, 1552, 1633, 1637, 1656, 1661, 1688, 1735, 1751, 1797, 1808, 1809, 1828, 1831, 1833, 1843, 1855, 1859, 1861, 1867], "skip": [39, 95, 96, 97, 98, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 118, 119, 120, 121, 122, 123, 124, 125, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 147, 156, 160, 1637, 1651], "read": [39, 41, 63, 76, 77, 97, 98, 111, 124, 125, 160, 162, 1552, 1588, 1591, 1809, 1819], "partial_sourc": 39, "conf": 39, "copi": [39, 43, 55, 56, 57, 58, 63, 64, 65, 76, 77, 97, 98, 103, 104, 105, 106, 107, 108, 111, 112, 113, 124, 125, 143, 145, 148, 151, 158, 159, 164, 167, 180, 181, 237, 242, 244, 249, 251, 261, 264, 321, 328, 331, 416, 441, 445, 1090, 1260, 1264, 1265, 1269, 1552, 1588, 1591, 1637, 1639, 1735, 1746, 1749], "5": [39, 42, 43, 45, 46, 47, 48, 49, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 70, 71, 72, 73, 76, 77, 78, 79, 80, 81, 84, 85, 86, 87, 88, 89, 94, 95, 96, 99, 100, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 118, 119, 120, 121, 124, 125, 126, 127, 128, 129, 132, 133, 134, 135, 136, 137, 143, 145, 146, 150, 154, 159, 160, 166, 167, 168, 196, 198, 201, 204, 207, 209, 212, 214, 217, 224, 227, 229, 232, 237, 267, 270, 277, 278, 280, 283, 298, 301, 313, 315, 316, 320, 321, 333, 336, 338, 341, 343, 346, 356, 358, 361, 364, 389, 392, 401, 404, 416, 423, 425, 434, 438, 450, 451, 454, 461, 464, 466, 469, 471, 474, 476, 479, 486, 489, 491, 494, 496, 499, 511, 514, 516, 519, 526, 529, 536, 539, 541, 544, 546, 549, 551, 554, 566, 569, 571, 574, 576, 579, 581, 584, 586, 589, 606, 609, 611, 614, 616, 619, 621, 624, 626, 629, 631, 634, 641, 644, 651, 654, 661, 664, 666, 669, 671, 674, 676, 679, 681, 684, 686, 689, 691, 694, 696, 699, 701, 704, 711, 714, 716, 719, 721, 724, 726, 729, 741, 744, 746, 750, 751, 755, 756, 760, 761, 765, 1090, 1106, 1107, 1110, 1112, 1115, 1119, 1121, 1127, 1130, 1132, 1135, 1147, 1150, 1152, 1155, 1160, 1173, 1176, 1179, 1182, 1184, 1187, 1223, 1226, 1239, 1242, 1249, 1253, 1255, 1258, 1270, 1282, 1283, 1285, 1288, 1294, 1295, 1298, 1299, 1300, 1303, 1308, 1311, 1313, 1317, 1319, 1321, 1323, 1326, 1333, 1336, 1342, 1345, 1347, 1350, 1352, 1353, 1355, 1358, 1372, 1375, 1382, 1385, 1387, 1390, 1392, 1393, 1396, 1398, 1401, 1403, 1406, 1408, 1411, 1413, 1416, 1427, 1430, 1437, 1440, 1442, 1445, 1447, 1450, 1462, 1465, 1467, 1470, 1472, 1475, 1482, 1485, 1492, 1496, 1497, 1501, 1502, 1505, 1510, 1514, 1515, 1519, 1535, 1541, 1547, 1550, 1552, 1553, 1556, 1558, 1561, 1563, 1566, 1568, 1571, 1573, 1576, 1578, 1581, 1583, 1586, 1588, 1591, 1593, 1596, 1598, 1601, 1603, 1606, 1613, 1617, 1618, 1622, 1623, 1627, 1637, 1639, 1641, 1644, 1645, 1646, 1647, 1649, 1654, 1655, 1656, 1657, 1660, 1661, 1662, 1665, 1667, 1670, 1672, 1675, 1677, 1680, 1683, 1686, 1688, 1694, 1697, 1704, 1707, 1709, 1713, 1714, 1715, 1719, 1720, 1724, 1725, 1729, 1735, 1736, 1739, 1741, 1744, 1746, 1749, 1751, 1752, 1755, 1757, 1760, 1762, 1765, 1766, 1769, 1770, 1773, 1778, 1781, 1783, 1786, 1787, 1791, 1797, 1798, 1801, 1803, 1806], "create_rst_fil": 39, "filter": [39, 63, 70, 71, 111, 118, 119, 1321, 1322, 1323, 1326, 1328, 1331, 1333, 1336, 1338, 1340, 1342, 1345, 1347, 1350, 1352, 1353, 1355, 1358, 1371], "recurs": [39, 42, 50, 51, 52, 53, 54, 97, 98, 101, 102, 143, 146, 155, 168, 181, 321, 366, 367, 369, 370, 416, 428, 429, 1090, 1145, 1146, 1637, 1638, 1639, 1648, 1649, 1650], "repres": [39, 61, 62, 63, 72, 73, 109, 110, 111, 120, 121, 162, 166, 237, 280, 283, 290, 293, 321, 360, 450, 461, 464, 466, 469, 476, 479, 491, 494, 536, 539, 676, 679, 731, 734, 756, 760, 1283, 1312, 1320, 1321, 1372, 1375, 1392, 1482, 1485, 1487, 1490, 1816, 1817, 1820], "its": [39, 41, 42, 43, 50, 53, 54, 57, 58, 76, 77, 97, 98, 105, 106, 112, 113, 124, 125, 148, 151, 156, 158, 159, 160, 161, 162, 169, 181, 321, 333, 336, 350, 351, 352, 354, 355, 416, 440, 1090, 1259, 1392, 1442, 1445, 1552, 1568, 1571, 1588, 1591, 1593, 1596, 1613, 1617, 1637, 1644, 1808, 1818, 1819, 1825], "overal": [39, 146, 148, 149, 151, 169, 1815, 1817, 1818, 1819], "markup": 39, "6": [39, 45, 48, 49, 55, 56, 61, 62, 63, 64, 65, 66, 67, 70, 71, 72, 73, 76, 77, 80, 81, 86, 87, 88, 89, 94, 99, 100, 103, 104, 109, 110, 111, 112, 113, 114, 115, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 132, 133, 134, 135, 136, 137, 143, 145, 146, 150, 160, 162, 164, 166, 167, 168, 196, 198, 201, 204, 207, 224, 227, 237, 266, 267, 270, 277, 278, 280, 283, 298, 301, 316, 320, 321, 333, 336, 338, 341, 356, 358, 361, 364, 416, 449, 450, 451, 454, 461, 464, 466, 469, 471, 474, 476, 479, 481, 484, 486, 489, 496, 499, 501, 504, 511, 514, 516, 519, 526, 529, 531, 534, 536, 539, 541, 544, 546, 549, 551, 554, 571, 574, 576, 579, 581, 584, 586, 589, 596, 599, 601, 604, 606, 609, 611, 614, 616, 619, 631, 634, 641, 644, 651, 654, 661, 664, 666, 669, 671, 674, 676, 679, 681, 684, 691, 694, 701, 704, 711, 714, 716, 719, 721, 724, 726, 729, 736, 739, 741, 744, 746, 750, 751, 755, 756, 760, 766, 770, 1090, 1107, 1110, 1112, 1115, 1119, 1121, 1127, 1130, 1147, 1150, 1152, 1155, 1179, 1182, 1184, 1187, 1223, 1226, 1239, 1242, 1249, 1253, 1255, 1258, 1270, 1283, 1285, 1288, 1294, 1295, 1298, 1299, 1300, 1303, 1308, 1311, 1319, 1321, 1323, 1326, 1333, 1336, 1342, 1345, 1347, 1350, 1355, 1358, 1372, 1375, 1382, 1385, 1387, 1390, 1392, 1398, 1401, 1403, 1406, 1408, 1411, 1413, 1416, 1427, 1430, 1442, 1445, 1447, 1450, 1467, 1470, 1482, 1485, 1492, 1496, 1497, 1501, 1502, 1505, 1510, 1514, 1535, 1536, 1539, 1541, 1547, 1550, 1552, 1553, 1556, 1558, 1561, 1563, 1566, 1568, 1571, 1573, 1576, 1578, 1581, 1583, 1586, 1593, 1596, 1598, 1601, 1603, 1606, 1608, 1611, 1613, 1617, 1618, 1622, 1623, 1627, 1637, 1639, 1649, 1655, 1656, 1657, 1660, 1661, 1662, 1665, 1667, 1670, 1672, 1675, 1677, 1680, 1683, 1686, 1688, 1689, 1692, 1709, 1713, 1714, 1715, 1719, 1720, 1724, 1725, 1729, 1735, 1736, 1739, 1741, 1744, 1746, 1749, 1751, 1752, 1755, 1757, 1760, 1762, 1765, 1766, 1769, 1770, 1773, 1774, 1777, 1778, 1781, 1783, 1786, 1787, 1791, 1792, 1796], "extract": [39, 63, 111, 158, 161, 1815, 1819, 1820, 1825], "get_functions_and_class": 39, "doctr": 39, "7": [39, 43, 45, 46, 47, 48, 49, 61, 62, 63, 64, 65, 66, 67, 70, 71, 72, 73, 74, 75, 76, 77, 80, 81, 84, 85, 86, 87, 88, 89, 94, 99, 100, 107, 108, 109, 110, 111, 112, 113, 114, 115, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 132, 133, 134, 135, 136, 137, 146, 150, 155, 157, 160, 196, 204, 207, 214, 217, 237, 277, 278, 321, 361, 364, 372, 375, 401, 404, 416, 427, 450, 451, 454, 466, 469, 496, 499, 501, 504, 511, 514, 516, 519, 521, 524, 526, 529, 536, 539, 546, 549, 551, 554, 556, 559, 561, 564, 571, 574, 576, 579, 581, 584, 586, 589, 606, 609, 611, 614, 616, 619, 621, 624, 626, 629, 641, 644, 661, 664, 666, 669, 671, 674, 676, 679, 691, 694, 716, 719, 721, 724, 726, 729, 736, 739, 751, 755, 756, 760, 761, 765, 766, 770, 1090, 1107, 1110, 1112, 1115, 1179, 1182, 1184, 1187, 1223, 1226, 1249, 1253, 1283, 1285, 1288, 1289, 1292, 1294, 1295, 1298, 1299, 1300, 1303, 1308, 1311, 1319, 1321, 1323, 1326, 1347, 1350, 1355, 1358, 1372, 1375, 1382, 1385, 1387, 1390, 1392, 1398, 1401, 1403, 1406, 1408, 1411, 1413, 1416, 1427, 1430, 1442, 1445, 1467, 1470, 1482, 1485, 1492, 1496, 1497, 1501, 1502, 1505, 1510, 1514, 1535, 1536, 1539, 1541, 1542, 1545, 1547, 1550, 1552, 1553, 1556, 1568, 1571, 1573, 1576, 1598, 1601, 1608, 1611, 1613, 1617, 1623, 1627, 1637, 1639, 1646, 1656, 1657, 1660, 1661, 1662, 1665, 1667, 1670, 1672, 1675, 1677, 1680, 1683, 1686, 1688, 1709, 1713, 1714, 1715, 1719, 1725, 1729, 1735, 1746, 1749, 1751, 1752, 1755, 1757, 1760, 1762, 1765, 1770, 1773, 1787, 1791, 1792, 1796], "readm": [39, 181], "module_nam": 39, "copy_readme_to_rst": 39, "tabl": [39, 148, 158, 1819], "content": [39, 41, 97, 98, 157, 164, 167], "toc": 39, "append": [39, 97, 98, 152, 160, 164, 167, 450, 506, 509, 1392, 1413, 1416, 1442, 1445, 1552, 1568, 1571], "append_toctree_to_rst": 39, "9": [39, 45, 48, 49, 61, 62, 63, 64, 65, 66, 67, 70, 71, 72, 73, 76, 77, 80, 81, 86, 87, 88, 89, 94, 99, 100, 105, 106, 109, 110, 111, 112, 113, 114, 115, 118, 119, 120, 121, 124, 125, 128, 129, 132, 133, 134, 135, 136, 137, 146, 150, 160, 167, 168, 196, 198, 201, 237, 277, 278, 321, 351, 352, 354, 355, 361, 364, 450, 466, 469, 476, 479, 496, 499, 501, 504, 516, 519, 546, 549, 551, 554, 576, 579, 591, 594, 621, 624, 626, 629, 651, 654, 666, 669, 671, 674, 696, 699, 701, 704, 716, 719, 721, 724, 741, 744, 746, 750, 766, 770, 1090, 1112, 1115, 1132, 1135, 1147, 1150, 1179, 1182, 1184, 1187, 1200, 1203, 1208, 1211, 1223, 1226, 1283, 1285, 1288, 1289, 1292, 1300, 1303, 1321, 1323, 1326, 1333, 1336, 1347, 1350, 1355, 1358, 1372, 1375, 1382, 1385, 1392, 1398, 1401, 1403, 1406, 1413, 1416, 1427, 1430, 1442, 1445, 1447, 1450, 1467, 1470, 1482, 1485, 1492, 1496, 1497, 1501, 1502, 1505, 1510, 1514, 1515, 1519, 1552, 1553, 1556, 1573, 1576, 1593, 1596, 1598, 1601, 1608, 1611, 1623, 1627, 1637, 1639, 1644, 1646, 1649, 1661, 1662, 1665, 1667, 1670, 1672, 1675, 1677, 1680, 1683, 1686, 1688, 1709, 1713, 1714, 1715, 1719, 1725, 1729, 1735, 1746, 1749, 1751, 1757, 1760, 1762, 1765, 1778, 1781, 1787, 1791, 1792, 1796, 1815], "index": [39, 55, 56, 63, 64, 65, 76, 77, 82, 83, 84, 85, 86, 87, 97, 98, 103, 104, 111, 112, 113, 124, 125, 130, 131, 132, 133, 134, 135, 146, 155, 159, 160, 166, 236, 237, 258, 259, 280, 283, 416, 437, 1090, 1096, 1152, 1155, 1160, 1283, 1318, 1552, 1588, 1591, 1608, 1611, 1637, 1640, 1641, 1642, 1645, 1646, 1647, 1652, 1654, 1688, 1689, 1692, 1694, 1697, 1704, 1707, 1714, 1715, 1719, 1720, 1724, 1725, 1729, 1735, 1736, 1739, 1741, 1744, 1819], "create_index_rst": 39, "14": [39, 57, 58, 61, 62, 63, 80, 81, 88, 89, 105, 106, 109, 110, 111, 112, 113, 120, 121, 124, 125, 128, 129, 146, 150, 160, 321, 328, 331, 361, 364, 450, 456, 459, 476, 479, 486, 489, 541, 544, 641, 644, 701, 704, 766, 770, 1090, 1239, 1242, 1283, 1285, 1288, 1321, 1323, 1326, 1387, 1390, 1392, 1413, 1416, 1467, 1470, 1510, 1514, 1552, 1623, 1627, 1714, 1715, 1719, 1751, 1757, 1760, 1762, 1765], "\u03c0": [39, 236, 450, 456, 459, 471, 474, 481, 484, 486, 489], "namespac": [39, 41, 148, 156, 158, 159, 161, 164, 169], "remov": [39, 41, 72, 73, 97, 98, 120, 121, 145, 148, 151, 155, 160, 162, 169, 1283, 1318, 1392, 1413, 1416, 1442, 1445, 1510, 1514, 1552, 1603, 1606, 1633, 1634, 1635, 1819], "resours": 40, "climb": 40, "steep": 40, "curv": 40, "respect": [40, 41, 43, 61, 62, 63, 66, 67, 109, 110, 111, 114, 115, 144, 146, 148, 150, 154, 158, 161, 237, 280, 283, 450, 451, 454, 466, 469, 486, 489, 496, 499, 506, 509, 511, 514, 516, 519, 521, 524, 546, 549, 551, 554, 576, 579, 581, 584, 586, 589, 611, 614, 616, 619, 641, 644, 646, 649, 656, 659, 661, 664, 676, 679, 686, 689, 711, 714, 746, 750, 1283, 1285, 1288, 1289, 1292, 1293, 1294, 1295, 1298, 1299, 1300, 1303, 1304, 1307, 1308, 1311, 1319, 1321, 1352, 1353, 1392, 1477, 1480, 1492, 1496, 1633, 1634, 1635, 1636, 1815, 1825], "behaviour": [40, 41, 43, 142, 143, 144, 146, 148, 151, 152, 154, 157, 158, 160, 161, 166], "frontend": [40, 50, 53, 142, 148, 160, 161, 162, 163, 165, 1090, 1229, 1808, 1819], "refer": [40, 41, 42, 43, 63, 76, 77, 88, 89, 90, 91, 111, 114, 115, 124, 125, 136, 137, 138, 139, 143, 148, 154, 155, 158, 159, 160, 181, 237, 258, 259, 450, 566, 569, 631, 634, 1283, 1285, 1288, 1289, 1292, 1392, 1408, 1411, 1520, 1524, 1552, 1588, 1591, 1751, 1783, 1786, 1792, 1796, 1797, 1798, 1801, 1803, 1806, 1808, 1819], "realpython": 40, "pyn": 40, "kind": [40, 63, 158, 160, 162, 164, 181, 321, 361, 364, 372, 375, 377, 450, 696, 699, 1751, 1752, 1755, 1757, 1760, 1778, 1781, 1787, 1791], "stack": [40, 45, 48, 49, 72, 73, 76, 77, 97, 98, 111, 120, 121, 124, 125, 143, 164, 237, 303, 307, 308, 312, 1090, 1171, 1229, 1235, 1276, 1392, 1403, 1406, 1413, 1416, 1418, 1421, 1422, 1425, 1427, 1430, 1437, 1440, 1442, 1445, 1452, 1455, 1457, 1460, 1462, 1465, 1472, 1475, 1477, 1480, 1482, 1485, 1492, 1496, 1497, 1501, 1510, 1514, 1552, 1637, 1638, 1648, 1649, 1809, 1815, 1817, 1824, 1825], "overflow": [40, 148, 450, 466, 469, 1392, 1482, 1485, 1751, 1787, 1791], "platform": [40, 42, 1817, 1821, 1823], "sort": [40, 63, 87, 94, 97, 98, 99, 100, 111, 135, 161, 1392, 1418, 1421, 1422, 1425, 1492, 1496, 1497, 1501, 1736, 1739, 1741, 1744], "inform": [40, 41, 42, 43, 66, 67, 114, 115, 143, 146, 152, 160, 321, 361, 364, 372, 375, 1090, 1096, 1283, 1313, 1317, 1822], "pilot": 40, "bit": [40, 41, 42, 146, 148, 150, 155, 164, 166, 321, 360, 361, 364, 372, 375, 450, 501, 504, 506, 509, 516, 519, 1751, 1752, 1755, 1757, 1760, 1778, 1781, 1787, 1791, 1825], "thei": [40, 41, 43, 63, 72, 73, 80, 81, 97, 98, 120, 121, 128, 129, 142, 143, 145, 146, 147, 148, 149, 150, 155, 156, 157, 158, 160, 161, 162, 164, 166, 167, 168, 169, 181, 321, 399, 1392, 1515, 1519, 1633, 1634, 1635, 1661, 1662, 1665, 1809, 1816, 1819, 1821, 1822, 1825, 1826], "done": [40, 41, 42, 43, 143, 150, 153, 158, 160, 167, 1392, 1427, 1430, 1819], "faster": [40, 234, 235, 1392, 1492, 1496, 1808, 1821, 1824], "head": [40, 42, 158, 1321, 1382, 1385, 1809], "stuck": [40, 41], "spell": 40, "check": [40, 41, 42, 43, 50, 51, 52, 53, 54, 57, 58, 64, 65, 97, 98, 105, 106, 112, 113, 143, 146, 150, 152, 156, 158, 160, 161, 163, 164, 166, 167, 168, 321, 348, 349, 366, 367, 369, 370, 378, 384, 387, 394, 397, 415, 416, 428, 429, 435, 449, 1090, 1101, 1104, 1137, 1139, 1145, 1146, 1163, 1173, 1176, 1195, 1198, 1200, 1203, 1205, 1207, 1208, 1211, 1232, 1249, 1253, 1273, 1277, 1281, 1392, 1422, 1425, 1427, 1430, 1637, 1638, 1639, 1648, 1649, 1650, 1809], "though": [40, 41, 43, 148, 151, 155, 158, 162, 167, 181], "sound": [40, 163], "odd": [40, 143, 450, 696, 699], "peopl": [40, 42, 43, 142, 1819, 1821], "action": [40, 150, 160], "integr": [40, 42, 57, 58, 63, 105, 106, 109, 110, 142, 321, 328, 331, 1817, 1819, 1821, 1822, 1823], "keep": [40, 41, 42, 43, 76, 77, 97, 98, 124, 125, 143, 146, 147, 158, 160, 161, 162, 167, 169, 1552, 1623, 1627], "explain": [41, 42, 43, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 157, 158, 160, 161, 162, 164, 165, 166, 167, 168, 169, 1809, 1815, 1822, 1825], "frequent": [41, 43, 1819], "wherebi": [41, 1637, 1650, 1816], "outlin": [41, 42, 43, 142, 146, 148, 151, 155, 157, 158, 160], "broad": [41, 1821], "individu": [41, 43, 143, 147, 148, 155, 157, 158, 1819, 1822, 1825, 1826], "sub": [41, 43, 63, 76, 77, 94, 97, 98, 99, 100, 101, 102, 109, 110, 111, 112, 113, 124, 125, 142, 146, 152, 158, 159, 160, 166, 167, 168, 1392, 1413, 1416, 1552, 1598, 1601, 1633, 1634, 1635, 1636, 1809, 1815], "distribut": [41, 63, 74, 75, 80, 81, 111, 122, 123, 128, 129, 149, 181, 1321, 1360, 1363, 1365, 1368, 1535, 1536, 1539, 1541, 1542, 1545, 1547, 1550, 1661, 1662, 1665, 1667, 1670, 1672, 1675, 1677, 1680, 1683, 1686, 1819, 1822], "across": [41, 82, 83, 97, 98, 112, 113, 130, 131, 143, 146, 148, 150, 152, 154, 155, 158, 160, 162, 416, 438, 439, 1090, 1098, 1100, 1637, 1644, 1688, 1694, 1697, 1817, 1819, 1824], "todo": [41, 148, 158, 160], "detail": [41, 43, 76, 77, 143, 145, 146, 147, 154, 155, 156, 158, 159, 160, 161, 164, 166, 167, 168, 237, 261, 264, 1714, 1715, 1719, 1720, 1724, 1725, 1729, 1730, 1734, 1821, 1825], "select": [41, 42, 43, 63, 88, 89, 111, 136, 137, 157, 160, 164, 166, 169, 181, 1751, 1752, 1755, 1757, 1760, 1819, 1822, 1823], "alloc": [41, 43, 55, 56, 57, 58, 105, 106, 181, 237, 303, 307, 308, 312, 321, 328, 331], "describ": [41, 43, 88, 89, 147, 158, 160, 164, 169, 1751, 1762, 1765, 1778, 1781, 1787, 1791, 1819], "explan": [41, 43, 146, 151, 154, 158, 166], "instead": [41, 42, 43, 61, 62, 109, 110, 143, 146, 148, 150, 151, 152, 154, 155, 156, 157, 158, 159, 160, 162, 164, 166, 167, 181, 416, 420, 450, 711, 714, 1817, 1819, 1825, 1826], "focu": [41, 1817, 1818, 1821, 1826], "alwai": [41, 43, 57, 58, 76, 77, 105, 106, 124, 125, 144, 145, 146, 148, 151, 153, 154, 155, 157, 158, 159, 160, 161, 162, 164, 181, 321, 328, 331, 450, 466, 469, 676, 679, 1090, 1189, 1192, 1552, 1588, 1591], "NOT": [41, 450, 651, 654], "pypi": [41, 42, 181], "instruct": [41, 42, 143, 159, 160, 1817, 1820, 1823, 1825], "static": [41, 95, 96, 97, 98, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 118, 119, 120, 121, 122, 123, 124, 125, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 150, 151, 155, 156, 158, 181, 234, 235, 237, 249, 251, 1818, 1819, 1820], "method": [41, 43, 45, 46, 47, 48, 49, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 143, 144, 148, 150, 151, 153, 154, 155, 156, 160, 161, 164, 165, 168, 169, 181, 196, 219, 222, 224, 227, 229, 232, 237, 249, 251, 261, 264, 298, 301, 316, 320, 321, 328, 331, 361, 364, 450, 486, 489, 526, 529, 531, 534, 536, 539, 546, 549, 551, 554, 571, 574, 591, 594, 606, 609, 636, 639, 741, 744, 746, 750, 1090, 1117, 1218, 1221, 1223, 1226, 1283, 1300, 1303, 1304, 1307, 1312, 1318, 1320, 1321, 1347, 1350, 1387, 1390, 1392, 1497, 1501, 1535, 1536, 1539, 1541, 1552, 1593, 1596, 1613, 1617, 1637, 1649, 1650, 1651, 1688, 1689, 1692, 1694, 1697, 1704, 1707, 1709, 1713, 1714, 1715, 1719, 1751, 1766, 1769, 1778, 1781, 1787, 1791, 1792, 1796, 1797, 1798, 1801, 1803, 1806, 1809, 1820, 1826], "revers": [41, 45, 48, 49, 63, 64, 65, 72, 73, 88, 89, 94, 99, 100, 111, 120, 121, 136, 137, 146, 148, 150, 151, 158, 162, 169, 181, 1090, 1119, 1121, 1392, 1515, 1519, 1552, 1573, 1576, 1751, 1752, 1755, 1757, 1760], "familiar": [41, 42], "yourself": [41, 43, 158, 160, 162, 180], "hypothesi": [41, 43, 143, 156], "fail": [41, 42, 43, 143, 147, 148, 150, 153, 158, 159], "els": [41, 64, 65, 80, 81, 128, 129, 143, 145, 148, 152, 155, 157, 158, 159, 160, 161, 162, 164, 166, 168, 169, 181, 321, 350, 351, 352, 354, 355, 1090, 1101, 1104, 1119, 1121, 1137, 1139, 1637, 1648, 1651, 1661, 1667, 1670, 1672, 1675, 1677, 1680, 1820], "cover": [41, 143, 150, 151, 155, 156, 160, 162, 163], "lambda": [41, 164, 167, 196, 197, 203, 1090, 1119, 1121, 1283, 1294, 1299, 1319, 1321, 1382, 1385, 1637, 1645, 1646], "direct": [41, 63, 158, 162, 168, 169, 180, 1735, 1746, 1749, 1815, 1819, 1820, 1823], "bind": [41, 146, 1818, 1819], "defin": [41, 42, 55, 56, 63, 64, 65, 72, 73, 103, 104, 111, 112, 113, 120, 121, 147, 148, 151, 154, 158, 159, 160, 161, 166, 168, 181, 237, 290, 293, 450, 676, 679, 711, 714, 1090, 1179, 1182, 1184, 1187, 1392, 1398, 1401, 1422, 1425, 1427, 1430, 1487, 1490, 1751, 1766, 1769, 1770, 1773, 1774, 1777, 1783, 1786, 1808, 1816, 1817, 1818, 1819, 1820, 1823, 1825, 1826], "def": [41, 42, 143, 146, 148, 149, 150, 152, 153, 154, 155, 157, 158, 159, 160, 161, 162, 164, 166, 167, 168, 169, 1090, 1106, 1637, 1644, 1809], "special": [41, 45, 48, 49, 88, 89, 94, 99, 100, 120, 121, 143, 144, 150, 151, 152, 154, 157, 159, 161, 162, 450, 451, 454, 456, 459, 461, 464, 466, 469, 471, 474, 476, 479, 481, 484, 486, 489, 521, 524, 526, 529, 531, 534, 536, 539, 561, 564, 566, 569, 571, 574, 621, 624, 626, 629, 631, 634, 636, 639, 641, 644, 651, 654, 676, 679, 696, 699, 711, 714, 716, 719, 721, 724, 726, 729, 731, 734, 736, 739, 751, 755, 756, 760, 761, 765, 1751, 1766, 1769, 1770, 1773, 1774, 1777, 1783, 1786, 1787, 1791, 1792, 1796, 1819, 1820, 1821], "sure": [41, 42, 43, 143, 147, 158, 159, 160, 162], "aforement": 41, "correct": [41, 43, 88, 89, 136, 137, 142, 146, 148, 149, 153, 154, 155, 159, 160, 321, 410, 1552, 1553, 1556, 1751, 1783, 1786, 1792, 1796, 1809], "categori": [41, 143, 144, 146, 148, 158, 161, 163, 1809], "parent": [41, 166, 1283, 1312, 1320], "arraywithelementwis": [41, 45, 48, 49, 61, 144, 166], "containerwithmanipul": [41, 94, 99, 100, 124], "hint": [41, 61, 62, 72, 73, 109, 110, 144, 151, 154, 155, 157, 158, 159, 161, 237, 239, 240, 242, 244, 252, 253, 256, 258, 259, 261, 264, 266, 267, 270, 272, 275, 277, 278, 280, 283, 295, 296, 298, 301, 303, 307, 308, 312, 313, 315, 316, 320, 321, 343, 346, 379, 382, 389, 392, 450, 451, 454, 456, 459, 461, 464, 466, 469, 471, 474, 476, 479, 481, 484, 486, 489, 491, 494, 496, 499, 501, 504, 506, 509, 516, 519, 521, 524, 526, 529, 531, 534, 536, 539, 546, 549, 551, 554, 566, 569, 571, 574, 576, 579, 581, 584, 586, 589, 591, 594, 596, 599, 601, 604, 606, 609, 616, 619, 626, 629, 631, 634, 636, 639, 641, 644, 646, 649, 651, 654, 656, 659, 661, 664, 676, 679, 681, 684, 686, 689, 691, 694, 696, 699, 711, 714, 716, 719, 721, 724, 726, 729, 731, 734, 736, 739, 741, 744, 746, 750, 751, 755, 756, 760, 761, 765, 1090, 1147, 1150, 1164, 1167, 1173, 1176, 1179, 1182, 1265, 1269, 1283, 1313, 1317, 1321, 1333, 1336, 1342, 1345, 1355, 1358, 1372, 1375, 1382, 1385, 1387, 1390, 1392, 1393, 1396, 1398, 1401, 1403, 1406, 1408, 1411, 1413, 1416, 1418, 1421, 1422, 1425, 1427, 1430, 1437, 1440, 1442, 1445, 1447, 1450, 1452, 1455, 1457, 1460, 1462, 1465, 1467, 1470, 1472, 1475, 1477, 1480, 1482, 1485, 1487, 1490, 1492, 1496, 1497, 1501, 1502, 1505, 1520, 1524, 1525, 1529, 1530, 1534, 1552, 1553, 1556, 1558, 1561, 1563, 1566, 1568, 1571, 1573, 1576, 1578, 1581, 1583, 1586, 1588, 1591, 1593, 1596, 1598, 1601, 1603, 1606, 1608, 1611, 1613, 1617, 1618, 1622, 1623, 1627, 1628, 1632, 1656, 1657, 1660, 1688, 1689, 1692, 1694, 1697, 1704, 1707, 1709, 1713, 1714, 1715, 1719, 1720, 1724, 1725, 1729, 1730, 1734, 1735, 1736, 1739, 1746, 1749, 1751, 1766, 1769, 1770, 1773, 1774, 1777, 1778, 1781, 1783, 1786, 1787, 1791, 1792, 1796, 1797, 1798, 1801, 1803, 1806], "add": [41, 42, 43, 45, 48, 49, 61, 62, 78, 79, 92, 93, 94, 97, 98, 99, 100, 109, 110, 126, 127, 140, 141, 142, 143, 144, 145, 146, 148, 151, 154, 155, 157, 158, 160, 161, 162, 164, 166, 181, 450, 1090, 1214, 1270, 1283, 1312, 1320, 1656, 1657, 1660, 1809, 1815, 1817, 1819], "thorough": [41, 151, 154, 160], "ensur": [41, 42, 43, 64, 65, 144, 148, 150, 152, 153, 154, 156, 157, 158, 159, 160, 161, 1090, 1189, 1192, 1819], "produc": [41, 111, 148, 160, 161, 1321, 1387, 1390, 1820, 1822], "comment": [41, 42, 43, 143, 148, 153, 158], "add_reformatting_checklist_": 41, "category_nam": [41, 148, 149, 151, 154, 155], "pr": [41, 43, 143, 158, 159, 160], "belong": [41, 97, 98, 143, 168], "shown": [41, 43, 92, 93, 97, 98, 140, 141, 143, 147, 148, 150, 153, 154, 158, 159, 160, 161, 164, 166, 181, 450, 606, 609, 1090, 1171], "trigger": [41, 147], "autom": [41, 160, 1808, 1809, 1821], "bot": 41, "proper": 41, "markdown": 41, "text": [41, 43, 150, 151], "might": [41, 42, 43, 64, 65, 148, 150, 153, 156, 157, 158, 160, 161, 162, 164, 166, 167, 321, 400, 1090, 1119, 1121, 1808], "moment": [41, 66, 67, 114, 115, 145, 181, 1283, 1285, 1288, 1289, 1292, 1300, 1303], "patient": [41, 42], "modifi": [41, 42, 43, 63, 97, 98, 111, 143, 145, 148, 149, 151, 153, 155, 159, 160, 161, 164], "item": [41, 50, 54, 64, 65, 92, 93, 97, 98, 111, 112, 113, 146, 148, 164, 166, 167, 169, 321, 350, 416, 422, 1090, 1117, 1147, 1150, 1170, 1239, 1242, 1244, 1247, 1283, 1318, 1637, 1643, 1644, 1645, 1646, 1650, 1654, 1655, 1809], "symbol": [41, 42, 1819, 1820], "emoji": 41, "within": [41, 43, 50, 53, 54, 63, 111, 158, 159, 160, 168, 181, 237, 239, 240, 1661, 1677, 1680, 1815, 1816, 1820], "legend": 41, "mark": [41, 43, 143, 160, 164], "review": [41, 43, 150, 158, 161], "checkbox": [41, 42], "proce": [41, 42], "elabor": 41, "struggl": 41, "assigne": 41, "author": [41, 43, 1809, 1817, 1821], "later": [41, 97, 98, 160, 1090, 1106, 1819], "status": 41, "manual": [41, 42, 43, 147, 158, 160, 168, 1637, 1638, 1648, 1649], "refrain": 41, "transpil": [41, 158, 163, 164, 165, 1808, 1809, 1819, 1825, 1826], "locat": [41, 43, 145, 149, 158, 159, 160, 161, 237, 290, 293, 1661, 1662, 1665, 1735, 1741, 1744, 1817], "subsect": [41, 43, 143, 147], "verifi": [41, 148, 149, 158, 160, 161], "miss": [41, 42, 144, 146, 150, 153, 160], "simpler": [41, 43, 158, 1820, 1826], "titl": [41, 43, 158, 1809], "label": [41, 43, 74, 75, 122, 123, 143, 147, 158, 163, 164, 165, 169, 1535, 1536, 1539, 1541, 1542, 1545, 1547, 1550, 1819], "suggest": [41, 42, 43, 148, 158, 160, 161], "simpli": [41, 43, 45, 46, 47, 48, 49, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 95, 96, 97, 98, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 144, 145, 146, 148, 149, 150, 151, 154, 155, 157, 158, 159, 160, 162, 164, 168, 169, 181, 450, 566, 569, 631, 634, 1808, 1820, 1825], "leav": [41, 50, 53, 54, 94, 99, 100, 101, 102, 109, 110, 111, 112, 113, 124, 125, 136, 137, 146, 148, 150, 151, 154, 155, 157, 158, 160, 167, 168, 1552, 1608, 1611, 1637, 1638, 1639, 1648, 1649, 1650, 1651], "assess": [41, 162], "appropri": [41, 43, 82, 83, 92, 93, 130, 131, 140, 141, 156, 160, 450, 466, 469, 676, 679, 1688, 1689, 1692], "wait": [41, 43, 94, 97, 98, 99, 100, 158, 1090, 1233], "composit": [41, 142, 144, 145, 146, 148, 157, 159, 160, 162, 164, 168, 169, 181, 1808, 1820], "temporari": [41, 148, 1090, 1172, 1236], "merg": [41, 43, 143, 158, 1819], "close": [41, 42, 43, 151, 158, 162, 450, 566, 569, 631, 634, 716, 719, 1392, 1492, 1496, 1552, 1568, 1571, 1819], "normal": [41, 63, 78, 79, 80, 81, 111, 126, 127, 128, 129, 162, 167, 1552, 1558, 1561, 1608, 1611, 1656, 1657, 1660, 1661, 1672, 1675, 1817], "altern": [41, 42, 63, 111, 157, 158, 167, 1822], "composition": [41, 157, 158], "choos": [41, 42, 43, 82, 83, 107, 108, 160, 165, 169, 416, 441, 445, 450, 651, 654, 656, 659, 1688, 1709, 1713, 1714, 1715, 1719, 1720, 1724, 1725, 1729, 1730, 1734, 1751, 1766, 1769, 1770, 1773, 1774, 1777, 1783, 1786, 1826], "decid": [41, 42, 97, 98, 148, 162, 1637, 1638, 1639, 1648, 1649, 1650], "addit": [41, 42, 43, 64, 65, 78, 79, 107, 108, 112, 113, 126, 127, 146, 148, 150, 151, 158, 160, 161, 162, 166, 167, 169, 416, 441, 445, 450, 466, 469, 716, 719, 1090, 1122, 1125, 1127, 1130, 1132, 1135, 1282, 1656, 1657, 1660, 1819, 1820, 1821, 1825], "potenti": [41, 42, 43, 148, 158, 163, 450, 566, 569, 631, 634, 1822], "pend": 41, "show": [41, 42, 43, 97, 98, 147, 150, 157, 158, 160, 180, 181, 1090, 1171, 1229, 1235, 1276, 1809, 1819], "helpfulli": [41, 162, 1817], "prevent": [41, 43, 66, 67, 114, 115, 148, 153, 157, 158, 161, 162, 1090, 1106, 1283, 1285, 1288, 1289, 1292, 1300, 1303, 1751, 1787, 1791], "problemat": [41, 42], "unimpl": 41, "final": [41, 43, 64, 65, 112, 113, 143, 144, 148, 150, 151, 153, 155, 157, 158, 162, 163, 167, 237, 272, 275, 277, 278, 1090, 1140, 1143, 1815, 1825], "issue_link": 41, "chosen": [41, 237, 239, 240, 450, 486, 489, 1688, 1709, 1713], "correctli": [41, 42, 43, 63, 72, 73, 82, 83, 111, 120, 121, 130, 131, 146, 148, 150, 152, 153, 154, 157, 159, 160, 162, 168, 181, 1392, 1447, 1450, 1688, 1689, 1692], "alias": [41, 158, 159], "detect": [41, 42, 97, 98, 145, 146, 153, 160, 167, 168, 1637, 1638, 1649], "alias_nam": 41, "function_nam": 41, "notic": [41, 162], "alia": [41, 158, 236], "alreadi": [41, 42, 43, 97, 98, 145, 146, 148, 154, 158, 162, 181, 450, 526, 529, 571, 574, 676, 679, 716, 719, 761, 765, 1392, 1432, 1435, 1467, 1470, 1809, 1819, 1821, 1826], "push": [41, 43, 143, 153, 159, 160, 1825], "liner": 41, "meanwhil": 41, "reselect": 41, "too": [41, 42, 43, 143, 147, 148, 153, 181, 450, 466, 469, 676, 679], "placement": 41, "categoris": [41, 143, 158], "faithfulli": 41, "descript": [41, 61, 62, 72, 73, 109, 110, 120, 121, 151, 237, 239, 240, 242, 244, 252, 253, 256, 258, 259, 261, 264, 266, 267, 270, 272, 275, 277, 278, 280, 283, 295, 296, 298, 301, 303, 307, 308, 312, 313, 315, 316, 320, 321, 343, 346, 379, 382, 389, 392, 450, 451, 454, 456, 459, 461, 464, 466, 469, 471, 474, 476, 479, 481, 484, 486, 489, 491, 494, 496, 499, 501, 504, 506, 509, 516, 519, 521, 524, 526, 529, 531, 534, 536, 539, 546, 549, 551, 554, 566, 569, 571, 574, 576, 579, 581, 584, 586, 589, 591, 594, 596, 599, 601, 604, 606, 609, 616, 619, 626, 629, 631, 634, 636, 639, 641, 644, 646, 649, 651, 654, 656, 659, 661, 664, 676, 679, 681, 684, 686, 689, 691, 694, 696, 699, 711, 714, 716, 719, 721, 724, 726, 729, 731, 734, 736, 739, 741, 744, 746, 750, 751, 755, 756, 760, 761, 765, 1090, 1147, 1150, 1164, 1167, 1173, 1176, 1179, 1182, 1265, 1269, 1283, 1313, 1317, 1321, 1333, 1336, 1342, 1345, 1355, 1358, 1372, 1375, 1382, 1385, 1387, 1390, 1392, 1393, 1396, 1398, 1401, 1403, 1406, 1408, 1411, 1413, 1416, 1418, 1421, 1422, 1425, 1427, 1430, 1437, 1440, 1442, 1445, 1447, 1450, 1452, 1455, 1457, 1460, 1462, 1465, 1467, 1470, 1472, 1475, 1477, 1480, 1482, 1485, 1487, 1490, 1492, 1496, 1497, 1501, 1502, 1505, 1520, 1524, 1525, 1529, 1530, 1534, 1552, 1553, 1556, 1558, 1561, 1563, 1566, 1568, 1571, 1573, 1576, 1578, 1581, 1583, 1586, 1588, 1591, 1593, 1596, 1598, 1601, 1603, 1606, 1608, 1611, 1613, 1617, 1618, 1622, 1623, 1627, 1628, 1632, 1656, 1657, 1660, 1688, 1689, 1692, 1694, 1697, 1704, 1707, 1709, 1713, 1714, 1715, 1719, 1720, 1724, 1725, 1729, 1730, 1734, 1735, 1736, 1739, 1746, 1749, 1751, 1766, 1769, 1770, 1773, 1774, 1777, 1778, 1781, 1783, 1786, 1787, 1791, 1792, 1796, 1797, 1798, 1801, 1803, 1806], "inner": [41, 72, 73, 103, 104, 120, 121, 157, 237, 290, 293, 1392, 1418, 1421, 1422, 1425, 1442, 1445, 1633, 1634, 1635, 1636], "fall": [41, 43, 148, 163, 1809], "under": [41, 42, 43, 142, 143, 146, 150, 151, 155, 158, 159, 160, 162, 163, 164, 167, 169, 181, 1819, 1822, 1826], "linalg": [41, 157, 1392, 1482, 1485, 1809], "match": [41, 57, 58, 97, 98, 105, 106, 146, 150, 321, 328, 331, 450, 711, 714, 1090, 1214, 1820, 1825], "creation_routin": [41, 159], "fft": [41, 1819], "indexing_routin": 41, "logic": [41, 90, 91, 138, 139, 144, 148, 149, 152, 156, 158, 160, 162, 166, 416, 432, 450, 646, 649, 651, 654, 656, 659, 1797, 1798, 1801, 1803, 1806, 1809], "ma": 41, "manipulation_routin": 41, "mathematical_funct": [41, 158], "matrix": [41, 45, 48, 49, 64, 65, 70, 71, 72, 73, 112, 113, 118, 119, 120, 121, 148, 158, 237, 280, 283, 303, 307, 308, 312, 1090, 1091, 1094, 1107, 1110, 1321, 1372, 1375, 1392, 1393, 1396, 1403, 1406, 1413, 1416, 1418, 1421, 1422, 1425, 1427, 1430, 1437, 1440, 1442, 1445, 1447, 1450, 1452, 1455, 1457, 1460, 1462, 1465, 1472, 1475, 1477, 1480, 1482, 1485, 1487, 1490, 1492, 1496, 1497, 1501, 1510, 1514, 1515, 1519, 1530, 1534, 1817, 1819], "random": [41, 63, 81, 97, 98, 111, 129, 149, 160, 161, 169, 180, 1662, 1665, 1667, 1670, 1672, 1675, 1677, 1680, 1682, 1683, 1686, 1809, 1819], "sorting_searching_count": 41, "statist": [41, 89, 137, 140, 141, 148, 158, 160, 161, 1752, 1755, 1757, 1760, 1762, 1765, 1766, 1769, 1770, 1773, 1774, 1777, 1778, 1781, 1783, 1786, 1787, 1791, 1792, 1796, 1819], "ufunc": 41, "hierarchi": [41, 97, 98, 167, 1815, 1825], "decomposit": [41, 1392, 1393, 1396, 1477, 1480, 1492, 1496, 1826], "matrix_and_vector_product": 41, "matrix_eigenvalu": 41, "norms_and_other_numb": 41, "solving_equations_and_inverting_matric": 41, "product": [41, 61, 62, 72, 73, 88, 89, 109, 110, 111, 120, 121, 136, 137, 164, 450, 676, 679, 1321, 1382, 1385, 1387, 1390, 1392, 1398, 1401, 1432, 1435, 1442, 1445, 1467, 1470, 1520, 1524, 1751, 1752, 1755, 1757, 1760, 1762, 1765, 1778, 1781, 1819, 1821], "seem": [41, 42, 162, 168, 169, 181, 1819], "func": [41, 97, 98, 143, 150, 234, 235, 416, 440, 1090, 1106, 1282, 1283, 1293, 1294, 1299, 1319, 1637, 1651], "gleam": 41, "yet": [41, 42, 181], "uncom": 41, "test_numpy_inn": 41, "mirror": [41, 1819], "correspond": [41, 43, 57, 58, 61, 62, 63, 64, 65, 76, 77, 88, 89, 94, 97, 98, 99, 100, 105, 106, 109, 110, 111, 124, 125, 136, 137, 144, 145, 146, 147, 148, 150, 151, 154, 155, 156, 158, 160, 162, 164, 196, 197, 203, 321, 333, 336, 450, 486, 489, 696, 699, 1090, 1282, 1392, 1398, 1401, 1418, 1421, 1422, 1425, 1447, 1450, 1482, 1485, 1487, 1490, 1552, 1593, 1596, 1661, 1662, 1665, 1688, 1689, 1692, 1694, 1697, 1714, 1715, 1719, 1720, 1724, 1725, 1729, 1730, 1734, 1751, 1752, 1755, 1757, 1760, 1778, 1781, 1783, 1786, 1787, 1791, 1792, 1796, 1819], "ivy_test": [41, 42, 43, 143, 147, 159], "test_ivi": [41, 42, 43, 147, 159, 160], "test_frontend": [41, 159], "unsur": [41, 160], "put": [41, 160, 181, 1825], "explor": [41, 42, 43, 148, 162, 165, 169, 180, 1819, 1822], "outer": [41, 72, 73, 120, 121, 1392, 1633, 1634, 1635, 1636], "confirm": 41, "ve": [41, 42, 43, 80, 81, 128, 129, 160, 162, 163, 166, 1661, 1662, 1665, 1808, 1809], "empti": [41, 42, 64, 65, 97, 98, 112, 113, 144, 148, 149, 237, 239, 240, 1090, 1107, 1110, 1223, 1226, 1283, 1312, 1318, 1320, 1751, 1787, 1791, 1797, 1798, 1801, 1803, 1806], "along": [41, 46, 47, 63, 64, 65, 72, 73, 74, 75, 76, 77, 80, 81, 82, 83, 86, 87, 88, 89, 90, 91, 95, 96, 97, 98, 109, 110, 111, 112, 113, 120, 121, 122, 123, 124, 125, 128, 129, 130, 131, 134, 135, 136, 137, 138, 139, 150, 157, 161, 162, 164, 237, 272, 275, 277, 278, 416, 440, 1090, 1147, 1150, 1392, 1510, 1514, 1520, 1524, 1525, 1529, 1535, 1542, 1545, 1547, 1550, 1552, 1558, 1561, 1573, 1576, 1583, 1586, 1593, 1596, 1598, 1601, 1608, 1611, 1618, 1622, 1623, 1627, 1633, 1634, 1635, 1636, 1661, 1683, 1686, 1688, 1689, 1692, 1694, 1697, 1735, 1736, 1739, 1746, 1749, 1751, 1752, 1755, 1757, 1760, 1762, 1765, 1766, 1769, 1770, 1773, 1774, 1777, 1778, 1781, 1783, 1786, 1787, 1791, 1792, 1796, 1797, 1798, 1801, 1803, 1806, 1819], "backend_nam": [41, 145, 148, 149, 151, 154, 155, 156], "relevant_submodul": 41, "sometim": [41, 42, 43, 143, 148, 158, 160, 161, 162], "behav": [41, 143, 152, 157, 159, 166, 1392, 1418, 1421, 1820], "helper": [41, 147, 148, 152, 167, 321, 348, 1808], "recreat": [41, 143], "defer": [41, 144, 146, 148, 149, 155, 156, 157, 158, 160, 1825], "clearer": [41, 152, 167], "mind": [41, 144, 146, 160], "posit": [41, 43, 50, 51, 52, 61, 62, 63, 64, 65, 72, 73, 76, 77, 109, 110, 111, 112, 113, 120, 121, 124, 125, 143, 146, 156, 158, 160, 161, 167, 180, 236, 237, 258, 259, 321, 361, 364, 450, 451, 454, 591, 594, 596, 599, 676, 679, 681, 684, 706, 709, 711, 714, 1090, 1106, 1140, 1143, 1282, 1392, 1393, 1396, 1408, 1411, 1535, 1541, 1552, 1568, 1571, 1593, 1596, 1661, 1682, 1688, 1704, 1707, 1797, 1798, 1801, 1803, 1806, 1821], "keyword": [41, 50, 51, 52, 94, 97, 98, 99, 100, 146, 148, 149, 156, 157, 158, 159, 160, 161, 167, 237, 280, 283, 1090, 1097, 1106, 1214, 1270, 1637, 1644, 1751, 1787, 1791], "strategi": [41, 156, 159], "draw": [41, 80, 81, 128, 129, 143, 159, 160, 1661, 1662, 1665, 1672, 1675, 1677, 1680], "realli": [42, 146, 181, 1824, 1825], "gh": 42, "your_fold": 42, "cours": [42, 43, 143, 150, 161, 162, 167, 181, 1824, 1825], "whatev": [42, 146, 181], "elig": 42, "student": 42, "licenc": 42, "remind": 42, "account": [42, 63, 76, 77, 111, 124, 125, 151, 158, 1552, 1588, 1591], "licens": [42, 1822], "expir": 42, "abl": [42, 43, 97, 98, 143, 148, 155, 157, 158, 162, 164, 169, 1822, 1825], "profession": 42, "trial": 42, "jetbrain": 42, "valid": [42, 63, 70, 71, 90, 91, 111, 118, 119, 138, 139, 145, 148, 150, 159, 160, 321, 349, 1321, 1323, 1326, 1328, 1331, 1333, 1336, 1338, 1340, 1342, 1345, 1347, 1350, 1352, 1353, 1355, 1358, 1552, 1568, 1571, 1608, 1611, 1797, 1798, 1801, 1803, 1806, 1820], "bui": [42, 1825], "paid": 42, "pace": 42, "align": [42, 43, 63, 97, 98, 111, 158, 164, 166, 1808, 1825], "stabl": [42, 64, 65, 86, 87, 112, 113, 134, 135, 145, 148, 164, 181, 450, 716, 719, 1090, 1161, 1162, 1230, 1231, 1239, 1242, 1244, 1247, 1735, 1736, 1739, 1746, 1749], "mayb": [42, 50, 53, 54, 164, 166], "person": [42, 43], "experi": [42, 160, 165, 167, 181], "avoid": [42, 43, 145, 146, 148, 153, 156, 158, 160, 161, 450, 566, 569, 631, 634, 1090, 1106, 1819], "abil": [42, 162, 165, 181, 1819], "certain": [42, 43, 97, 98, 143, 148, 160, 162, 181, 237, 239, 240, 272, 275, 277, 278, 1823], "perhap": [42, 166, 167, 168, 181, 1825], "track": [42, 43, 143, 1637, 1650, 1819], "click": [42, 43, 147, 151, 165, 1809], "icon": [42, 43], "side": [42, 43, 86, 87, 134, 135, 1735, 1741, 1744], "left": [42, 43, 63, 72, 73, 82, 83, 86, 87, 111, 120, 121, 130, 131, 134, 135, 143, 148, 150, 450, 506, 509, 1392, 1418, 1421, 1422, 1425, 1447, 1450, 1492, 1496, 1515, 1519, 1688, 1689, 1692, 1735, 1741, 1744], "panel": 42, "drop": [42, 181], "down": [42, 160, 1808, 1819, 1825], "builtin": [42, 166, 168], "virtualenv": 42, "o": [42, 142, 164, 1090, 1214], "tick": [42, 43, 147], "test_array_api": [42, 43, 143, 160], "r": [42, 43, 63, 97, 98, 111, 142, 1283, 1293, 1392, 1477, 1480, 1552, 1623, 1627], "txt": [42, 143, 161], "visual": [42, 158, 181, 1819, 1821, 1824], "mitig": [42, 1825], "conflict": [42, 43, 158, 167], "particular": [42, 43, 143, 145, 148, 150, 156, 157, 158, 160, 161, 162, 450, 451, 454, 651, 654, 1815, 1819, 1825], "system": [42, 43, 145, 148, 181, 1392, 1487, 1490, 1817, 1819, 1822, 1824, 1826], "wsl": 42, "powershel": 42, "admin": 42, "visit": [42, 43], "deploy": [42, 1818, 1821, 1822, 1825, 1826], "top": [42, 43, 63, 76, 77, 111, 148, 158, 160, 167, 168, 1819, 1823], "press": [42, 43, 167, 1809], "ok": 42, "debug": [42, 43, 146, 147, 160, 162, 167, 1819], "dialog": 42, "invalid": [42, 90, 91, 138, 139, 148, 153, 1392, 1520, 1524, 1552, 1568, 1571, 1797, 1798, 1801, 1803, 1806], "caus": [42, 43, 143, 145, 146, 147, 148, 150, 157, 160, 181], "earlier": [42, 43], "necessari": [42, 43, 63, 76, 77, 111, 124, 125, 145, 146, 150, 156, 157, 158, 160, 162, 1552, 1588, 1591], "virtualis": 42, "sudo": 42, "apt": 42, "ca": 42, "certif": 42, "curl": 42, "gnupg": 42, "lsb": 42, "mkdir": 42, "p": [42, 43, 64, 65, 112, 113, 120, 121, 142, 237, 280, 283, 1090, 1107, 1110, 1112, 1115, 1321, 1360, 1363, 1392, 1447, 1450, 1525, 1529, 1637, 1646], "keyr": 42, "fssl": 42, "download": [42, 160], "gpg": 42, "dearmor": 42, "echo": 42, "deb": 42, "arch": 42, "dpkg": 42, "architectur": [42, 169, 181, 1817, 1818, 1819, 1822, 1823, 1824], "lsb_releas": 42, "tee": 42, "dev": [42, 59, 60, 97, 98, 107, 108, 149, 155, 166, 168, 416, 430, 436], "null": 42, "ce": 42, "cli": 42, "containerd": 42, "io": 42, "compos": [42, 146, 160, 181, 1819, 1826], "plugin": 42, "systemctl": 42, "permiss": 42, "post": [42, 78, 79, 126, 127, 169, 1656, 1657, 1660], "coupl": [42, 144, 166, 168, 1819], "unit": [42, 46, 47, 95, 96, 143, 148, 158, 159, 160, 181, 196, 198, 201, 204, 207, 214, 217, 1820, 1823], "test_ab": 42, "context": [42, 43, 70, 71, 118, 119, 150, 416, 417, 1090, 1215, 1321, 1382, 1385], "menu": 42, "editor": 42, "green": [42, 43, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 1870, 1871], "appear": [42, 43, 143, 158, 162, 1090, 1282], "pytest": [42, 43, 143, 160], "keyboard": 42, "shortcut": 42, "displai": [42, 146, 160, 167], "screenshot": 42, "ctrl": [42, 43], "shift": [42, 43, 76, 77, 94, 99, 100, 103, 104, 124, 125, 150, 154, 450, 506, 509, 516, 519, 1552, 1593, 1596], "bottom": [42, 1825], "screen": [42, 97, 98, 167], "elsewher": [42, 237, 258, 259, 1688, 1709, 1713], "test_elementwis": 42, "tab": [42, 147, 167, 1809], "progress": [42, 43, 169, 1392, 1515, 1519], "bar": 42, "shell": [42, 43], "run_tests_cli": [42, 143], "run_ivy_core_test": 42, "run_ivy_nn_test": 42, "run_ivy_stateful_test": 42, "run_test": 42, "sh": [42, 43, 143], "test_depend": 42, "test_ivy_cor": 42, "test_ivy_nn": 42, "test_ivy_st": 42, "test_": [42, 147, 159], "test_funct": [42, 43, 147, 159, 160], "test_cor": [42, 43, 147, 159], "wish": [42, 158], "ivy_cor": 42, "ivy_nn": 42, "ivy_st": 42, "dure": [42, 66, 67, 88, 89, 97, 98, 107, 108, 114, 115, 136, 137, 146, 148, 149, 152, 155, 156, 157, 158, 159, 160, 162, 181, 234, 235, 416, 441, 445, 1090, 1270, 1283, 1285, 1288, 1289, 1292, 1300, 1303, 1321, 1365, 1368, 1392, 1442, 1445, 1633, 1634, 1635, 1636, 1751, 1783, 1786, 1792, 1796, 1819, 1820, 1825], "simplest": [42, 150, 160, 162], "valu": [42, 43, 45, 48, 49, 55, 56, 57, 58, 61, 62, 63, 64, 65, 66, 67, 70, 71, 72, 73, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 94, 95, 96, 97, 98, 99, 100, 103, 104, 105, 106, 109, 110, 111, 112, 113, 114, 115, 118, 119, 120, 121, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 143, 146, 148, 149, 150, 151, 153, 154, 155, 156, 157, 158, 159, 160, 162, 164, 166, 181, 196, 229, 232, 237, 239, 240, 258, 259, 266, 267, 270, 272, 275, 277, 278, 290, 293, 321, 328, 331, 377, 400, 416, 439, 440, 450, 451, 454, 456, 459, 466, 469, 471, 474, 481, 484, 526, 529, 551, 554, 556, 559, 571, 574, 576, 579, 581, 584, 586, 589, 606, 609, 611, 614, 616, 619, 666, 669, 671, 674, 676, 679, 681, 684, 686, 689, 691, 694, 696, 699, 706, 709, 716, 719, 756, 760, 761, 765, 1090, 1106, 1107, 1110, 1112, 1115, 1117, 1119, 1121, 1140, 1143, 1147, 1150, 1152, 1155, 1160, 1169, 1170, 1178, 1179, 1182, 1184, 1187, 1194, 1218, 1221, 1223, 1226, 1230, 1231, 1233, 1249, 1253, 1274, 1277, 1281, 1282, 1283, 1285, 1288, 1289, 1292, 1293, 1300, 1303, 1312, 1318, 1320, 1321, 1323, 1326, 1328, 1331, 1333, 1336, 1338, 1340, 1342, 1345, 1347, 1350, 1352, 1353, 1355, 1358, 1377, 1380, 1382, 1385, 1387, 1390, 1392, 1408, 1411, 1447, 1450, 1452, 1455, 1457, 1460, 1472, 1475, 1477, 1480, 1482, 1485, 1487, 1490, 1492, 1496, 1497, 1501, 1525, 1529, 1552, 1553, 1556, 1558, 1561, 1563, 1566, 1583, 1586, 1588, 1591, 1628, 1632, 1633, 1634, 1635, 1637, 1640, 1642, 1643, 1644, 1645, 1646, 1651, 1654, 1655, 1656, 1657, 1660, 1661, 1662, 1665, 1667, 1670, 1672, 1675, 1677, 1680, 1682, 1688, 1689, 1692, 1694, 1697, 1709, 1713, 1714, 1715, 1719, 1720, 1724, 1725, 1729, 1730, 1734, 1735, 1736, 1739, 1741, 1744, 1746, 1749, 1751, 1752, 1755, 1757, 1760, 1766, 1769, 1770, 1773, 1774, 1777, 1778, 1781, 1783, 1786, 1787, 1791, 1792, 1796, 1819, 1820], "becaus": [42, 43, 144, 145, 146, 148, 149, 151, 154, 155, 156, 157, 158, 159, 160, 162, 164, 168, 169, 181, 1819, 1822, 1825], "header": [42, 43], "summari": [42, 43, 97, 98, 160, 321, 377, 407, 1090, 1117, 1170], "recommend": [42, 43, 145, 450, 651, 654, 656, 659, 711, 714, 1751, 1770, 1773, 1783, 1786], "advanc": [42, 1818], "q": [42, 43, 63, 111, 118, 119, 142, 181, 1321, 1387, 1390, 1392, 1418, 1421, 1422, 1425, 1477, 1480, 1637, 1646], "fix": [42, 43, 63, 111, 143, 147, 148, 160, 161], "arrow": 42, "button": [42, 43], "funcion": 42, "target": [42, 142, 159, 161, 163, 167, 168, 169, 416, 421, 1809, 1815, 1817, 1818, 1819, 1822, 1824, 1825], "test_stat": [42, 147], "test_submodule_nam": 42, "test_function_nam": 42, "debugg": 42, "studio": 42, "easiest": 42, "effici": [42, 43, 146, 153, 155, 156, 157, 160, 164, 167, 181, 1819, 1821, 1822], "afterward": [42, 167], "background": [42, 1819, 1821], "restart": 42, "corner": [42, 43, 158], "overlap": [42, 161, 162, 1820], "test_file_path": 42, "test_fn_nam": 42, "long": [42, 43, 147, 148, 150, 164, 1321, 1377, 1380, 1819], "larg": [42, 43, 63, 111, 167, 450, 466, 469, 676, 679, 1392, 1482, 1485, 1819], "gb": [42, 416, 446, 449], "engin": [42, 1819, 1821, 1822], "comma": 42, "end": [42, 43, 145, 157, 161, 162, 163, 180, 181, 237, 239, 240, 450, 486, 489, 1809, 1817, 1822], "entri": [42, 76, 77, 97, 98, 124, 125, 160, 237, 272, 275, 277, 278, 1552, 1598, 1601, 1637, 1651, 1819], "postcreatecommand": 42, "post_create_command": 42, "poststartcommand": 42, "safe": [42, 158], "containerworkspacefold": 42, "roughli": [42, 105, 106, 143, 1822], "reopen": [42, 147], "dropdown": 42, "test_fle_path": 42, "enter": [42, 43, 144, 148, 149, 154, 156, 416, 417, 1283, 1312, 1318, 1320], "forward": [42, 145, 151, 160, 161, 162, 169, 180, 181, 1819, 1820], "slash": 42, "regular": [42, 43, 158, 1819], "headach": 42, "arm": [42, 43], "m1": 42, "featur": [42, 43, 154, 158, 161, 162, 167, 181, 1321, 1365, 1368, 1809, 1819, 1820, 1821, 1825], "vm": 42, "azur": 42, "cloud": [42, 180, 1821], "mean": [42, 43, 63, 64, 65, 70, 71, 76, 77, 80, 81, 88, 89, 97, 98, 111, 112, 113, 118, 119, 124, 125, 128, 129, 136, 137, 140, 141, 142, 143, 145, 146, 148, 149, 150, 155, 157, 158, 160, 161, 162, 164, 166, 167, 168, 169, 180, 181, 416, 440, 1090, 1127, 1130, 1283, 1294, 1299, 1319, 1321, 1342, 1345, 1347, 1350, 1355, 1358, 1392, 1408, 1411, 1552, 1588, 1591, 1633, 1634, 1635, 1636, 1637, 1644, 1661, 1667, 1670, 1672, 1675, 1714, 1715, 1719, 1751, 1808, 1809, 1816, 1819], "longer": [42, 148, 156, 157, 160, 1819], "worri": 42, "agnost": [42, 144, 154, 164, 166, 169, 181, 1809, 1825, 1826], "usual": [42, 143, 158, 160, 162], "favourit": 42, "theme": 42, "unsupport": [42, 153, 158, 321, 369, 370, 416, 429, 1090, 1145, 1146], "old": [42, 97, 98, 145, 157], "slow": 42, "ipad": 42, "cool": [42, 161], "sever": [42, 43, 161, 181, 1392, 1437, 1440, 1817, 1823], "requisit": 42, "pane": [42, 43], "readi": 42, "begin": [42, 143, 159, 1637, 1638, 1649], "master": [42, 43, 143, 161, 1819], "view": [42, 43, 63, 111, 147, 237, 261, 264, 1819], "box": 42, "upto": [42, 43], "15": [42, 61, 62, 63, 80, 81, 88, 89, 94, 99, 100, 103, 104, 109, 110, 111, 112, 113, 118, 119, 124, 125, 128, 129, 136, 137, 150, 237, 267, 270, 277, 278, 321, 361, 364, 450, 466, 469, 496, 499, 516, 519, 546, 549, 641, 644, 711, 714, 716, 719, 1090, 1112, 1115, 1127, 1130, 1169, 1179, 1182, 1184, 1187, 1233, 1239, 1242, 1274, 1321, 1323, 1326, 1372, 1375, 1392, 1413, 1416, 1427, 1430, 1437, 1440, 1467, 1470, 1497, 1501, 1502, 1505, 1552, 1593, 1596, 1623, 1627, 1661, 1667, 1670, 1672, 1675, 1688, 1704, 1707, 1714, 1715, 1719, 1751, 1752, 1755, 1757, 1760, 1762, 1765, 1822], "minut": 42, "launch": 42, "12": [42, 45, 48, 49, 61, 62, 63, 64, 65, 80, 81, 88, 89, 94, 99, 100, 109, 110, 111, 112, 113, 118, 119, 120, 121, 124, 125, 126, 127, 128, 129, 136, 137, 145, 146, 148, 150, 161, 237, 277, 278, 450, 466, 469, 516, 519, 521, 524, 536, 539, 546, 549, 551, 554, 676, 679, 716, 719, 761, 765, 1090, 1112, 1115, 1127, 1130, 1162, 1223, 1226, 1231, 1239, 1242, 1321, 1372, 1375, 1392, 1413, 1416, 1447, 1450, 1467, 1470, 1502, 1505, 1510, 1514, 1535, 1541, 1552, 1573, 1576, 1593, 1596, 1623, 1627, 1656, 1657, 1660, 1661, 1667, 1670, 1672, 1675, 1688, 1709, 1713, 1714, 1715, 1719, 1751, 1752, 1755, 1762, 1765, 1778, 1781, 1787, 1791], "output": [42, 43, 45, 46, 47, 48, 49, 55, 56, 57, 58, 61, 62, 63, 64, 65, 66, 67, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 88, 89, 90, 91, 95, 96, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 134, 135, 136, 137, 138, 139, 142, 143, 144, 146, 148, 149, 150, 151, 154, 155, 156, 157, 158, 159, 160, 161, 164, 166, 168, 169, 181, 196, 198, 201, 204, 207, 209, 212, 214, 217, 219, 222, 224, 227, 229, 232, 237, 239, 240, 242, 244, 249, 251, 252, 253, 256, 258, 259, 261, 264, 266, 267, 270, 272, 275, 277, 278, 280, 283, 290, 293, 295, 296, 298, 301, 303, 307, 308, 312, 313, 315, 316, 320, 321, 328, 331, 338, 341, 400, 416, 440, 441, 445, 450, 451, 454, 456, 459, 461, 464, 466, 469, 471, 474, 476, 479, 481, 484, 486, 489, 491, 494, 496, 499, 501, 504, 506, 509, 511, 514, 516, 519, 521, 524, 526, 529, 531, 534, 536, 539, 541, 544, 546, 549, 551, 554, 556, 559, 561, 564, 566, 569, 571, 574, 576, 579, 581, 584, 586, 589, 591, 594, 596, 599, 601, 604, 606, 609, 611, 614, 621, 624, 626, 629, 631, 634, 636, 639, 641, 644, 646, 649, 651, 654, 656, 659, 661, 664, 666, 669, 671, 674, 676, 679, 681, 684, 686, 689, 691, 694, 696, 699, 701, 704, 706, 709, 711, 714, 716, 719, 721, 724, 726, 729, 731, 734, 736, 739, 741, 744, 746, 750, 751, 755, 756, 760, 761, 765, 766, 770, 1090, 1106, 1107, 1110, 1112, 1115, 1122, 1125, 1127, 1130, 1132, 1135, 1152, 1155, 1218, 1221, 1223, 1226, 1228, 1271, 1282, 1283, 1285, 1288, 1289, 1292, 1293, 1294, 1295, 1298, 1299, 1300, 1303, 1304, 1307, 1308, 1311, 1313, 1317, 1319, 1321, 1323, 1326, 1328, 1331, 1333, 1336, 1338, 1340, 1342, 1345, 1347, 1350, 1352, 1353, 1355, 1358, 1360, 1363, 1365, 1368, 1372, 1375, 1377, 1380, 1382, 1385, 1387, 1390, 1392, 1393, 1396, 1398, 1401, 1403, 1406, 1408, 1411, 1413, 1416, 1427, 1430, 1432, 1435, 1437, 1440, 1442, 1445, 1447, 1450, 1457, 1460, 1462, 1465, 1467, 1470, 1472, 1475, 1487, 1490, 1497, 1501, 1502, 1505, 1510, 1514, 1515, 1519, 1520, 1524, 1525, 1529, 1530, 1534, 1535, 1536, 1539, 1541, 1542, 1545, 1547, 1550, 1552, 1553, 1556, 1558, 1561, 1563, 1566, 1568, 1571, 1573, 1576, 1578, 1581, 1583, 1586, 1588, 1591, 1593, 1596, 1603, 1606, 1608, 1611, 1613, 1617, 1618, 1622, 1628, 1632, 1637, 1651, 1656, 1657, 1660, 1661, 1662, 1665, 1667, 1670, 1672, 1675, 1677, 1680, 1683, 1686, 1688, 1689, 1692, 1699, 1702, 1704, 1707, 1709, 1713, 1735, 1736, 1739, 1741, 1744, 1746, 1749, 1751, 1752, 1755, 1757, 1760, 1762, 1765, 1766, 1769, 1770, 1773, 1774, 1777, 1778, 1781, 1783, 1786, 1787, 1791, 1792, 1796, 1797, 1798, 1801, 1803, 1806, 1808, 1809, 1820], "That": [42, 43, 160, 166, 167, 168, 450, 711, 714, 1820], "approach": [42, 43, 146, 148, 155, 156, 160, 162, 166, 167, 181, 1816, 1823, 1825], "colour": 42, "applic": [42, 148, 149, 156, 168, 1321, 1382, 1385, 1387, 1390, 1637, 1644, 1650, 1651, 1816, 1817, 1819, 1821, 1823, 1825], "chanc": 42, "troubleshoot": 42, "ever": 42, "64": [42, 61, 62, 63, 70, 71, 94, 99, 100, 109, 110, 111, 112, 113, 118, 119, 120, 121, 128, 129, 136, 137, 167, 168, 321, 360, 450, 516, 519, 696, 699, 741, 744, 1090, 1127, 1130, 1283, 1300, 1303, 1321, 1347, 1350, 1355, 1358, 1392, 1467, 1470, 1497, 1501, 1751, 1762, 1765, 1809, 1824], "usr": 42, "flask": 42, "toolbar": [42, 43], "_array_modul": [42, 143], "array_api_test": [42, 43, 143], "refresh": 42, "conftest": 42, "nutshel": [42, 154], "hook": 42, "lint": 42, "accept": [42, 43, 50, 61, 62, 72, 73, 101, 109, 110, 144, 146, 149, 150, 151, 154, 155, 156, 157, 159, 160, 161, 166, 237, 239, 240, 242, 244, 252, 253, 256, 258, 259, 261, 264, 266, 267, 270, 272, 275, 277, 278, 280, 283, 295, 296, 298, 301, 303, 307, 308, 312, 313, 315, 316, 320, 321, 343, 346, 379, 382, 389, 392, 450, 451, 454, 456, 459, 461, 464, 466, 469, 471, 474, 476, 479, 481, 484, 486, 489, 491, 494, 496, 499, 501, 504, 506, 509, 516, 519, 521, 524, 526, 529, 531, 534, 536, 539, 546, 549, 551, 554, 566, 569, 571, 574, 576, 579, 581, 584, 586, 589, 591, 594, 596, 599, 601, 604, 606, 609, 616, 619, 626, 629, 631, 634, 636, 639, 641, 644, 646, 649, 651, 654, 656, 659, 661, 664, 676, 679, 681, 684, 686, 689, 691, 694, 696, 699, 711, 714, 716, 719, 721, 724, 726, 729, 731, 734, 736, 739, 741, 744, 746, 750, 751, 755, 756, 760, 761, 765, 1090, 1147, 1150, 1164, 1167, 1173, 1176, 1179, 1182, 1249, 1253, 1265, 1269, 1283, 1313, 1317, 1321, 1333, 1336, 1342, 1345, 1355, 1358, 1372, 1375, 1382, 1385, 1387, 1390, 1392, 1393, 1396, 1398, 1401, 1403, 1406, 1408, 1411, 1413, 1416, 1418, 1421, 1422, 1425, 1427, 1430, 1437, 1440, 1442, 1445, 1447, 1450, 1452, 1455, 1457, 1460, 1462, 1465, 1467, 1470, 1472, 1475, 1477, 1480, 1482, 1485, 1487, 1490, 1492, 1496, 1497, 1501, 1502, 1505, 1520, 1524, 1525, 1529, 1530, 1534, 1552, 1553, 1556, 1558, 1561, 1563, 1566, 1568, 1571, 1573, 1576, 1578, 1581, 1583, 1586, 1588, 1591, 1593, 1596, 1598, 1601, 1603, 1606, 1608, 1611, 1613, 1617, 1618, 1622, 1623, 1627, 1628, 1632, 1656, 1657, 1660, 1688, 1689, 1692, 1694, 1697, 1704, 1707, 1709, 1713, 1714, 1715, 1719, 1720, 1724, 1725, 1729, 1730, 1734, 1735, 1736, 1739, 1746, 1749, 1751, 1766, 1769, 1770, 1773, 1774, 1777, 1778, 1781, 1783, 1786, 1787, 1791, 1792, 1796, 1797, 1798, 1801, 1803, 1806, 1808, 1809, 1817], "attempt": [42, 153, 181], "succe": 42, "properli": [42, 142, 152, 160], "server": [43, 1819], "suitabl": [43, 111, 146, 161, 1735, 1741, 1744, 1819], "quick": [43, 142, 159, 168], "tendenc": 43, "land": 43, "world": [43, 1821], "come": [43, 158, 161, 162, 168, 179, 1808, 1809, 1819], "fly": [43, 1819], "hard": [43, 166, 1819], "receiv": [43, 148, 149, 160, 1090, 1097, 1214], "internship": 43, "bug": [43, 158, 160, 161], "serv": [43, 144, 146, 154, 155, 158, 160, 162, 163, 1808, 1809, 1817], "suspect": 43, "observ": [43, 152, 164, 1821], "act": [43, 150, 181, 1826], "placehold": [43, 144, 153, 154, 1637, 1650, 1808], "ii": [43, 88, 89, 136, 137, 1751, 1762, 1765], "iii": 43, "issue_numb": 43, "No": [43, 1819], "soon": [43, 148, 179, 181, 1809], "partial": [43, 63, 97, 98, 111, 1283, 1299], "solut": [43, 146, 148, 160, 162, 1392, 1487, 1490, 1817, 1821], "respond": 43, "shape": [43, 45, 46, 47, 48, 49, 55, 56, 57, 58, 61, 62, 63, 64, 65, 66, 67, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 95, 96, 97, 98, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 146, 148, 149, 150, 151, 154, 157, 158, 159, 160, 161, 164, 166, 167, 168, 169, 196, 198, 201, 204, 207, 209, 212, 214, 217, 219, 222, 224, 227, 229, 232, 237, 239, 240, 242, 244, 249, 251, 252, 253, 256, 258, 259, 261, 264, 266, 267, 270, 272, 275, 277, 278, 280, 283, 290, 293, 295, 296, 298, 301, 303, 307, 308, 312, 313, 315, 316, 320, 321, 328, 331, 333, 336, 338, 341, 416, 436, 441, 445, 450, 451, 454, 456, 459, 461, 464, 466, 469, 471, 474, 476, 479, 481, 484, 486, 489, 491, 494, 496, 499, 501, 504, 506, 509, 511, 514, 516, 519, 521, 524, 526, 529, 531, 534, 536, 539, 541, 544, 546, 549, 551, 554, 556, 559, 561, 564, 566, 569, 571, 574, 576, 579, 581, 584, 586, 589, 591, 594, 596, 599, 601, 604, 606, 609, 611, 614, 616, 619, 621, 624, 626, 629, 631, 634, 636, 639, 641, 644, 646, 649, 651, 654, 656, 659, 661, 664, 666, 669, 671, 674, 676, 679, 681, 684, 686, 689, 691, 694, 696, 699, 701, 704, 706, 709, 711, 714, 716, 719, 721, 724, 726, 729, 731, 734, 736, 739, 741, 744, 746, 750, 751, 755, 756, 760, 761, 765, 766, 770, 1090, 1107, 1110, 1112, 1115, 1122, 1125, 1127, 1130, 1132, 1135, 1147, 1150, 1152, 1155, 1164, 1167, 1218, 1221, 1223, 1226, 1234, 1254, 1259, 1275, 1282, 1283, 1285, 1288, 1289, 1292, 1295, 1298, 1300, 1303, 1304, 1307, 1308, 1311, 1313, 1317, 1321, 1323, 1326, 1328, 1331, 1333, 1336, 1338, 1340, 1342, 1345, 1347, 1350, 1352, 1353, 1355, 1358, 1360, 1363, 1365, 1368, 1372, 1375, 1382, 1385, 1387, 1390, 1392, 1393, 1396, 1398, 1401, 1403, 1406, 1408, 1411, 1413, 1416, 1418, 1421, 1422, 1425, 1427, 1430, 1432, 1435, 1437, 1440, 1442, 1445, 1447, 1450, 1452, 1455, 1457, 1460, 1462, 1465, 1467, 1470, 1472, 1475, 1477, 1480, 1482, 1485, 1487, 1490, 1492, 1496, 1497, 1501, 1502, 1505, 1510, 1514, 1520, 1524, 1525, 1529, 1530, 1534, 1535, 1536, 1539, 1541, 1542, 1545, 1547, 1550, 1552, 1553, 1556, 1558, 1561, 1563, 1566, 1568, 1571, 1573, 1576, 1578, 1581, 1583, 1586, 1588, 1591, 1593, 1596, 1598, 1601, 1603, 1606, 1608, 1611, 1613, 1617, 1618, 1622, 1628, 1632, 1656, 1657, 1660, 1661, 1662, 1665, 1667, 1670, 1672, 1675, 1677, 1680, 1683, 1686, 1688, 1689, 1692, 1699, 1702, 1704, 1707, 1709, 1713, 1735, 1736, 1739, 1746, 1749, 1751, 1752, 1755, 1757, 1760, 1762, 1765, 1797, 1798, 1801, 1803, 1806, 1809], "dai": [43, 147], "warn": 43, "without": [43, 97, 98, 144, 146, 148, 149, 150, 152, 153, 154, 155, 159, 160, 161, 162, 166, 167, 168, 180, 181, 1090, 1169, 1233, 1270, 1552, 1588, 1591, 1637, 1639, 1714, 1715, 1719, 1720, 1724, 1725, 1729, 1730, 1734, 1816, 1819, 1820, 1821, 1825], "likewis": [43, 146, 148, 151, 154, 155, 158, 162, 167, 1825], "freed": 43, "flag": [43, 97, 98, 148, 156, 157, 158, 159, 160, 416, 422], "remain": [43, 76, 77, 82, 83, 124, 125, 130, 131, 147, 150, 161, 162, 181, 450, 466, 469, 676, 679, 711, 714, 1321, 1365, 1368, 1552, 1588, 1591, 1637, 1644, 1688, 1704, 1707], "short": [43, 148, 158, 161, 164, 168, 1321, 1377, 1380], "basi": [43, 143, 167], "situat": [43, 169], "upon": [43, 150, 157, 160, 162, 181, 1818, 1819], "period": [43, 111, 161], "unabl": [43, 162], "obvious": 43, "never": [43, 76, 77, 124, 125, 148, 158, 160, 162, 1552, 1588, 1591], "qualiti": 43, "hypothet": 43, "frustrat": 43, "delai": 43, "busi": 43, "fine": [43, 148, 150, 158, 166, 169, 1825], "inact": 43, "me": 43, "unfairli": 43, "definit": [43, 63, 72, 73, 109, 110, 120, 121, 148, 155, 166, 1392, 1393, 1396], "investig": 43, "maximum": [43, 61, 62, 63, 64, 65, 66, 67, 76, 77, 82, 83, 88, 89, 94, 97, 98, 99, 100, 109, 110, 111, 112, 113, 114, 115, 124, 125, 130, 131, 136, 137, 150, 167, 416, 440, 450, 1090, 1107, 1110, 1112, 1115, 1140, 1143, 1283, 1300, 1303, 1392, 1447, 1450, 1552, 1553, 1556, 1637, 1650, 1688, 1689, 1692, 1751, 1766, 1769, 1774, 1777, 1809, 1826], "incomplet": 43, "three": [43, 63, 146, 150, 158, 160, 162, 163, 164, 237, 280, 283, 1809, 1820, 1825], "per": [43, 63, 70, 71, 111, 118, 119, 158, 167, 1321, 1323, 1326, 1328, 1331, 1333, 1336, 1338, 1340, 1342, 1345, 1347, 1350, 1352, 1353, 1355, 1358], "self": [43, 45, 48, 49, 55, 56, 57, 58, 61, 62, 63, 64, 65, 66, 67, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 109, 110, 111, 112, 113, 114, 115, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 144, 146, 152, 158, 159, 164, 166, 167, 168, 169, 416, 417, 1809], "assign": [43, 145, 148, 153, 157, 166], "sequenc": [43, 63, 76, 77, 88, 89, 90, 91, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 118, 119, 120, 121, 122, 123, 124, 125, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 148, 149, 150, 152, 160, 161, 164, 169, 180, 234, 235, 1090, 1214, 1282, 1392, 1525, 1529, 1552, 1558, 1561, 1568, 1571, 1573, 1576, 1588, 1591, 1593, 1596, 1598, 1601, 1603, 1606, 1608, 1611, 1637, 1645, 1654, 1751, 1766, 1769, 1770, 1773, 1774, 1777, 1778, 1781, 1783, 1786, 1787, 1791, 1792, 1796, 1797, 1798, 1801, 1803, 1806, 1822], "regist": 43, "wherea": [43, 144, 146, 148, 149, 150, 154, 155, 160, 161, 169, 1816], "primarili": [43, 146, 450, 711, 714, 1819], "invit": 43, "roadmap": [43, 147, 1809], "mainli": [43, 142, 160, 165, 167, 1808, 1819], "extend": [43, 145, 151, 154, 158, 161, 181, 1816, 1819, 1825], "ideal": [43, 157, 167], "Such": [43, 160, 1392, 1515, 1519], "easier": [43, 143, 144, 148, 158, 159, 161, 1808, 1819, 1821], "interv": [43, 80, 81, 90, 91, 128, 129, 138, 139, 237, 239, 240, 272, 275, 277, 278, 1392, 1520, 1524, 1552, 1553, 1556, 1568, 1571, 1608, 1611, 1661, 1667, 1670, 1677, 1680, 1797, 1798, 1801, 1803, 1806], "forth": 43, "rare": [43, 149, 181, 1824], "scenario": 43, "someon": [43, 181], "someth": [43, 161, 167, 168, 181, 1825], "unfortun": 43, "redund": [43, 148, 152, 158, 162], "behind": [43, 66, 67, 142, 154, 160, 163, 165], "well": [43, 112, 113, 147, 148, 157, 158, 159, 160, 168, 169, 180, 1090, 1173, 1176, 1392, 1487, 1490, 1818, 1819, 1820, 1824], "practic": [43, 147, 1822], "separ": [43, 144, 146, 160, 164, 166, 167, 1820, 1824], "branch": [43, 143, 181, 234, 235, 450, 486, 489, 1819], "role": [43, 158, 165, 1820, 1822, 1826], "kept": [43, 94, 97, 98, 99, 100, 157, 161, 1633, 1634, 1635], "date": [43, 161], "upstream": [43, 143], "complic": [43, 159, 164], "merge_with_upstream": 43, "name_of_your_branch": 43, "resolv": [43, 148, 164, 1552, 1568, 1571, 1751, 1752, 1755, 1757, 1760, 1778, 1781, 1787, 1791], "abort": 43, "tediou": [43, 150], "resolut": [43, 321, 361, 364], "stash": 43, "reinstat": 43, "fetch": [43, 143], "uncommit": 43, "unstag": 43, "untrack": 43, "comprehens": [43, 143], "atlassian": 43, "tutori": [43, 158], "wrote": 43, "piec": [43, 144, 155, 156, 164, 1815, 1817], "tag": 43, "navig": [43, 142], "blame": 43, "revis": 43, "log": [43, 61, 62, 72, 73, 109, 110, 120, 121, 146, 147, 150, 155, 157, 158, 160, 162, 164, 167, 237, 277, 278, 450, 631, 634, 641, 644, 1809], "eg": 43, "16": [43, 45, 48, 49, 61, 62, 63, 70, 71, 72, 73, 80, 81, 88, 89, 94, 99, 100, 105, 106, 109, 110, 111, 112, 113, 118, 119, 120, 121, 124, 125, 128, 129, 150, 167, 321, 372, 375, 450, 516, 519, 631, 634, 751, 755, 1283, 1319, 1321, 1355, 1358, 1372, 1375, 1392, 1393, 1396, 1413, 1416, 1427, 1430, 1467, 1470, 1497, 1501, 1552, 1623, 1627, 1637, 1646, 1688, 1709, 1713, 1751, 1757, 1760, 1762, 1765], "past": [43, 143, 159, 160, 1819], "l": [43, 72, 73, 109, 110, 120, 121, 142, 1392, 1393, 1396, 1418, 1421, 1422, 1425, 1427, 1430, 1442, 1445, 1510, 1514], "filepath": [43, 97, 98, 143], "grep": 43, "commit_id": 43, "handi": 43, "histori": 43, "toggl": 43, "vertic": [43, 111], "highlight": [43, 150, 158], "previou": [43, 66, 67, 114, 115, 143, 154, 158, 160, 162, 169, 181, 321, 411, 412, 413, 414, 1090, 1271, 1273, 1274, 1275, 1283, 1289, 1292, 1300, 1303, 1822], "whenev": [43, 147, 148, 152, 156, 160, 167], "think": [43, 150, 1820], "gain": [43, 143, 163, 168, 1819], "quit": [43, 144, 150, 151, 155, 156, 160, 162, 1819, 1825], "newli": [43, 57, 58, 105, 106, 157, 160, 234, 235, 321, 328, 331, 1090, 1106], "cannot": [43, 63, 143, 145, 148, 158, 164, 169, 1825], "least": [43, 63, 111, 144, 148, 150, 155, 160, 1392, 1442, 1445], "approv": 43, "hash": [43, 167], "cancel": 43, "speedup": 43, "unavail": 43, "tickbox": 43, "lower": [43, 55, 56, 61, 62, 63, 72, 73, 80, 81, 109, 110, 111, 120, 121, 128, 129, 150, 158, 160, 162, 164, 181, 237, 258, 259, 303, 307, 450, 666, 669, 1392, 1393, 1396, 1427, 1430, 1661, 1677, 1680, 1808, 1815, 1816, 1817, 1819, 1820, 1825, 1826], "span": [43, 162, 1817, 1825], "intent": [43, 157], "discourag": 43, "philosophi": 43, "increment": [43, 64, 65, 112, 113, 161, 1090, 1184, 1187, 1819], "valuabl": 43, "infrequ": 43, "earli": [43, 1809, 1819], "wast": 43, "spot": [43, 150, 155], "mistak": [43, 153], "propos": [43, 158, 162, 1819], "mountain": 43, "around": [43, 94, 97, 98, 99, 100, 144, 154, 155, 158, 161, 166, 181, 1808, 1817, 1819, 1826], "advoc": [43, 181], "style": [43, 1688, 1704, 1707, 1819], "were": [43, 97, 98, 105, 106, 148, 153, 160, 161, 162, 164, 1819, 1820, 1825], "actual": [43, 142, 155, 157, 160, 162, 163, 168, 181, 1820, 1825], "aim": [43, 143, 160, 163, 1817, 1819, 1822], "session": [43, 1819], "block": [43, 146, 152, 153, 155, 160, 163, 165, 169, 181, 416, 417, 1283, 1312, 1320, 1808, 1809, 1824, 1826], "smaller": [43, 76, 77, 124, 125, 164, 1552, 1553, 1556, 1593, 1596, 1751, 1752, 1755, 1757, 1760, 1778, 1781, 1787, 1791], "exact": [43, 95, 96, 97, 98, 143, 150, 164, 1714, 1715, 1719, 1725, 1729], "beauti": 43, "particularli": [43, 167, 181, 1817], "concern": [43, 142, 146, 150, 157, 162, 163, 1825], "difficult": [43, 143, 148, 160, 181, 1714, 1715, 1719, 1720, 1724, 1725, 1729, 1730, 1734], "undo": 43, "stress": 43, "frequenc": [43, 64, 65, 112, 113, 147, 1090, 1140, 1143], "advantag": [43, 157, 158, 1819], "nifti": 43, "reassur": 43, "isol": [43, 1820, 1825], "fact": [43, 143, 158, 160, 164, 167], "local_path_to_ivi": 43, "overwrit": [43, 97, 98, 157, 158, 164, 416, 440], "subfold": [43, 159, 160, 161], "wide": [43, 160, 1817, 1819], "via": [43, 143, 146, 148, 149, 157, 161, 162, 164, 166, 167, 180, 1637, 1648, 1649, 1819], "dep": 43, "fresh": 43, "arsen": 43, "declar": 43, "exec": 43, "rf": 43, "cp": 43, "ivy_contain": 43, "test_imag": 43, "test_random_crop": 43, "test_creation_funct": 43, "test_arang": 43, "variou": [43, 143, 148, 151, 152, 154, 156, 159, 160, 180, 1808, 1815, 1817, 1818, 1819, 1822, 1825], "cpu": [43, 55, 56, 59, 60, 80, 81, 107, 108, 112, 113, 128, 129, 149, 158, 160, 181, 237, 266, 272, 275, 277, 278, 290, 293, 298, 301, 316, 320, 416, 417, 420, 422, 423, 425, 427, 432, 435, 437, 438, 441, 445, 446, 448, 449, 1661, 1662, 1665, 1667, 1670, 1672, 1675, 1677, 1680, 1817, 1819, 1822, 1824], "gpu": [43, 149, 166, 416, 417, 422, 427, 431, 433, 435, 437, 438, 439, 446, 448, 449, 1817, 1819, 1822, 1823, 1824], "combin": [43, 94, 97, 98, 99, 100, 144, 146, 148, 150, 155, 160, 162, 169, 1090, 1145, 1146, 1392, 1398, 1401, 1442, 1445, 1819], "num": [43, 55, 56, 103, 104, 154, 164, 237, 272, 275, 277, 278], "integ": [43, 45, 48, 49, 61, 62, 63, 76, 77, 80, 81, 88, 89, 90, 91, 94, 97, 98, 99, 100, 109, 110, 111, 120, 121, 124, 125, 128, 129, 136, 137, 138, 139, 146, 148, 156, 159, 160, 164, 166, 237, 239, 240, 266, 321, 372, 375, 377, 389, 392, 400, 401, 404, 408, 450, 451, 454, 496, 499, 501, 504, 506, 509, 511, 514, 516, 519, 521, 524, 526, 529, 571, 574, 576, 579, 661, 664, 696, 699, 711, 714, 716, 719, 761, 765, 766, 770, 1090, 1160, 1282, 1392, 1408, 1411, 1452, 1455, 1520, 1524, 1525, 1529, 1552, 1598, 1601, 1661, 1662, 1665, 1667, 1670, 1672, 1675, 1677, 1680, 1682, 1683, 1686, 1735, 1741, 1744, 1751, 1752, 1755, 1757, 1760, 1766, 1769, 1770, 1773, 1774, 1777, 1778, 1781, 1783, 1786, 1787, 1791, 1792, 1796, 1797, 1798, 1801, 1803, 1806], "greater": [43, 45, 48, 49, 61, 62, 63, 80, 81, 94, 99, 100, 109, 110, 128, 129, 159, 450, 456, 459, 471, 474, 486, 489, 506, 509, 516, 519, 571, 574, 576, 579, 696, 699, 711, 714, 721, 724, 761, 765, 1392, 1398, 1401, 1452, 1455, 1552, 1603, 1606, 1661, 1677, 1680], "prompt": [43, 1809], "whole": 43, "multipli": [43, 61, 62, 88, 89, 109, 110, 144, 145, 146, 150, 450, 466, 469, 746, 750, 1751, 1752, 1755], "cursor": 43, "alt": 43, "j": [43, 55, 56, 63, 72, 73, 88, 89, 103, 104, 109, 110, 111, 120, 121, 142, 237, 290, 293, 1090, 1098, 1100, 1392, 1510, 1514, 1751, 1762, 1765, 1815], "blog": 43, "breakpoint": 43, "gutter": 43, "caret": 43, "f8": 43, "f9": 43, "Into": 43, "f7": 43, "smart": 43, "interest": 43, "consol": [43, 160, 166, 1090, 1217], "store": [43, 57, 58, 64, 65, 72, 73, 76, 77, 97, 98, 105, 106, 112, 113, 120, 121, 124, 125, 144, 145, 146, 151, 164, 166, 167, 168, 237, 277, 278, 298, 301, 316, 320, 1090, 1140, 1143, 1392, 1510, 1514, 1552, 1598, 1601, 1808], "variabl": [43, 64, 65, 66, 67, 78, 79, 97, 98, 112, 113, 114, 115, 126, 127, 145, 148, 151, 153, 154, 157, 160, 161, 164, 167, 168, 169, 181, 1090, 1101, 1104, 1189, 1192, 1194, 1195, 1198, 1200, 1203, 1208, 1211, 1249, 1253, 1283, 1289, 1292, 1293, 1295, 1298, 1300, 1303, 1304, 1307, 1308, 1311, 1321, 1382, 1385, 1392, 1487, 1490, 1633, 1634, 1635, 1636, 1656, 1657, 1660, 1820], "fragment": [43, 1815, 1817, 1821], "except": [43, 63, 64, 65, 76, 77, 80, 81, 90, 91, 97, 98, 111, 112, 113, 120, 121, 128, 129, 138, 139, 142, 143, 144, 148, 151, 153, 154, 157, 158, 162, 166, 181, 321, 338, 341, 1090, 1101, 1104, 1119, 1121, 1189, 1192, 1229, 1249, 1253, 1270, 1392, 1472, 1475, 1552, 1558, 1561, 1568, 1571, 1608, 1611, 1661, 1667, 1670, 1672, 1675, 1677, 1680, 1688, 1704, 1707, 1797, 1798, 1801, 1803, 1806], "pychram": 43, "depth": [43, 55, 56, 103, 104, 167, 168, 169, 180, 237, 290, 293, 1090, 1170, 1637, 1650], "dummi": 43, "wherein": [43, 156, 160], "evalu": [43, 61, 62, 97, 98, 109, 110, 111, 146, 148, 162, 450, 561, 564, 566, 569, 621, 624, 626, 629, 631, 634, 636, 639, 721, 724, 741, 744, 1283, 1319, 1637, 1648, 1649, 1797, 1798, 1801, 1803, 1806, 1819], "failur": [43, 147, 159, 160], "arraywithactiv": [45, 46, 48, 49, 166], "arraywithcr": [45, 48, 49, 55, 166], "arraywithdatatyp": [45, 48, 49, 57, 166], "arraywithdevic": [45, 48, 49, 59, 166], "arraywithgener": [45, 48, 49, 64, 166], "arraywithgradi": [45, 48, 49, 66, 166], "arraywithimag": [45, 48, 49, 68, 166], "arraywithlay": [45, 48, 49, 70, 166], "arraywithlinearalgebra": [45, 48, 49, 72, 166], "arraywithloss": [45, 48, 49, 74, 166], "arraywithmanipul": [45, 48, 49, 76, 166], "arraywithnorm": [45, 48, 49, 78, 166], "arraywithrandom": [45, 48, 49, 80, 166], "arraywithsearch": [45, 48, 49, 82, 166], "arraywithset": [45, 48, 49, 84, 166], "arraywithsort": [45, 48, 49, 86, 166], "arraywithstatist": [45, 48, 49, 88, 166], "arraywithutil": [45, 48, 49, 90, 166], "arraywithactivationsexperiment": [45, 48, 49, 63], "arraywithconversionsexperiment": [45, 48, 49, 63], "arraywithcreationexperiment": [45, 48, 49, 63], "arraywithdata_typeexperiment": [45, 48, 49, 63], "arraywithdeviceexperiment": [45, 48, 49, 63], "arraywithelementwiseexperiment": [45, 48, 49, 63], "arraywithgeneralexperiment": [45, 48, 49, 63], "arraywithgradientsexperiment": [45, 48, 49, 63], "arraywithimageexperiment": [45, 48, 49, 63], "arraywithlayersexperiment": [45, 48, 49, 63], "arraywithlinearalgebraexperiment": [45, 48, 49, 63], "arraywithlossesexperiment": [45, 48, 49, 63], "arraywithmanipulationexperiment": [45, 48, 49, 63], "arraywithnormsexperiment": [45, 48, 49, 63], "arraywithrandomexperiment": [45, 48, 49, 63], "arraywithsearchingexperiment": [45, 48, 49, 63], "arraywithsetexperiment": [45, 48, 49, 63], "arraywithsortingexperiment": [45, 48, 49, 63], "arraywithstatisticalexperiment": [45, 48, 49, 63], "arraywithutilityexperiment": [45, 48, 49, 63], "properti": [45, 48, 49, 97, 98, 143, 146, 150, 155, 159, 160, 166, 167, 168, 1825], "transpos": [45, 48, 49, 72, 73, 97, 98, 120, 121, 157, 166, 169, 1321, 1322, 1328, 1331, 1338, 1340, 1347, 1350, 1352, 1353, 1392, 1462, 1465, 1472, 1475, 1809], "dimension": [45, 48, 49, 63, 72, 73, 76, 77, 82, 83, 88, 89, 90, 91, 97, 98, 109, 110, 111, 120, 121, 124, 125, 136, 137, 138, 139, 164, 237, 239, 240, 258, 259, 280, 283, 1392, 1398, 1401, 1403, 1406, 1432, 1435, 1442, 1445, 1457, 1460, 1467, 1470, 1472, 1475, 1520, 1524, 1525, 1529, 1552, 1598, 1601, 1688, 1689, 1692, 1694, 1697, 1704, 1707, 1751, 1766, 1769, 1770, 1773, 1774, 1777, 1778, 1781, 1783, 1786, 1787, 1791, 1792, 1796, 1797, 1798, 1801, 1803, 1806, 1816, 1819, 1826], "whose": [45, 48, 49, 55, 56, 61, 62, 63, 64, 65, 72, 73, 76, 77, 84, 85, 88, 89, 103, 104, 109, 110, 111, 112, 113, 120, 121, 124, 125, 132, 133, 136, 137, 151, 160, 237, 303, 307, 308, 312, 450, 461, 464, 476, 479, 491, 494, 531, 534, 536, 539, 541, 544, 696, 699, 701, 704, 726, 729, 731, 734, 751, 755, 756, 760, 1090, 1106, 1249, 1253, 1392, 1393, 1396, 1403, 1406, 1413, 1416, 1418, 1421, 1422, 1425, 1427, 1430, 1432, 1435, 1437, 1440, 1447, 1450, 1452, 1455, 1457, 1460, 1462, 1465, 1467, 1470, 1472, 1475, 1477, 1480, 1482, 1485, 1487, 1490, 1492, 1496, 1497, 1501, 1510, 1514, 1552, 1573, 1576, 1593, 1596, 1714, 1715, 1719, 1720, 1724, 1725, 1729, 1751, 1762, 1765], "dimens": [45, 48, 49, 55, 56, 63, 64, 65, 70, 71, 72, 73, 74, 75, 76, 77, 80, 81, 82, 83, 84, 85, 88, 89, 90, 91, 94, 97, 98, 99, 100, 103, 104, 111, 112, 113, 118, 119, 120, 121, 122, 123, 124, 125, 128, 129, 130, 131, 132, 133, 136, 137, 138, 139, 150, 152, 158, 159, 160, 162, 164, 167, 196, 209, 212, 224, 227, 237, 290, 293, 303, 307, 308, 312, 1090, 1122, 1125, 1127, 1130, 1132, 1135, 1140, 1143, 1164, 1167, 1282, 1321, 1323, 1326, 1328, 1331, 1333, 1336, 1338, 1340, 1342, 1345, 1347, 1350, 1352, 1353, 1355, 1358, 1377, 1380, 1392, 1393, 1396, 1398, 1401, 1403, 1406, 1413, 1416, 1418, 1421, 1422, 1425, 1427, 1430, 1437, 1440, 1442, 1445, 1447, 1450, 1452, 1455, 1457, 1460, 1462, 1465, 1472, 1475, 1477, 1480, 1482, 1485, 1487, 1490, 1492, 1496, 1497, 1501, 1510, 1514, 1520, 1524, 1525, 1529, 1535, 1542, 1545, 1547, 1550, 1552, 1558, 1561, 1568, 1571, 1573, 1576, 1578, 1581, 1583, 1586, 1588, 1591, 1593, 1596, 1598, 1601, 1603, 1606, 1608, 1611, 1623, 1627, 1633, 1634, 1635, 1636, 1661, 1683, 1686, 1688, 1689, 1692, 1694, 1697, 1704, 1707, 1714, 1715, 1719, 1720, 1724, 1725, 1729, 1730, 1734, 1751, 1762, 1765, 1766, 1769, 1770, 1773, 1774, 1777, 1778, 1781, 1783, 1786, 1787, 1791, 1792, 1796, 1797, 1798, 1801, 1803, 1806], "ax": [45, 46, 47, 48, 49, 63, 72, 73, 76, 77, 82, 83, 88, 89, 90, 91, 95, 96, 111, 120, 121, 124, 125, 130, 131, 136, 137, 138, 139, 148, 150, 160, 161, 164, 166, 416, 440, 1090, 1282, 1392, 1447, 1450, 1487, 1490, 1502, 1505, 1506, 1509, 1525, 1529, 1552, 1563, 1566, 1573, 1576, 1578, 1581, 1593, 1596, 1603, 1606, 1613, 1617, 1628, 1632, 1688, 1689, 1692, 1694, 1697, 1751, 1766, 1769, 1770, 1773, 1774, 1777, 1778, 1781, 1783, 1786, 1787, 1791, 1792, 1796, 1797, 1798, 1801, 1803, 1806], "permut": [45, 48, 49, 76, 77, 124, 125, 1552, 1578, 1581, 1613, 1617], "__abs__": [45, 48, 49, 94, 99, 100], "variant": [45, 46, 47, 48, 49, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 95, 96, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 150, 151, 162], "ab": [45, 48, 49, 61, 62, 94, 99, 100, 109, 110, 148, 156, 158, 160, 450, 696, 699, 1392, 1447, 1450, 1497, 1501, 1525, 1529, 1637, 1646, 1649, 1809], "wrap": [45, 46, 47, 48, 49, 50, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 153, 154, 155, 157, 158, 160, 164, 166, 169, 181, 182, 194, 1090, 1106, 1171, 1235, 1276, 1808, 1815, 1819, 1820, 1825, 1826], "minim": [45, 46, 47, 48, 49, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 95, 96, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 151, 157, 159, 162, 164, 1817, 1825], "input": [45, 46, 47, 48, 49, 50, 53, 54, 55, 56, 57, 58, 61, 62, 63, 64, 65, 66, 67, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 143, 144, 145, 146, 148, 149, 150, 151, 155, 156, 157, 158, 159, 160, 161, 162, 164, 166, 167, 168, 169, 181, 182, 194, 196, 197, 198, 201, 203, 204, 207, 209, 212, 214, 217, 219, 222, 224, 227, 229, 232, 234, 235, 237, 239, 240, 242, 244, 249, 251, 252, 253, 256, 258, 259, 261, 264, 266, 267, 270, 272, 275, 277, 278, 280, 283, 285, 288, 290, 293, 295, 296, 298, 301, 303, 307, 308, 312, 313, 315, 316, 320, 321, 328, 331, 333, 336, 338, 341, 343, 346, 348, 349, 351, 352, 354, 355, 356, 358, 360, 361, 364, 372, 375, 379, 382, 384, 387, 389, 392, 394, 397, 399, 400, 401, 404, 406, 408, 410, 416, 420, 422, 423, 425, 440, 441, 445, 450, 451, 454, 456, 459, 461, 464, 466, 469, 471, 474, 476, 479, 481, 484, 486, 489, 491, 494, 496, 499, 501, 504, 506, 509, 511, 514, 516, 519, 521, 524, 526, 529, 531, 534, 536, 539, 541, 544, 546, 549, 551, 554, 556, 559, 561, 564, 566, 569, 571, 574, 576, 579, 581, 584, 586, 589, 591, 594, 596, 599, 601, 604, 606, 609, 611, 614, 616, 619, 621, 624, 626, 629, 631, 634, 636, 639, 641, 644, 646, 649, 651, 654, 656, 659, 661, 664, 666, 669, 671, 674, 676, 679, 681, 684, 686, 689, 691, 694, 696, 699, 701, 704, 706, 709, 711, 714, 716, 719, 721, 724, 726, 729, 731, 734, 736, 739, 741, 744, 746, 750, 751, 755, 756, 760, 761, 765, 766, 770, 1090, 1091, 1094, 1096, 1098, 1100, 1101, 1104, 1107, 1110, 1112, 1115, 1119, 1121, 1122, 1125, 1127, 1130, 1132, 1135, 1137, 1139, 1140, 1143, 1147, 1150, 1152, 1155, 1163, 1164, 1167, 1173, 1176, 1179, 1182, 1184, 1187, 1189, 1192, 1195, 1198, 1200, 1203, 1205, 1207, 1208, 1211, 1218, 1221, 1223, 1226, 1228, 1232, 1237, 1239, 1242, 1249, 1253, 1254, 1255, 1258, 1259, 1260, 1264, 1265, 1269, 1271, 1273, 1277, 1281, 1282, 1283, 1285, 1288, 1289, 1292, 1293, 1294, 1295, 1298, 1299, 1300, 1303, 1304, 1307, 1308, 1311, 1313, 1317, 1319, 1321, 1323, 1326, 1328, 1331, 1333, 1336, 1338, 1340, 1342, 1345, 1347, 1350, 1352, 1353, 1355, 1358, 1360, 1363, 1365, 1368, 1372, 1375, 1377, 1380, 1382, 1385, 1387, 1390, 1392, 1393, 1396, 1398, 1401, 1403, 1406, 1408, 1411, 1413, 1416, 1418, 1421, 1422, 1425, 1427, 1430, 1432, 1435, 1437, 1440, 1442, 1445, 1447, 1450, 1452, 1455, 1457, 1460, 1462, 1465, 1467, 1470, 1472, 1475, 1477, 1480, 1482, 1485, 1487, 1490, 1492, 1496, 1497, 1501, 1502, 1505, 1510, 1514, 1515, 1519, 1520, 1524, 1525, 1529, 1530, 1534, 1535, 1536, 1539, 1541, 1542, 1545, 1547, 1550, 1552, 1553, 1556, 1558, 1561, 1563, 1566, 1568, 1571, 1573, 1576, 1578, 1581, 1583, 1586, 1588, 1591, 1593, 1596, 1598, 1601, 1603, 1606, 1608, 1611, 1613, 1617, 1618, 1622, 1623, 1627, 1628, 1632, 1633, 1634, 1635, 1636, 1637, 1639, 1641, 1644, 1645, 1646, 1647, 1649, 1651, 1654, 1655, 1656, 1657, 1660, 1661, 1662, 1665, 1667, 1670, 1672, 1675, 1677, 1680, 1683, 1686, 1688, 1689, 1692, 1694, 1697, 1699, 1702, 1704, 1707, 1709, 1713, 1714, 1715, 1719, 1720, 1724, 1725, 1729, 1730, 1734, 1735, 1736, 1739, 1741, 1744, 1746, 1749, 1751, 1752, 1755, 1757, 1760, 1762, 1765, 1766, 1769, 1770, 1773, 1774, 1777, 1778, 1781, 1783, 1786, 1787, 1791, 1792, 1796, 1797, 1798, 1801, 1803, 1806, 1820, 1823], "numer": [45, 48, 49, 57, 58, 61, 62, 64, 65, 72, 73, 80, 81, 82, 83, 88, 89, 94, 99, 100, 105, 106, 109, 110, 112, 113, 120, 121, 128, 129, 130, 131, 134, 135, 148, 156, 158, 159, 160, 161, 162, 164, 168, 237, 280, 283, 321, 328, 331, 450, 451, 454, 466, 469, 526, 529, 546, 549, 566, 569, 571, 574, 576, 579, 591, 594, 596, 599, 601, 604, 611, 614, 651, 654, 656, 659, 676, 679, 686, 689, 696, 699, 711, 714, 721, 724, 741, 744, 746, 750, 761, 765, 766, 770, 1090, 1161, 1162, 1230, 1231, 1239, 1242, 1244, 1247, 1392, 1398, 1401, 1432, 1435, 1442, 1445, 1467, 1470, 1482, 1485, 1492, 1496, 1502, 1505, 1510, 1514, 1520, 1524, 1661, 1667, 1670, 1672, 1675, 1677, 1680, 1683, 1686, 1688, 1689, 1692, 1694, 1697, 1751, 1766, 1769, 1778, 1781, 1787, 1791, 1816, 1819, 1825], "element": [45, 46, 47, 48, 49, 55, 56, 61, 62, 63, 64, 65, 72, 73, 76, 77, 80, 81, 82, 83, 84, 85, 88, 89, 94, 95, 96, 97, 98, 99, 100, 103, 104, 109, 110, 111, 112, 113, 120, 121, 124, 125, 128, 129, 130, 131, 132, 133, 136, 137, 151, 159, 160, 162, 164, 196, 198, 201, 204, 207, 209, 212, 214, 217, 219, 222, 224, 227, 229, 232, 237, 239, 240, 249, 251, 266, 267, 270, 303, 307, 308, 312, 450, 451, 454, 456, 459, 461, 464, 466, 469, 471, 474, 476, 479, 481, 484, 486, 489, 491, 494, 496, 499, 501, 504, 506, 509, 511, 514, 516, 519, 521, 524, 526, 529, 531, 534, 536, 539, 541, 544, 546, 549, 551, 554, 556, 559, 561, 564, 566, 569, 571, 574, 576, 579, 581, 584, 586, 589, 591, 594, 596, 599, 601, 604, 606, 609, 611, 614, 616, 619, 621, 624, 626, 629, 631, 634, 636, 639, 641, 644, 646, 649, 651, 654, 656, 659, 661, 664, 666, 669, 671, 674, 676, 679, 681, 684, 686, 689, 691, 694, 696, 699, 701, 704, 706, 709, 711, 714, 716, 719, 721, 724, 726, 729, 731, 734, 736, 739, 741, 744, 746, 750, 751, 755, 756, 760, 761, 765, 766, 770, 1090, 1098, 1100, 1107, 1110, 1112, 1115, 1147, 1150, 1260, 1264, 1265, 1269, 1283, 1312, 1320, 1321, 1360, 1363, 1392, 1398, 1401, 1408, 1411, 1418, 1421, 1422, 1425, 1442, 1445, 1477, 1480, 1482, 1485, 1492, 1496, 1552, 1553, 1556, 1573, 1576, 1583, 1586, 1588, 1591, 1593, 1596, 1598, 1601, 1603, 1606, 1637, 1638, 1641, 1647, 1661, 1662, 1665, 1688, 1699, 1702, 1704, 1707, 1709, 1713, 1714, 1715, 1719, 1720, 1724, 1725, 1729, 1730, 1734, 1735, 1741, 1744, 1746, 1749, 1751, 1752, 1755, 1757, 1760, 1762, 1765, 1766, 1769, 1770, 1773, 1774, 1777, 1778, 1781, 1783, 1786, 1787, 1791, 1792, 1796, 1797, 1798, 1801, 1803, 1806, 1823], "__add__": [45, 48, 49, 94, 99, 100, 144, 146, 150, 151, 154, 158, 159, 166], "broadcast": [45, 46, 47, 48, 49, 55, 56, 57, 58, 61, 62, 63, 64, 65, 66, 67, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 88, 89, 90, 91, 94, 95, 96, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 134, 135, 136, 137, 138, 139, 146, 148, 150, 151, 160, 161, 164, 196, 198, 201, 204, 207, 209, 212, 214, 217, 219, 222, 224, 227, 229, 232, 237, 239, 240, 242, 244, 249, 251, 252, 253, 256, 258, 259, 261, 264, 266, 267, 270, 272, 275, 277, 278, 290, 293, 295, 296, 298, 301, 303, 307, 308, 312, 313, 315, 316, 320, 321, 328, 331, 333, 336, 338, 341, 416, 441, 445, 450, 451, 454, 456, 459, 461, 464, 466, 469, 471, 474, 476, 479, 481, 484, 486, 489, 491, 494, 496, 499, 501, 504, 506, 509, 511, 514, 516, 519, 521, 524, 526, 529, 531, 534, 536, 539, 541, 544, 546, 549, 551, 554, 556, 559, 561, 564, 566, 569, 571, 574, 576, 579, 581, 584, 586, 589, 591, 594, 596, 599, 601, 604, 606, 609, 611, 614, 616, 619, 621, 624, 626, 629, 631, 634, 636, 639, 641, 644, 646, 649, 651, 654, 656, 659, 661, 664, 666, 669, 671, 674, 676, 679, 681, 684, 686, 689, 691, 694, 696, 699, 701, 704, 706, 709, 711, 714, 716, 719, 721, 724, 726, 729, 731, 734, 736, 739, 741, 744, 746, 750, 751, 755, 756, 760, 761, 765, 766, 770, 1090, 1107, 1110, 1112, 1115, 1122, 1125, 1127, 1130, 1132, 1135, 1147, 1150, 1152, 1155, 1218, 1221, 1223, 1226, 1283, 1285, 1288, 1289, 1292, 1295, 1298, 1300, 1303, 1304, 1307, 1308, 1311, 1313, 1317, 1321, 1323, 1326, 1328, 1331, 1333, 1336, 1338, 1340, 1342, 1345, 1347, 1350, 1352, 1353, 1355, 1358, 1360, 1363, 1365, 1368, 1372, 1375, 1382, 1385, 1387, 1390, 1392, 1393, 1396, 1398, 1401, 1403, 1406, 1408, 1411, 1413, 1416, 1427, 1430, 1432, 1435, 1437, 1440, 1442, 1445, 1447, 1450, 1457, 1460, 1462, 1465, 1467, 1470, 1472, 1475, 1487, 1490, 1497, 1501, 1502, 1505, 1510, 1514, 1520, 1524, 1525, 1529, 1530, 1534, 1535, 1536, 1539, 1541, 1542, 1545, 1547, 1550, 1552, 1553, 1556, 1558, 1561, 1563, 1566, 1568, 1571, 1573, 1576, 1578, 1581, 1583, 1586, 1588, 1591, 1593, 1596, 1603, 1606, 1608, 1611, 1613, 1617, 1618, 1622, 1628, 1632, 1656, 1657, 1660, 1661, 1662, 1665, 1667, 1670, 1672, 1675, 1677, 1680, 1683, 1686, 1688, 1689, 1692, 1694, 1697, 1699, 1702, 1709, 1713, 1714, 1730, 1734, 1751, 1752, 1755, 1757, 1760, 1766, 1769, 1770, 1773, 1774, 1777, 1778, 1781, 1783, 1786, 1787, 1791, 1792, 1796, 1797, 1798, 1801, 1803, 1806], "wise": [45, 46, 47, 48, 49, 61, 62, 63, 72, 73, 94, 95, 96, 99, 100, 109, 110, 111, 120, 121, 162, 196, 198, 201, 204, 207, 209, 212, 214, 217, 219, 222, 224, 227, 229, 232, 450, 451, 454, 456, 459, 466, 469, 471, 474, 481, 484, 486, 489, 496, 499, 501, 504, 506, 509, 511, 514, 516, 519, 521, 524, 546, 549, 551, 554, 556, 559, 576, 579, 581, 584, 586, 589, 611, 614, 616, 619, 641, 644, 646, 649, 651, 654, 656, 659, 661, 664, 666, 669, 671, 674, 676, 679, 686, 689, 696, 699, 711, 714, 746, 750, 766, 770, 1321, 1365, 1368, 1552, 1553, 1556], "sum": [45, 48, 49, 61, 62, 63, 64, 65, 72, 73, 74, 75, 88, 89, 94, 97, 98, 99, 100, 109, 110, 111, 112, 113, 120, 121, 122, 123, 136, 137, 146, 148, 155, 157, 164, 416, 440, 450, 466, 469, 641, 644, 1090, 1127, 1130, 1218, 1221, 1223, 1226, 1321, 1387, 1390, 1392, 1447, 1450, 1492, 1496, 1510, 1514, 1525, 1529, 1535, 1542, 1545, 1547, 1550, 1751, 1757, 1760, 1762, 1765], "promot": [45, 48, 49, 57, 58, 61, 62, 63, 72, 73, 94, 99, 100, 105, 106, 109, 110, 111, 120, 121, 134, 135, 143, 151, 152, 155, 321, 328, 331, 343, 346, 399, 400, 401, 404, 410, 450, 456, 459, 461, 464, 466, 469, 471, 474, 476, 479, 481, 484, 491, 494, 496, 499, 506, 509, 511, 514, 516, 519, 521, 524, 531, 534, 536, 539, 546, 549, 561, 564, 566, 569, 621, 624, 626, 629, 631, 634, 636, 639, 641, 644, 661, 664, 676, 679, 696, 699, 711, 714, 726, 729, 731, 734, 736, 739, 751, 755, 756, 760, 766, 770, 1392, 1393, 1396, 1398, 1401, 1432, 1435, 1437, 1440, 1442, 1445, 1452, 1455, 1457, 1460, 1467, 1470, 1472, 1475, 1482, 1485, 1487, 1490, 1520, 1524, 1525, 1529, 1552, 1558, 1561, 1608, 1611, 1751, 1770, 1773, 1783, 1786], "y": [45, 46, 47, 48, 49, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 70, 71, 72, 73, 74, 75, 76, 77, 80, 81, 84, 85, 86, 87, 88, 89, 90, 91, 94, 95, 96, 99, 100, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 118, 119, 120, 121, 122, 123, 124, 125, 128, 129, 132, 133, 134, 135, 136, 137, 138, 139, 145, 146, 150, 158, 159, 160, 161, 162, 164, 166, 196, 198, 201, 204, 207, 209, 212, 214, 217, 219, 222, 224, 227, 229, 232, 237, 249, 251, 267, 270, 277, 278, 280, 283, 295, 296, 298, 301, 316, 320, 321, 328, 331, 333, 336, 338, 341, 356, 358, 361, 364, 372, 375, 401, 404, 416, 423, 425, 430, 434, 435, 436, 439, 449, 450, 451, 454, 456, 459, 461, 464, 466, 469, 471, 474, 476, 479, 481, 484, 486, 489, 491, 494, 496, 499, 501, 504, 511, 514, 516, 519, 521, 524, 526, 529, 531, 534, 536, 539, 541, 544, 546, 549, 551, 554, 561, 564, 566, 569, 571, 574, 576, 579, 581, 584, 586, 589, 591, 594, 611, 614, 616, 619, 621, 624, 626, 629, 631, 634, 641, 644, 646, 649, 651, 654, 656, 659, 661, 664, 666, 669, 671, 674, 676, 679, 681, 684, 686, 689, 691, 694, 696, 699, 701, 704, 711, 714, 716, 719, 721, 724, 726, 729, 731, 734, 736, 739, 741, 744, 746, 750, 751, 755, 756, 760, 761, 765, 766, 770, 1090, 1091, 1094, 1098, 1100, 1107, 1110, 1112, 1115, 1119, 1121, 1137, 1139, 1147, 1150, 1152, 1155, 1169, 1173, 1176, 1179, 1182, 1184, 1187, 1230, 1231, 1233, 1236, 1237, 1239, 1242, 1249, 1253, 1255, 1258, 1260, 1264, 1265, 1269, 1270, 1274, 1277, 1281, 1282, 1283, 1313, 1317, 1321, 1347, 1350, 1355, 1358, 1372, 1375, 1392, 1393, 1396, 1398, 1401, 1403, 1406, 1427, 1430, 1437, 1440, 1442, 1445, 1447, 1450, 1462, 1465, 1467, 1470, 1472, 1475, 1482, 1485, 1497, 1501, 1502, 1505, 1510, 1514, 1535, 1536, 1539, 1541, 1542, 1545, 1547, 1550, 1552, 1553, 1556, 1558, 1561, 1563, 1566, 1568, 1571, 1573, 1576, 1578, 1581, 1583, 1586, 1588, 1591, 1593, 1596, 1598, 1601, 1603, 1606, 1608, 1611, 1613, 1617, 1618, 1622, 1623, 1627, 1637, 1641, 1644, 1645, 1647, 1654, 1656, 1657, 1660, 1661, 1662, 1665, 1667, 1670, 1672, 1675, 1677, 1680, 1683, 1686, 1688, 1689, 1692, 1694, 1697, 1699, 1702, 1704, 1707, 1709, 1713, 1714, 1720, 1724, 1725, 1729, 1735, 1736, 1739, 1741, 1744, 1746, 1749, 1751, 1752, 1755, 1757, 1760, 1762, 1765, 1766, 1769, 1770, 1773, 1774, 1777, 1778, 1781, 1783, 1786, 1787, 1791, 1792, 1796, 1797, 1798, 1801, 1803, 1806], "z": [45, 48, 49, 61, 62, 64, 65, 72, 73, 74, 75, 80, 81, 88, 89, 94, 99, 100, 109, 110, 112, 113, 120, 121, 122, 123, 128, 129, 136, 137, 145, 146, 150, 164, 166, 416, 430, 450, 466, 469, 486, 489, 496, 499, 511, 514, 521, 524, 581, 584, 586, 589, 596, 599, 601, 604, 606, 609, 611, 614, 616, 619, 641, 644, 656, 659, 661, 664, 666, 669, 671, 674, 746, 750, 1090, 1098, 1100, 1147, 1150, 1152, 1155, 1179, 1182, 1184, 1187, 1223, 1226, 1237, 1239, 1242, 1270, 1282, 1392, 1398, 1401, 1442, 1445, 1535, 1536, 1539, 1541, 1542, 1545, 1552, 1553, 1556, 1637, 1641, 1645, 1647, 1654, 1661, 1672, 1675, 1677, 1680, 1688, 1689, 1692, 1751, 1762, 1765, 1766, 1769, 1774, 1777, 1778, 1781, 1783, 1786], "__eq__": [45, 48, 49, 94, 99, 100], "equal": [45, 48, 49, 55, 56, 57, 58, 61, 62, 63, 64, 65, 72, 73, 76, 77, 80, 81, 86, 87, 88, 89, 94, 97, 98, 99, 100, 105, 106, 109, 110, 111, 112, 113, 120, 121, 124, 125, 128, 129, 134, 135, 146, 148, 150, 152, 160, 237, 258, 259, 266, 267, 270, 321, 328, 331, 450, 506, 509, 516, 519, 591, 594, 596, 599, 696, 699, 716, 719, 1090, 1091, 1094, 1098, 1100, 1282, 1392, 1413, 1416, 1452, 1455, 1457, 1460, 1472, 1475, 1482, 1485, 1535, 1541, 1552, 1553, 1556, 1563, 1566, 1598, 1601, 1628, 1632, 1661, 1677, 1680, 1714, 1715, 1719, 1720, 1724, 1725, 1729, 1730, 1734, 1735, 1736, 1739, 1746, 1749, 1751, 1770, 1773, 1783, 1786, 1787, 1791, 1792, 1796], "bool": [45, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 61, 62, 63, 64, 65, 66, 67, 72, 73, 76, 77, 80, 81, 82, 83, 86, 87, 88, 89, 90, 91, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 118, 119, 120, 121, 122, 123, 124, 125, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 148, 150, 152, 157, 158, 160, 161, 164, 169, 196, 198, 201, 234, 235, 237, 242, 244, 266, 272, 275, 280, 283, 321, 328, 331, 343, 346, 348, 350, 351, 352, 354, 355, 356, 358, 366, 367, 369, 370, 377, 378, 379, 382, 384, 387, 389, 392, 394, 397, 399, 406, 411, 415, 416, 422, 423, 425, 431, 432, 435, 436, 440, 447, 449, 450, 496, 499, 501, 504, 511, 514, 521, 524, 551, 554, 581, 584, 586, 589, 591, 594, 596, 599, 601, 604, 606, 609, 611, 614, 616, 619, 646, 649, 651, 654, 656, 659, 666, 669, 671, 674, 686, 689, 711, 714, 1090, 1091, 1094, 1098, 1100, 1101, 1104, 1119, 1121, 1137, 1139, 1140, 1143, 1158, 1163, 1164, 1167, 1171, 1173, 1176, 1189, 1192, 1195, 1198, 1200, 1203, 1205, 1207, 1208, 1211, 1213, 1214, 1237, 1238, 1249, 1253, 1260, 1264, 1277, 1281, 1283, 1289, 1292, 1295, 1298, 1300, 1303, 1304, 1307, 1308, 1311, 1312, 1313, 1317, 1320, 1321, 1360, 1363, 1365, 1368, 1392, 1393, 1396, 1447, 1450, 1492, 1496, 1515, 1519, 1525, 1529, 1552, 1588, 1591, 1598, 1601, 1623, 1627, 1633, 1634, 1635, 1636, 1637, 1638, 1639, 1644, 1648, 1649, 1650, 1661, 1662, 1665, 1688, 1689, 1692, 1694, 1697, 1704, 1707, 1735, 1736, 1739, 1746, 1749, 1751, 1752, 1755, 1757, 1760, 1766, 1769, 1770, 1773, 1774, 1777, 1778, 1781, 1783, 1786, 1787, 1791, 1792, 1796, 1797, 1798, 1801, 1803, 1806], "__ge__": [45, 48, 49, 94, 99, 100], "greater_equ": [45, 48, 49, 61, 62, 94, 99, 100, 109, 110, 450], "bitwise_xor": [45, 48, 49, 61, 62, 109, 110, 450], "mix": [45, 48, 49, 57, 58, 61, 62, 94, 99, 100, 105, 106, 109, 110, 112, 113, 122, 123, 128, 129, 142, 150, 157, 160, 162, 164, 321, 333, 336, 401, 404, 450, 496, 499, 511, 514, 516, 519, 521, 524, 546, 549, 551, 554, 576, 579, 581, 584, 586, 589, 611, 614, 661, 664, 676, 679, 686, 689, 711, 714, 1090, 1137, 1139, 1147, 1150, 1152, 1155, 1255, 1258, 1265, 1269, 1321, 1323, 1326, 1333, 1336, 1347, 1350, 1355, 1358, 1372, 1375, 1382, 1385, 1387, 1390, 1392, 1393, 1396, 1502, 1505, 1535, 1536, 1539, 1541, 1547, 1550, 1552, 1553, 1556, 1656, 1657, 1660, 1688, 1709, 1713, 1751, 1762, 1765, 1770, 1773, 1783, 1786, 1808, 1819, 1823, 1825], "__gt__": [45, 48, 49, 94, 99, 100, 162], "__le__": [45, 48, 49, 94, 99, 100], "less_equ": [45, 48, 49, 61, 62, 94, 99, 100, 109, 110, 152, 450], "__lt__": [45, 48, 49, 94, 99, 100], "__ne__": [45, 48, 49, 94, 99, 100], "not_equ": [45, 48, 49, 61, 62, 94, 99, 100, 109, 110, 450], "__pow__": [45, 48, 49, 94, 99, 100, 166], "power": [45, 48, 49, 63, 64, 65, 72, 73, 94, 99, 100, 111, 112, 113, 120, 121, 166, 167, 168, 450, 516, 519, 561, 564, 696, 699, 1090, 1161, 1230, 1244, 1247, 1392, 1452, 1455, 1515, 1519, 1637, 1644, 1819, 1821, 1825], "pow": [45, 48, 49, 61, 62, 94, 99, 100, 109, 110, 143, 450], "float": [45, 48, 49, 55, 56, 57, 58, 61, 62, 63, 64, 65, 66, 67, 72, 73, 74, 75, 78, 79, 80, 81, 88, 89, 95, 96, 103, 104, 105, 106, 109, 110, 111, 112, 113, 114, 115, 120, 121, 122, 123, 126, 127, 128, 129, 136, 137, 143, 146, 148, 151, 152, 154, 155, 156, 157, 159, 160, 161, 162, 164, 166, 168, 196, 204, 207, 229, 232, 236, 237, 239, 240, 242, 244, 252, 258, 259, 266, 267, 270, 272, 275, 277, 278, 295, 296, 313, 315, 321, 328, 331, 348, 351, 352, 361, 364, 377, 384, 387, 400, 401, 404, 412, 416, 427, 435, 438, 439, 446, 449, 450, 451, 454, 456, 459, 461, 464, 466, 469, 471, 474, 476, 479, 481, 484, 486, 489, 491, 494, 521, 524, 526, 529, 531, 534, 536, 539, 546, 549, 551, 554, 561, 564, 566, 569, 571, 574, 576, 579, 581, 584, 586, 589, 591, 594, 596, 599, 601, 604, 606, 609, 611, 614, 621, 624, 626, 629, 631, 634, 636, 639, 641, 644, 676, 679, 681, 684, 686, 689, 691, 694, 696, 699, 706, 709, 711, 714, 716, 719, 726, 729, 731, 734, 736, 739, 746, 750, 751, 755, 756, 760, 761, 765, 766, 770, 1090, 1106, 1107, 1110, 1112, 1115, 1140, 1143, 1161, 1162, 1169, 1173, 1176, 1230, 1231, 1233, 1239, 1242, 1244, 1247, 1277, 1281, 1283, 1285, 1288, 1289, 1292, 1295, 1298, 1300, 1303, 1304, 1307, 1308, 1311, 1321, 1360, 1363, 1365, 1368, 1382, 1385, 1387, 1390, 1392, 1393, 1396, 1403, 1406, 1418, 1421, 1422, 1425, 1427, 1430, 1437, 1440, 1447, 1450, 1452, 1455, 1457, 1460, 1472, 1475, 1477, 1480, 1482, 1485, 1487, 1490, 1492, 1496, 1525, 1529, 1535, 1536, 1539, 1541, 1542, 1545, 1547, 1550, 1633, 1634, 1635, 1636, 1637, 1644, 1656, 1657, 1660, 1661, 1672, 1675, 1677, 1680, 1714, 1715, 1719, 1720, 1724, 1725, 1729, 1730, 1734, 1751, 1752, 1755, 1757, 1760, 1766, 1769, 1770, 1773, 1774, 1777, 1778, 1781, 1783, 1786, 1787, 1791, 1792, 1796], "69678056": [45, 48, 49], "59876156": [45, 48, 49], "37": [45, 46, 47, 48, 49, 61, 62, 63, 95, 96, 109, 110, 111, 237, 277, 278, 450, 476, 479, 516, 519, 751, 755, 1321, 1372, 1375, 1637, 1646, 1661, 1672, 1675], "82660675": [45, 48, 49], "__radd__": [45, 48, 49, 94, 99, 100, 150, 151, 158], "__rrshift__": [45, 48, 49, 94, 99, 100], "bitwise_right_shift": [45, 48, 49, 61, 62, 109, 110, 450], "32": [45, 48, 49, 61, 62, 63, 80, 81, 94, 99, 100, 109, 110, 111, 128, 129, 167, 196, 204, 207, 237, 277, 278, 321, 360, 450, 461, 464, 516, 519, 1090, 1184, 1187, 1321, 1342, 1345, 1347, 1350, 1355, 1358, 1372, 1375, 1392, 1442, 1445, 1467, 1470, 1661, 1677, 1680, 1688, 1709, 1713, 1751, 1762, 1765, 1824], "__rshift__": [45, 48, 49, 94, 99, 100], "__rsub__": [45, 48, 49, 94, 99, 100], "subtract": [45, 48, 49, 61, 62, 94, 99, 100, 109, 110, 144, 146, 150, 450], "__sub__": [45, 48, 49, 94, 99, 100, 144, 146, 150, 154, 166], "__truediv__": [45, 48, 49, 94, 99, 100, 144, 146, 150], "divid": [45, 48, 49, 61, 62, 64, 65, 76, 77, 94, 97, 98, 99, 100, 109, 110, 124, 125, 144, 146, 150, 450, 576, 579, 1090, 1239, 1242, 1552, 1598, 1601], "25": [45, 48, 49, 61, 62, 64, 65, 72, 73, 74, 75, 80, 81, 88, 89, 94, 95, 96, 99, 100, 109, 110, 111, 112, 113, 118, 119, 120, 121, 126, 127, 128, 129, 136, 137, 146, 450, 516, 519, 546, 549, 696, 699, 731, 734, 741, 744, 761, 765, 1090, 1179, 1182, 1184, 1187, 1239, 1242, 1392, 1393, 1396, 1413, 1416, 1437, 1440, 1515, 1519, 1535, 1542, 1545, 1637, 1639, 1656, 1657, 1660, 1751, 1762, 1765], "40000001": [45, 48, 49, 94, 95, 96, 99, 100, 196, 214, 217], "__xor__": [45, 48, 49, 94, 99, 100], "boolean": [45, 48, 49, 55, 56, 57, 58, 61, 62, 63, 64, 65, 76, 77, 82, 83, 88, 89, 94, 97, 98, 99, 100, 105, 106, 109, 110, 111, 112, 113, 124, 125, 130, 131, 136, 137, 146, 158, 159, 160, 162, 237, 242, 244, 266, 321, 328, 331, 378, 415, 416, 431, 447, 450, 496, 499, 501, 504, 511, 514, 521, 524, 646, 649, 651, 654, 656, 659, 661, 664, 1090, 1091, 1094, 1098, 1100, 1160, 1173, 1176, 1178, 1194, 1195, 1198, 1200, 1203, 1205, 1207, 1208, 1211, 1228, 1232, 1234, 1235, 1277, 1281, 1283, 1312, 1320, 1552, 1588, 1591, 1633, 1634, 1635, 1637, 1648, 1751, 1774, 1777], "67": [45, 48, 49, 61, 62, 64, 65, 109, 110, 112, 113, 128, 129, 450, 521, 524, 536, 539, 761, 765, 1090, 1127, 1130, 1283, 1294, 1299, 1319], "21": [45, 48, 49, 61, 62, 63, 64, 65, 80, 81, 109, 110, 111, 112, 113, 128, 129, 136, 137, 237, 277, 278, 321, 372, 375, 450, 486, 489, 516, 519, 521, 524, 676, 679, 1090, 1127, 1130, 1392, 1413, 1416, 1467, 1470, 1535, 1547, 1550, 1637, 1644, 1751, 1752, 1755, 1762, 1765], "13": [45, 46, 47, 48, 49, 61, 62, 63, 70, 71, 80, 81, 88, 89, 109, 110, 111, 112, 113, 114, 115, 118, 119, 124, 125, 128, 129, 136, 137, 146, 150, 196, 229, 232, 237, 277, 278, 321, 372, 375, 416, 427, 450, 521, 524, 536, 539, 576, 579, 696, 699, 736, 739, 1090, 1107, 1110, 1112, 1115, 1127, 1130, 1184, 1187, 1231, 1239, 1242, 1283, 1285, 1288, 1321, 1372, 1375, 1387, 1390, 1392, 1413, 1416, 1467, 1470, 1497, 1501, 1552, 1623, 1627, 1688, 1709, 1713, 1714, 1715, 1719, 1751, 1752, 1755, 1757, 1760, 1762, 1765], "79": [45, 48, 49, 64, 65, 112, 113, 128, 129, 237, 277, 278, 450, 521, 524, 546, 549, 1090, 1107, 1110, 1112, 1115], "24": [45, 48, 49, 61, 62, 63, 72, 73, 88, 89, 111, 112, 113, 118, 119, 120, 121, 128, 129, 167, 450, 521, 524, 736, 739, 1090, 1127, 1130, 1392, 1413, 1416, 1467, 1470, 1535, 1541, 1637, 1639, 1751, 1752, 1755, 1762, 1765], "nativearrai": [45, 46, 47, 48, 49, 50, 53, 54, 55, 56, 57, 58, 61, 62, 63, 64, 65, 66, 67, 70, 71, 72, 73, 74, 75, 76, 77, 80, 81, 95, 96, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 118, 119, 120, 121, 122, 123, 124, 125, 128, 129, 130, 131, 134, 135, 136, 137, 138, 139, 144, 146, 150, 152, 153, 154, 155, 156, 157, 158, 161, 164, 166, 182, 194, 196, 198, 201, 204, 207, 209, 212, 214, 217, 219, 222, 224, 227, 229, 232, 237, 242, 244, 249, 251, 253, 256, 267, 270, 272, 275, 277, 278, 280, 283, 285, 288, 290, 293, 298, 301, 303, 307, 308, 312, 316, 320, 321, 328, 331, 333, 336, 338, 341, 343, 346, 350, 351, 352, 354, 355, 356, 358, 361, 364, 372, 375, 379, 382, 384, 387, 389, 392, 394, 397, 400, 401, 404, 410, 416, 422, 423, 425, 440, 441, 445, 450, 451, 454, 456, 459, 461, 464, 466, 469, 471, 474, 476, 479, 481, 484, 486, 489, 491, 494, 496, 499, 501, 504, 506, 509, 511, 514, 516, 519, 521, 524, 526, 529, 531, 534, 536, 539, 541, 544, 546, 549, 551, 554, 556, 559, 561, 564, 566, 569, 571, 574, 576, 579, 581, 584, 586, 589, 591, 594, 596, 599, 601, 604, 606, 609, 611, 614, 616, 619, 621, 624, 626, 629, 631, 634, 636, 639, 641, 644, 646, 649, 651, 654, 656, 659, 661, 664, 666, 669, 671, 674, 676, 679, 681, 684, 686, 689, 691, 694, 696, 699, 701, 704, 706, 709, 711, 714, 716, 719, 721, 724, 726, 729, 731, 734, 736, 739, 741, 744, 746, 750, 751, 755, 756, 760, 761, 765, 766, 770, 1090, 1091, 1094, 1098, 1100, 1101, 1104, 1107, 1110, 1112, 1115, 1122, 1125, 1127, 1130, 1132, 1135, 1140, 1143, 1147, 1150, 1152, 1155, 1160, 1164, 1167, 1173, 1176, 1179, 1182, 1184, 1187, 1189, 1192, 1200, 1203, 1208, 1211, 1218, 1221, 1223, 1226, 1228, 1237, 1239, 1242, 1244, 1247, 1249, 1253, 1255, 1258, 1260, 1264, 1265, 1269, 1271, 1277, 1281, 1283, 1285, 1288, 1289, 1292, 1295, 1298, 1300, 1303, 1304, 1307, 1308, 1311, 1313, 1317, 1321, 1323, 1326, 1328, 1331, 1333, 1336, 1338, 1340, 1342, 1345, 1347, 1350, 1352, 1353, 1355, 1358, 1360, 1363, 1365, 1368, 1372, 1375, 1377, 1380, 1382, 1385, 1387, 1390, 1392, 1393, 1396, 1398, 1401, 1403, 1406, 1408, 1411, 1413, 1416, 1418, 1421, 1422, 1425, 1427, 1430, 1432, 1435, 1437, 1440, 1442, 1445, 1447, 1450, 1452, 1455, 1457, 1460, 1462, 1465, 1467, 1470, 1472, 1475, 1477, 1480, 1482, 1485, 1487, 1490, 1492, 1496, 1497, 1501, 1502, 1505, 1510, 1514, 1515, 1519, 1520, 1524, 1525, 1529, 1530, 1534, 1535, 1536, 1539, 1541, 1542, 1545, 1547, 1550, 1552, 1553, 1556, 1558, 1561, 1563, 1566, 1568, 1571, 1573, 1576, 1578, 1581, 1583, 1586, 1588, 1591, 1593, 1596, 1598, 1601, 1603, 1606, 1608, 1611, 1613, 1617, 1618, 1622, 1623, 1627, 1628, 1632, 1637, 1639, 1640, 1641, 1645, 1647, 1650, 1654, 1655, 1656, 1657, 1660, 1661, 1662, 1665, 1667, 1670, 1672, 1675, 1677, 1680, 1683, 1686, 1688, 1689, 1692, 1694, 1697, 1699, 1702, 1704, 1707, 1709, 1713, 1714, 1715, 1719, 1720, 1724, 1725, 1729, 1730, 1734, 1735, 1736, 1739, 1741, 1744, 1746, 1749, 1751, 1752, 1755, 1757, 1760, 1762, 1765, 1766, 1769, 1770, 1773, 1774, 1777, 1778, 1781, 1783, 1786, 1787, 1791, 1792, 1796, 1797, 1798, 1801, 1803, 1806, 1808], "resid": [45, 48, 49, 158, 164, 168, 1552, 1568, 1571], "mt": [45, 48, 49, 166], "matric": [45, 48, 49, 55, 56, 72, 73, 120, 121, 180, 237, 280, 283, 303, 307, 308, 312, 1321, 1372, 1375, 1392, 1393, 1396, 1403, 1406, 1413, 1416, 1418, 1421, 1422, 1425, 1427, 1430, 1437, 1440, 1447, 1450, 1452, 1455, 1457, 1460, 1462, 1465, 1472, 1475, 1477, 1480, 1482, 1485, 1487, 1490, 1492, 1496, 1497, 1501, 1510, 1514, 1819], "n": [45, 48, 49, 55, 56, 63, 72, 73, 76, 77, 80, 81, 82, 83, 88, 89, 90, 91, 109, 110, 111, 120, 121, 124, 125, 128, 129, 130, 131, 136, 137, 138, 139, 142, 160, 237, 280, 283, 303, 307, 308, 312, 1321, 1360, 1363, 1382, 1385, 1392, 1413, 1416, 1432, 1435, 1442, 1445, 1447, 1450, 1452, 1455, 1457, 1460, 1462, 1465, 1467, 1470, 1472, 1475, 1477, 1480, 1492, 1496, 1497, 1501, 1510, 1514, 1515, 1519, 1520, 1524, 1525, 1529, 1552, 1563, 1566, 1568, 1571, 1578, 1581, 1608, 1611, 1628, 1632, 1637, 1646, 1661, 1667, 1670, 1672, 1675, 1677, 1680, 1688, 1704, 1707, 1751, 1770, 1773, 1783, 1786, 1787, 1791, 1792, 1796, 1797, 1798, 1801, 1803, 1806], "ndim": [45, 48, 49, 63, 82, 83, 130, 131, 146, 1090, 1282, 1392, 1477, 1480, 1492, 1496, 1688, 1704, 1707], "int": [45, 46, 47, 48, 49, 55, 56, 57, 58, 61, 62, 63, 64, 65, 66, 67, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 86, 87, 88, 89, 90, 91, 95, 96, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 134, 135, 136, 137, 138, 139, 146, 148, 149, 150, 152, 153, 154, 155, 157, 158, 159, 160, 161, 162, 164, 169, 196, 209, 212, 224, 227, 229, 232, 234, 235, 237, 242, 244, 258, 259, 266, 267, 270, 272, 275, 277, 278, 290, 293, 303, 307, 308, 312, 321, 338, 341, 354, 360, 361, 364, 372, 375, 389, 392, 413, 416, 432, 433, 434, 440, 441, 445, 450, 466, 469, 496, 499, 501, 504, 506, 509, 511, 514, 516, 519, 521, 524, 746, 750, 1090, 1096, 1122, 1125, 1127, 1130, 1132, 1135, 1140, 1143, 1147, 1150, 1164, 1167, 1218, 1221, 1239, 1242, 1282, 1283, 1285, 1288, 1289, 1292, 1300, 1303, 1321, 1323, 1326, 1328, 1331, 1333, 1336, 1338, 1340, 1342, 1345, 1347, 1350, 1352, 1353, 1355, 1358, 1382, 1385, 1392, 1398, 1401, 1408, 1411, 1413, 1416, 1447, 1450, 1452, 1455, 1502, 1505, 1510, 1514, 1515, 1519, 1520, 1524, 1525, 1529, 1535, 1542, 1545, 1547, 1550, 1552, 1558, 1561, 1563, 1566, 1568, 1571, 1573, 1576, 1578, 1581, 1583, 1586, 1588, 1591, 1593, 1596, 1598, 1601, 1603, 1606, 1608, 1611, 1613, 1617, 1618, 1622, 1623, 1627, 1628, 1632, 1633, 1634, 1635, 1636, 1637, 1641, 1644, 1645, 1647, 1649, 1650, 1654, 1655, 1656, 1657, 1660, 1661, 1662, 1665, 1667, 1670, 1672, 1675, 1677, 1680, 1682, 1683, 1686, 1688, 1689, 1692, 1694, 1697, 1704, 1707, 1735, 1736, 1739, 1746, 1749, 1751, 1752, 1755, 1757, 1760, 1766, 1769, 1770, 1773, 1774, 1777, 1778, 1781, 1783, 1786, 1787, 1791, 1792, 1796, 1797, 1798, 1801, 1803, 1806], "size": [45, 48, 49, 63, 64, 65, 72, 73, 76, 77, 80, 81, 82, 83, 94, 97, 98, 99, 100, 111, 112, 113, 120, 121, 124, 125, 128, 129, 130, 131, 159, 160, 167, 237, 272, 275, 277, 278, 416, 438, 439, 440, 1090, 1218, 1221, 1321, 1387, 1390, 1392, 1413, 1416, 1432, 1435, 1447, 1450, 1467, 1470, 1477, 1480, 1492, 1496, 1520, 1524, 1552, 1568, 1571, 1593, 1596, 1598, 1601, 1603, 1606, 1661, 1662, 1665, 1688, 1689, 1692, 1704, 1707, 1797, 1798, 1801, 1803, 1806], "overview": [45, 94, 160, 163, 180, 196, 234, 236, 237, 321, 416, 450, 1089, 1090, 1283, 1321, 1392, 1535, 1552, 1633, 1637, 1656, 1661, 1688, 1735, 1751, 1797, 1828, 1831, 1833, 1843, 1855, 1859, 1861, 1867], "forum": [45, 94, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 196, 234, 236, 237, 321, 416, 450, 1089, 1090, 1283, 1321, 1392, 1535, 1552, 1633, 1637, 1656, 1661, 1688, 1735, 1751, 1797, 1816, 1817, 1818, 1819, 1820, 1821, 1822, 1823, 1824, 1825, 1826, 1828, 1831, 1833, 1843, 1855, 1859, 1861, 1867], "abc": [46, 47, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 97, 98, 166, 416, 418, 1090, 1137, 1139, 1637, 1655], "gelu": [46, 47, 95, 96, 196], "approxim": [46, 47, 63, 72, 73, 95, 96, 109, 110, 111, 120, 121, 151, 158, 196, 198, 201, 450, 456, 459, 461, 464, 471, 474, 476, 479, 481, 484, 486, 489, 531, 534, 536, 539, 561, 564, 566, 569, 621, 624, 626, 629, 631, 634, 636, 639, 696, 699, 726, 729, 731, 734, 751, 755, 756, 760, 1392, 1457, 1460, 1472, 1475], "185": [46, 47, 95, 96], "046": [46, 47, 95, 96], "leaky_relu": [46, 47, 95, 96, 196, 1809], "alpha": [46, 47, 61, 62, 63, 80, 81, 95, 96, 109, 110, 111, 128, 129, 158, 159, 196, 204, 207, 450, 466, 469, 746, 750], "39": [46, 47, 61, 62, 63, 80, 81, 95, 96, 109, 110, 111, 114, 115, 128, 129, 196, 204, 207, 450, 476, 479, 561, 564, 621, 624, 631, 634, 641, 644, 1283, 1285, 1288, 1392, 1467, 1470, 1661, 1672, 1675, 1751, 1762, 1765], "85": [46, 47, 80, 81, 94, 95, 96, 99, 100, 109, 110, 114, 115, 118, 119, 128, 129, 196, 204, 207, 450, 516, 519, 521, 524, 701, 704, 1090, 1239, 1242, 1283, 1295, 1298, 1321, 1372, 1375, 1661, 1677, 1680], "17": [46, 47, 63, 94, 95, 96, 99, 100, 109, 110, 111, 112, 113, 114, 115, 118, 119, 128, 129, 146, 150, 196, 204, 207, 450, 546, 549, 641, 644, 1090, 1184, 1187, 1283, 1285, 1288, 1321, 1372, 1375, 1392, 1413, 1416, 1497, 1501, 1637, 1646, 1661, 1677, 1680, 1683, 1686], "log_softmax": [46, 47, 95, 96, 196], "98": [46, 47, 66, 67, 80, 81, 95, 96, 109, 110, 114, 115, 128, 129, 196, 209, 212, 450, 521, 524, 1283, 1295, 1298, 1392, 1467, 1470, 1637, 1639, 1688, 1709, 1713, 1751, 1762, 1765], "35": [46, 47, 70, 71, 95, 96, 109, 110, 111, 118, 119, 120, 121, 128, 129, 450, 486, 489, 1321, 1372, 1375, 1387, 1390, 1392, 1398, 1401, 1688, 1709, 1713, 1751, 1762, 1765], "0719": [46, 47, 95, 96], "62": [46, 47, 95, 96, 111, 126, 127, 128, 129, 450, 731, 734, 1656, 1657, 1660, 1661, 1677, 1680], "221": [46, 47], "82": [46, 47, 61, 62, 114, 115, 128, 129, 1283, 1285, 1288], "relu": [46, 47, 92, 93, 95, 96, 159, 167, 168, 196, 204, 207, 1809], "sigmoid": [46, 47, 95, 96, 164, 167, 168, 196, 197, 203, 1809], "269": [46, 47, 95, 96, 196, 219, 222], "731": [46, 47, 95, 96, 196, 219, 222], "881": [46, 47, 61, 62, 95, 96, 109, 110, 196, 219, 222, 450, 476, 479, 541, 544], "softmax": [46, 47, 92, 93, 95, 96, 196, 1321, 1382, 1385, 1387, 1390, 1809], "union": [46, 47, 50, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 88, 89, 90, 91, 95, 96, 97, 98, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 144, 146, 148, 149, 150, 152, 153, 154, 155, 157, 158, 161, 162, 164, 169, 196, 197, 198, 201, 203, 204, 207, 209, 212, 214, 217, 219, 222, 224, 227, 229, 232, 234, 235, 237, 239, 240, 242, 244, 249, 251, 252, 253, 256, 258, 259, 266, 267, 270, 272, 275, 277, 278, 280, 283, 285, 288, 290, 293, 295, 296, 298, 301, 303, 307, 308, 312, 313, 315, 316, 320, 321, 326, 327, 328, 331, 333, 336, 338, 341, 349, 350, 351, 352, 354, 355, 356, 358, 360, 361, 364, 372, 375, 377, 378, 379, 382, 384, 387, 389, 392, 394, 397, 399, 401, 404, 406, 407, 408, 409, 410, 415, 416, 417, 419, 420, 421, 422, 423, 425, 427, 430, 434, 435, 436, 437, 438, 439, 440, 441, 445, 446, 449, 450, 451, 454, 456, 459, 461, 464, 466, 469, 471, 474, 476, 479, 481, 484, 486, 489, 491, 494, 496, 499, 501, 504, 506, 509, 511, 514, 516, 519, 521, 524, 526, 529, 531, 534, 536, 539, 541, 544, 546, 549, 551, 554, 556, 559, 561, 564, 566, 569, 571, 574, 576, 579, 581, 584, 586, 589, 591, 594, 596, 599, 601, 604, 606, 609, 611, 614, 616, 619, 621, 624, 626, 629, 631, 634, 636, 639, 641, 644, 646, 649, 651, 654, 656, 659, 661, 664, 666, 669, 671, 674, 676, 679, 681, 684, 686, 689, 691, 694, 696, 699, 701, 704, 706, 709, 711, 714, 716, 719, 721, 724, 726, 729, 731, 734, 736, 739, 741, 744, 746, 750, 751, 755, 756, 760, 761, 765, 766, 770, 1090, 1091, 1094, 1098, 1100, 1101, 1104, 1107, 1110, 1112, 1115, 1122, 1125, 1127, 1130, 1132, 1135, 1140, 1143, 1147, 1150, 1152, 1155, 1160, 1164, 1167, 1173, 1176, 1179, 1182, 1184, 1187, 1189, 1192, 1200, 1203, 1208, 1211, 1214, 1218, 1221, 1223, 1226, 1237, 1239, 1242, 1244, 1247, 1249, 1253, 1254, 1255, 1258, 1259, 1260, 1264, 1265, 1269, 1277, 1281, 1282, 1283, 1285, 1288, 1289, 1292, 1295, 1298, 1300, 1303, 1304, 1307, 1308, 1311, 1313, 1317, 1321, 1323, 1326, 1328, 1331, 1333, 1336, 1338, 1340, 1342, 1345, 1347, 1350, 1352, 1353, 1355, 1358, 1360, 1363, 1365, 1368, 1372, 1375, 1377, 1380, 1382, 1385, 1387, 1390, 1392, 1393, 1396, 1398, 1401, 1403, 1406, 1408, 1411, 1413, 1416, 1418, 1421, 1422, 1425, 1427, 1430, 1432, 1435, 1437, 1440, 1442, 1445, 1447, 1450, 1452, 1455, 1457, 1460, 1462, 1465, 1467, 1470, 1472, 1475, 1477, 1480, 1482, 1485, 1487, 1490, 1492, 1496, 1497, 1501, 1502, 1505, 1510, 1514, 1515, 1519, 1520, 1524, 1525, 1529, 1530, 1534, 1535, 1536, 1539, 1541, 1542, 1545, 1547, 1550, 1552, 1553, 1556, 1558, 1561, 1563, 1566, 1568, 1571, 1573, 1576, 1578, 1581, 1583, 1586, 1588, 1591, 1593, 1596, 1598, 1601, 1603, 1606, 1608, 1611, 1613, 1617, 1618, 1622, 1623, 1627, 1628, 1632, 1633, 1634, 1635, 1636, 1637, 1638, 1639, 1640, 1641, 1645, 1647, 1648, 1649, 1650, 1654, 1655, 1656, 1657, 1660, 1661, 1662, 1665, 1667, 1670, 1672, 1675, 1677, 1680, 1683, 1686, 1688, 1689, 1692, 1694, 1697, 1699, 1702, 1704, 1707, 1709, 1713, 1714, 1715, 1719, 1720, 1724, 1725, 1729, 1730, 1734, 1735, 1736, 1739, 1741, 1744, 1746, 1749, 1751, 1752, 1755, 1757, 1760, 1762, 1765, 1766, 1769, 1770, 1773, 1774, 1777, 1778, 1781, 1783, 1786, 1787, 1791, 1792, 1796, 1797, 1798, 1801, 1803, 1806], "422": [46, 47, 95, 96, 196, 224, 227], "155": [46, 47, 95, 96, 118, 119, 196, 224, 227, 1321, 1372, 1375], "softplu": [46, 47, 95, 96, 162, 196, 1809], "beta": [46, 47, 78, 79, 80, 81, 95, 96, 111, 126, 127, 128, 129, 162, 196, 229, 232, 1656, 1657, 1660], "threshold": [46, 47, 61, 62, 95, 96, 109, 110, 162, 196, 229, 232, 450, 666, 669, 671, 674], "3461": [46, 47, 95, 96, 196, 229, 232], "6491": [46, 47, 95, 96, 196, 229, 232], "22": [46, 47, 61, 62, 63, 64, 65, 80, 81, 88, 89, 95, 96, 111, 112, 113, 118, 119, 128, 129, 146, 196, 229, 232, 450, 521, 524, 1321, 1372, 1375, 1392, 1413, 1416, 1437, 1440, 1467, 1470, 1637, 1646, 1655, 1688, 1709, 1713, 1751, 1762, 1765], "09": [46, 47, 61, 62, 114, 115, 128, 129, 196, 229, 232, 237, 277, 278, 450, 696, 699, 741, 744, 1283, 1285, 1288, 1321, 1387, 1390], "31": [46, 47, 61, 62, 63, 109, 110, 111, 112, 113, 118, 119, 128, 129, 167, 196, 209, 212, 229, 232, 450, 516, 519, 641, 644, 1090, 1107, 1110, 1392, 1497, 1501], "55": [46, 47, 128, 129, 143, 450, 516, 519, 761, 765, 1090, 1179, 1182, 1392, 1437, 1440, 1467, 1470, 1497, 1501, 1661, 1672, 1675, 1751, 1762, 1765], "collect": [50, 97, 98, 101, 152, 159, 160, 180, 196, 234, 416, 1090, 1283, 1321, 1535, 1637, 1651, 1656, 1661, 1817, 1819, 1822], "args_to_ivi": 50, "include_deriv": [50, 51, 52, 53, 54, 101, 102, 1637, 1639, 1650], "nest": [50, 51, 52, 53, 54, 94, 97, 98, 99, 100, 101, 102, 144, 146, 155, 161, 167, 168, 181, 1090, 1255, 1258, 1282, 1283, 1293, 1312, 1318, 1320, 1633, 1634, 1635, 1638, 1639, 1640, 1641, 1642, 1643, 1644, 1645, 1646, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654, 1655, 1808, 1819], "unchang": [50, 51, 52, 53, 54], "deriv": [50, 51, 52, 53, 54, 55, 56, 66, 67, 101, 102, 103, 104, 111, 114, 115, 148, 149, 166, 168, 237, 253, 256, 267, 270, 298, 301, 316, 320, 1283, 1285, 1288, 1289, 1292, 1295, 1298, 1299, 1300, 1303, 1304, 1307, 1308, 1311, 1637, 1639, 1650], "tupl": [50, 51, 52, 53, 54, 55, 56, 57, 58, 63, 64, 65, 70, 71, 72, 73, 76, 77, 82, 83, 84, 85, 88, 89, 90, 91, 95, 96, 97, 98, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 118, 119, 120, 121, 122, 123, 124, 125, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 148, 153, 154, 159, 160, 164, 167, 168, 181, 237, 242, 244, 285, 288, 321, 338, 341, 366, 367, 369, 370, 400, 410, 416, 422, 428, 429, 1090, 1140, 1143, 1282, 1283, 1285, 1288, 1300, 1303, 1321, 1333, 1336, 1338, 1340, 1342, 1345, 1347, 1350, 1352, 1353, 1355, 1358, 1377, 1380, 1392, 1418, 1421, 1422, 1425, 1447, 1450, 1457, 1460, 1472, 1475, 1477, 1480, 1482, 1485, 1492, 1496, 1502, 1505, 1525, 1529, 1552, 1558, 1561, 1563, 1566, 1578, 1581, 1593, 1596, 1608, 1611, 1628, 1632, 1633, 1634, 1635, 1636, 1637, 1638, 1639, 1641, 1643, 1646, 1647, 1648, 1649, 1650, 1652, 1653, 1654, 1655, 1688, 1704, 1707, 1714, 1715, 1719, 1720, 1724, 1725, 1729, 1751, 1766, 1769, 1774, 1777, 1778, 1781, 1783, 1786, 1787, 1791, 1792, 1796, 1797, 1798, 1801, 1803, 1806], "kei": [50, 51, 52, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 118, 119, 120, 121, 122, 123, 124, 125, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 146, 153, 158, 159, 160, 167, 1090, 1096, 1117, 1321, 1382, 1385, 1387, 1390, 1633, 1634, 1635, 1637, 1641, 1647, 1651, 1819, 1822, 1826], "word": [50, 51, 52, 146, 158, 237, 239, 240, 1661, 1677, 1680, 1808], "args_to_n": [50, 157], "cont_inplac": [50, 52, 54], "to_ivi": [50, 101, 102, 1637, 1651], "leaf": [50, 53, 97, 98, 136, 137, 146, 155, 167, 1637, 1648, 1649, 1651], "travers": [50, 53, 54, 101, 102, 146, 148, 164, 1637, 1650], "lowest": [50, 53, 54, 80, 81, 101, 102, 128, 129, 155, 181, 1637, 1650, 1661, 1667, 1670, 1808, 1816, 1820, 1824], "to_n": [50, 101, 102, 164], "asarrai": [55, 56, 64, 65, 112, 113, 156, 157, 158, 237, 1090, 1164, 1167, 1239, 1242, 1321, 1323, 1326, 1714, 1720, 1724], "nativedtyp": [55, 56, 57, 58, 63, 80, 81, 82, 83, 88, 89, 103, 104, 111, 128, 129, 130, 131, 136, 137, 148, 149, 154, 158, 161, 164, 237, 239, 240, 242, 244, 252, 253, 256, 258, 259, 266, 267, 270, 272, 275, 277, 278, 285, 288, 295, 296, 298, 301, 313, 315, 316, 320, 321, 327, 328, 331, 349, 350, 351, 352, 354, 355, 356, 358, 360, 377, 378, 399, 406, 415, 1661, 1667, 1670, 1672, 1675, 1677, 1680, 1688, 1689, 1692, 1694, 1697, 1751, 1752, 1755, 1757, 1760, 1778, 1781, 1787, 1791], "datatyp": [55, 56, 97, 98, 237, 267, 270, 285, 288, 321, 349, 399, 406], "nativedevic": [55, 56, 59, 60, 80, 81, 103, 104, 107, 108, 128, 129, 148, 149, 152, 154, 161, 237, 239, 240, 242, 244, 252, 253, 256, 258, 259, 266, 267, 270, 272, 275, 277, 278, 285, 288, 290, 293, 295, 296, 298, 301, 313, 315, 316, 320, 416, 417, 420, 421, 422, 423, 425, 427, 430, 434, 435, 436, 437, 438, 439, 440, 441, 445, 446, 449, 1661, 1662, 1665, 1667, 1670, 1672, 1675, 1677, 1680], "interpret": [55, 56, 147, 237, 242, 244, 285, 288, 1820], "copy_arrai": [55, 56, 237], "empty_lik": [55, 56, 103, 104, 162, 237], "deafult": [55, 56, 82, 83, 130, 131, 237, 253, 256, 1688, 1689, 1692], "uniniti": [55, 56, 237, 252, 253, 256], "from_dlpack": [55, 56, 103, 104, 237], "full_lik": [55, 56, 103, 104, 161, 237], "scalar": [55, 56, 61, 62, 63, 64, 65, 95, 96, 103, 104, 109, 110, 111, 112, 113, 120, 121, 148, 181, 237, 267, 270, 290, 293, 450, 466, 469, 746, 750, 1090, 1265, 1269, 1277, 1281, 1392, 1525, 1529, 1819], "fill": [55, 56, 63, 80, 81, 82, 83, 97, 98, 103, 104, 111, 128, 129, 130, 131, 159, 237, 252, 266, 267, 270, 290, 293, 295, 296, 298, 301, 313, 315, 316, 320, 1661, 1667, 1670, 1688, 1704, 1707], "000123": [55, 56, 237, 267, 270], "ones": [55, 56, 66, 67, 70, 71, 80, 81, 97, 98, 103, 104, 118, 119, 128, 129, 150, 154, 160, 166, 167, 237, 258, 259, 267, 270, 277, 278, 290, 293, 298, 301, 316, 320, 450, 526, 529, 1283, 1285, 1288, 1321, 1342, 1345, 1809, 1819], "linspac": [55, 56, 103, 104, 154, 162, 164, 237, 239, 240, 1809, 1826], "stop": [55, 56, 66, 67, 103, 104, 114, 115, 154, 162, 164, 181, 237, 239, 240, 272, 275, 277, 278, 416, 418, 440, 1283, 1289, 1292, 1295, 1298, 1300, 1303, 1304, 1307, 1308, 1311, 1313, 1317, 1633, 1634, 1635, 1636, 1637, 1649, 1819], "endpoint": [55, 56, 103, 104, 154, 237, 272, 275], "meshgrid": [55, 56, 103, 104, 237], "spars": [55, 56, 74, 75, 103, 104, 122, 123, 237, 280, 283, 1535, 1547, 1550], "xy": [55, 56, 103, 104, 237, 280, 283], "one_hot": [55, 56, 103, 104, 169, 237, 1809], "on_valu": [55, 56, 103, 104, 237, 277, 278, 290, 293], "off_valu": [55, 56, 103, 104, 237, 277, 278, 290, 293], "scatter": [55, 56, 64, 65, 103, 104, 112, 113, 162, 237, 290, 293, 1090, 1218, 1221, 1223, 1226, 1826], "hot": [55, 56, 103, 104, 237, 290, 293], "float32": [55, 56, 57, 58, 70, 71, 103, 104, 105, 106, 112, 113, 118, 119, 136, 137, 148, 150, 160, 237, 277, 278, 298, 301, 316, 320, 321, 326, 327, 351, 352, 356, 358, 360, 361, 364, 366, 367, 377, 384, 387, 389, 392, 412, 1090, 1260, 1264, 1321, 1333, 1336, 1342, 1345], "cuda": [55, 56, 80, 81, 112, 113, 128, 129, 164, 181, 237, 272, 275, 277, 278, 290, 293, 416, 419, 420, 421, 437, 438, 1661, 1662, 1665, 1667, 1670, 1672, 1675, 1677, 1680, 1808, 1824], "unless": [55, 56, 63, 72, 73, 103, 104, 111, 145, 149, 157, 181, 237, 290, 293, 450, 676, 679, 1392, 1457, 1460], "overrid": [55, 56, 103, 104, 237, 290, 293], "ones_lik": [55, 56, 103, 104, 145, 169, 237, 1809], "tril": [55, 56, 103, 104, 237], "k": [55, 56, 63, 70, 71, 72, 73, 80, 81, 103, 104, 109, 110, 111, 118, 119, 120, 121, 128, 129, 142, 143, 158, 159, 164, 237, 258, 259, 303, 307, 308, 312, 1090, 1098, 1100, 1321, 1387, 1390, 1392, 1408, 1411, 1442, 1445, 1447, 1450, 1477, 1480, 1487, 1490, 1492, 1496, 1497, 1501, 1510, 1514, 1637, 1646, 1661, 1667, 1670, 1672, 1675, 1677, 1680, 1688, 1704, 1707, 1815, 1819], "innermost": [55, 56, 72, 73, 120, 121, 237, 303, 307, 308, 312, 1392, 1393, 1396, 1403, 1406, 1413, 1416, 1418, 1421, 1422, 1425, 1427, 1430, 1437, 1440, 1447, 1450, 1452, 1455, 1457, 1460, 1462, 1465, 1472, 1475, 1477, 1480, 1482, 1485, 1487, 1490, 1492, 1496, 1497, 1501, 1510, 1514], "mxn": [55, 56, 72, 73, 120, 121, 237, 303, 307, 308, 312, 1392, 1413, 1416, 1447, 1450, 1457, 1460, 1462, 1465, 1472, 1475, 1477, 1480, 1497, 1501, 1510, 1514], "diagon": [55, 56, 72, 73, 120, 121, 237, 258, 259, 303, 307, 308, 312, 1392, 1408, 1411, 1510, 1514], "triangular": [55, 56, 72, 73, 120, 121, 237, 303, 307, 308, 312, 1392, 1393, 1396, 1427, 1430, 1477, 1480], "triu": [55, 56, 103, 104, 237], "upper": [55, 56, 72, 73, 80, 81, 120, 121, 128, 129, 157, 160, 237, 258, 259, 308, 312, 1392, 1393, 1396, 1427, 1430, 1477, 1480, 1661, 1677, 1680], "zeros_lik": [55, 56, 103, 104, 158, 162, 237, 321, 328, 331, 450, 656, 659, 1283, 1285, 1288, 1295, 1298, 1300, 1303, 1308, 1311, 1321, 1355, 1358, 1552, 1553, 1556, 1809], "creation": [56, 94, 97, 98, 99, 100, 104, 148, 149, 152, 154, 156, 158, 159, 160, 161, 164, 238, 239, 240, 242, 244, 246, 247, 248, 249, 251, 252, 253, 256, 258, 259, 261, 264, 266, 267, 270, 272, 275, 277, 278, 280, 283, 285, 288, 290, 293, 295, 296, 298, 301, 303, 307, 308, 312, 313, 315, 316, 320, 1819, 1821, 1825], "data_typ": [57, 58, 105, 106, 148, 160, 161, 321, 322, 323, 324, 325, 326, 327, 328, 331, 333, 336, 338, 341, 343, 346, 348, 349, 350, 351, 352, 354, 355, 356, 358, 360, 361, 364, 366, 367, 369, 370, 372, 375, 377, 378, 379, 382, 384, 387, 389, 392, 394, 397, 399, 400, 401, 404, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415], "astyp": [57, 58, 70, 71, 105, 106, 118, 119, 148, 157, 158, 162, 321, 1321, 1333, 1336, 1342, 1345], "irrespect": [57, 58, 105, 106, 146, 157, 166, 321, 328, 331, 1392, 1492, 1496, 1826], "rule": [57, 58, 63, 72, 73, 105, 106, 109, 110, 120, 121, 143, 144, 146, 148, 150, 153, 154, 155, 160, 162, 321, 328, 331, 343, 346, 399, 400, 401, 404, 450, 491, 494, 546, 549, 676, 679, 711, 714, 766, 770, 1392, 1393, 1396, 1398, 1401, 1432, 1435, 1452, 1455, 1467, 1470, 1487, 1490, 1552, 1558, 1561, 1820], "cast": [57, 58, 63, 105, 106, 111, 148, 155, 159, 164, 321, 328, 331, 343, 346, 1751, 1752, 1755, 1757, 1760, 1778, 1781, 1787, 1791, 1809], "nan": [57, 58, 61, 62, 63, 64, 65, 88, 89, 105, 106, 109, 110, 111, 112, 113, 143, 148, 151, 161, 236, 321, 328, 331, 450, 451, 454, 456, 459, 461, 464, 466, 469, 471, 474, 476, 479, 481, 484, 486, 489, 526, 529, 531, 534, 536, 539, 541, 544, 561, 564, 566, 569, 571, 574, 591, 594, 601, 604, 621, 624, 626, 629, 631, 634, 636, 639, 641, 644, 651, 654, 676, 679, 696, 699, 701, 704, 711, 714, 716, 719, 726, 729, 731, 734, 736, 739, 751, 755, 756, 760, 761, 765, 1090, 1173, 1176, 1277, 1281, 1714, 1715, 1719, 1720, 1724, 1725, 1729, 1730, 1734, 1751, 1766, 1769, 1770, 1773, 1774, 1777, 1783, 1786, 1787, 1791, 1792, 1796, 1797, 1798, 1801, 1803, 1806], "infin": [57, 58, 61, 62, 63, 64, 65, 105, 106, 109, 110, 111, 120, 121, 143, 151, 236, 321, 328, 331, 450, 451, 454, 461, 464, 466, 469, 476, 479, 481, 484, 486, 489, 526, 529, 531, 534, 536, 539, 561, 564, 566, 569, 571, 574, 576, 579, 591, 594, 596, 599, 621, 624, 626, 629, 631, 634, 636, 639, 641, 644, 651, 654, 676, 679, 696, 699, 711, 714, 716, 719, 726, 729, 731, 734, 736, 739, 751, 755, 756, 760, 761, 765, 1090, 1173, 1176, 1392, 1482, 1485, 1525, 1529, 1751, 1766, 1769, 1774, 1777, 1797, 1798, 1801, 1803, 1806], "non": [57, 58, 63, 72, 73, 80, 81, 82, 83, 88, 89, 90, 91, 105, 106, 111, 120, 121, 128, 129, 130, 131, 136, 137, 138, 139, 146, 148, 150, 156, 164, 234, 235, 321, 328, 331, 378, 400, 450, 651, 654, 656, 659, 1392, 1403, 1406, 1447, 1450, 1457, 1460, 1492, 1496, 1502, 1505, 1520, 1524, 1525, 1529, 1637, 1651, 1661, 1672, 1675, 1688, 1689, 1692, 1694, 1697, 1699, 1702, 1704, 1707, 1751, 1766, 1769, 1770, 1773, 1774, 1777, 1778, 1781, 1783, 1786, 1792, 1796, 1797, 1798, 1801, 1803, 1806, 1819], "float64": [57, 58, 80, 81, 88, 89, 105, 106, 128, 129, 136, 137, 148, 160, 237, 266, 321, 328, 331, 343, 346, 351, 352, 361, 364, 366, 367, 377, 378, 389, 392, 401, 404, 406, 412, 415, 1661, 1672, 1675, 1677, 1680], "broadcast_arrai": [57, 58, 105, 106, 321], "arbitrari": [57, 58, 63, 97, 98, 105, 106, 146, 154, 155, 157, 158, 160, 168, 181, 237, 280, 283, 321, 333, 336, 401, 404, 1283, 1293, 1820, 1825], "x3": [57, 58, 237, 298, 301, 316, 320, 321, 333, 336, 1090, 1091, 1094], "broadcast_to": [57, 58, 105, 106, 148, 321], "can_cast": [57, 58, 105, 106, 148, 155, 158, 321], "occur": [57, 58, 63, 84, 85, 105, 106, 111, 132, 133, 143, 321, 343, 346, 1688, 1689, 1692, 1694, 1697, 1714, 1715, 1719, 1720, 1724, 1725, 1729, 1730, 1734], "as_n": [57, 58, 59, 60, 105, 106, 107, 108, 148, 321, 350, 351, 352, 354, 355, 356, 358, 377, 416, 422, 423, 425, 437], "int32": [57, 58, 80, 81, 82, 83, 88, 89, 105, 106, 112, 113, 128, 129, 130, 131, 148, 158, 160, 164, 237, 298, 301, 316, 320, 321, 328, 331, 343, 346, 349, 354, 356, 358, 366, 367, 372, 375, 377, 389, 392, 401, 404, 408, 411, 413, 416, 436, 1090, 1152, 1155, 1260, 1264, 1661, 1672, 1675, 1677, 1680, 1688, 1694, 1697, 1751, 1752, 1755, 1757, 1760, 1778, 1781, 1787, 1791], "finfo": [57, 58, 105, 106, 160, 321], "iinfo": [57, 58, 105, 106, 153, 321], "119": [57, 58], "122": [57, 58, 450, 536, 539], "int8": [57, 58, 80, 81, 128, 129, 148, 160, 321, 354, 366, 367, 372, 375, 377], "min": [57, 58, 64, 65, 88, 89, 105, 106, 112, 113, 136, 137, 321, 361, 364, 372, 375, 450, 671, 674, 1090, 1127, 1130, 1218, 1221, 1223, 1226, 1239, 1242, 1392, 1447, 1450, 1477, 1480, 1492, 1496, 1497, 1501, 1525, 1529, 1751], "128": [57, 58, 63, 70, 71, 94, 99, 100, 111, 118, 119, 321, 372, 375, 1090, 1160, 1392, 1467, 1470], "max": [57, 58, 63, 64, 65, 72, 73, 88, 89, 105, 106, 111, 112, 113, 120, 121, 136, 137, 160, 321, 361, 364, 372, 375, 450, 666, 669, 1090, 1107, 1110, 1112, 1115, 1127, 1130, 1218, 1221, 1223, 1226, 1392, 1447, 1450, 1457, 1460, 1472, 1475, 1751], "127": [57, 58, 63, 111, 321, 372, 375], "is_bool_dtyp": [57, 58, 105, 106, 321], "is_float_dtyp": [57, 58, 105, 106, 161, 321], "is_int_dtyp": [57, 58, 105, 106, 159, 161, 321], "is_uint_dtyp": [57, 58, 105, 106, 159, 161, 321], "result_typ": [57, 58, 105, 106, 148, 321], "arrays_and_dtyp": [57, 58, 105, 106, 321, 401, 404], "to_devic": [59, 60, 107, 108, 416, 422], "stream": [59, 60, 107, 108, 416, 441, 445, 1823], "aco": [61, 62, 109, 110, 450, 1809], "real": [61, 62, 88, 89, 109, 110, 136, 137, 146, 450, 606, 609, 756, 760, 1392, 1418, 1421, 1482, 1485, 1751, 1774, 1777, 1783, 1786, 1821], "cosin": [61, 62, 109, 110, 450, 456, 459, 461, 464, 531, 534, 536, 539], "57": [61, 62, 109, 110, 416, 427, 450, 456, 459, 461, 464, 471, 474, 476, 479, 486, 489, 536, 539, 541, 544, 701, 704], "69": [61, 62, 114, 115, 128, 129, 160, 167, 450, 631, 634, 1283, 1295, 1298, 1392, 1447, 1450], "acosh": [61, 62, 109, 110, 321, 366, 367, 369, 370, 450, 1809], "hyperbol": [61, 62, 109, 110, 450, 461, 464, 476, 479, 491, 494, 536, 539, 731, 734, 756, 760], "99": [61, 62, 66, 67, 109, 110, 128, 129, 237, 266, 450, 461, 464, 1090, 1239, 1242, 1283, 1295, 1298, 1751, 1762, 1765], "asin": [61, 62, 109, 110, 450, 1809], "sine": [61, 62, 109, 110, 450, 471, 474, 476, 479, 726, 729, 731, 734], "927": [61, 62, 109, 110], "asinh": [61, 62, 109, 110, 450, 1809], "atan": [61, 62, 109, 110, 450, 1809], "tangent": [61, 62, 109, 110, 151, 450, 481, 484, 486, 489, 491, 494, 751, 755, 756, 760], "785": [61, 62, 109, 110, 450, 481, 484, 486, 489], "464": [61, 62, 128, 129, 237, 277, 278, 450, 486, 489], "atan2": [61, 62, 109, 110, 450, 1809], "coordin": [61, 62, 82, 83, 109, 110, 111, 130, 131, 237, 280, 283, 450, 486, 489, 1688, 1704, 1707], "quotient": [61, 62, 109, 110, 450, 486, 489], "245": [61, 62, 118, 119, 1321, 1372, 1375], "68": [61, 62, 128, 129, 196, 209, 212, 237, 266, 450, 486, 489, 1656, 1657, 1660], "588": [61, 62, 450, 486, 489], "inf": [61, 62, 63, 64, 65, 72, 73, 109, 110, 111, 112, 113, 120, 121, 148, 236, 450, 486, 489, 566, 569, 591, 594, 596, 599, 601, 604, 606, 609, 621, 624, 626, 629, 1090, 1173, 1176, 1277, 1281, 1392, 1447, 1450, 1525, 1529], "36": [61, 62, 63, 70, 71, 88, 89, 111, 112, 113, 120, 121, 450, 486, 489, 1090, 1127, 1130, 1392, 1467, 1470, 1497, 1501, 1637, 1649, 1751, 1762, 1765], "75": [61, 62, 63, 109, 110, 111, 112, 113, 118, 119, 128, 129, 450, 476, 479, 486, 489, 546, 549, 1090, 1179, 1182, 1392, 1437, 1440, 1467, 1470, 1637, 1646, 1661, 1677, 1680], "52": [61, 62, 109, 110, 112, 113, 114, 115, 128, 129, 237, 277, 278, 450, 486, 489, 546, 549, 1090, 1127, 1130, 1184, 1187, 1283, 1285, 1288, 1321, 1372, 1375, 1392, 1467, 1470, 1714, 1715, 1719, 1751, 1762, 1765], "719": [61, 62, 450, 486, 489], "197": [61, 62, 450, 486, 489], "atanh": [61, 62, 109, 110, 450, 1809], "549": [61, 62, 109, 110, 118, 119, 450, 491, 494, 1321, 1372, 1375], "47": [61, 62, 63, 80, 81, 109, 110, 111, 112, 113, 114, 115, 128, 129, 450, 736, 739, 1090, 1127, 1130, 1283, 1295, 1298, 1321, 1372, 1375, 1661, 1677, 1680], "bitwise_and": [61, 62, 109, 110, 450], "11": [61, 62, 63, 64, 65, 70, 71, 72, 73, 80, 81, 88, 89, 94, 99, 100, 109, 110, 111, 112, 113, 118, 119, 120, 121, 124, 125, 128, 129, 136, 137, 146, 148, 150, 161, 237, 277, 278, 450, 481, 484, 496, 499, 711, 714, 716, 719, 1090, 1106, 1147, 1150, 1184, 1187, 1223, 1226, 1321, 1323, 1326, 1372, 1375, 1392, 1413, 1416, 1427, 1430, 1437, 1440, 1447, 1450, 1467, 1470, 1492, 1496, 1497, 1501, 1535, 1547, 1550, 1552, 1573, 1576, 1623, 1627, 1637, 1644, 1646, 1655, 1661, 1667, 1670, 1672, 1675, 1688, 1709, 1713, 1714, 1715, 1719, 1751, 1752, 1755, 1757, 1760, 1762, 1765], "bitwise_invert": [61, 62, 109, 110, 450], "bitiwse_invert": [61, 62], "bitwise_left_shift": [61, 62, 109, 110, 450], "bitwise_or": [61, 62, 109, 110, 450], "89": [61, 62, 80, 81, 94, 99, 100, 105, 106, 109, 110, 111, 128, 129, 321, 372, 375, 450, 521, 524, 1392, 1502, 1505, 1751, 1787, 1791], "51": [61, 62, 63, 109, 110, 111, 112, 113, 128, 129, 450, 731, 734], "18": [61, 62, 63, 80, 81, 109, 110, 111, 118, 119, 128, 129, 136, 137, 146, 150, 196, 209, 212, 237, 277, 278, 450, 546, 549, 731, 734, 1392, 1413, 1416, 1442, 1445, 1467, 1470, 1661, 1672, 1675, 1751, 1757, 1760, 1762, 1765], "19": [61, 62, 63, 80, 81, 109, 110, 111, 120, 121, 128, 129, 150, 237, 277, 278, 450, 751, 755, 1392, 1413, 1416, 1510, 1514, 1637, 1649, 1661, 1672, 1675, 1735, 1746, 1749], "26": [61, 62, 78, 79, 80, 81, 111, 112, 113, 114, 115, 128, 129, 450, 546, 549, 731, 734, 1090, 1179, 1182, 1283, 1285, 1288, 1321, 1355, 1358, 1392, 1413, 1416, 1467, 1470, 1502, 1505, 1637, 1639, 1656, 1657, 1660, 1751, 1762, 1765], "27": [61, 62, 63, 72, 73, 80, 81, 109, 110, 111, 120, 121, 128, 129, 136, 137, 237, 277, 278, 450, 516, 519, 536, 539, 696, 699, 731, 734, 1090, 1184, 1187, 1321, 1387, 1390, 1392, 1442, 1445, 1467, 1470, 1515, 1519, 1637, 1639, 1646, 1751, 1762, 1765], "23": [61, 62, 63, 80, 81, 103, 104, 109, 110, 111, 112, 113, 128, 129, 160, 164, 237, 267, 270, 450, 521, 524, 596, 599, 601, 604, 606, 609, 711, 714, 721, 724, 731, 734, 761, 765, 1321, 1347, 1350, 1387, 1390, 1392, 1413, 1416, 1447, 1450, 1497, 1501, 1637, 1639, 1646, 1688, 1709, 1713], "20": [61, 62, 63, 70, 71, 80, 81, 88, 89, 109, 110, 111, 112, 113, 128, 129, 136, 137, 162, 166, 237, 277, 278, 450, 541, 544, 561, 564, 701, 704, 716, 719, 736, 739, 1090, 1152, 1155, 1160, 1223, 1226, 1239, 1242, 1392, 1413, 1416, 1437, 1440, 1447, 1450, 1467, 1470, 1502, 1505, 1661, 1667, 1670, 1688, 1704, 1707, 1709, 1713, 1751, 1762, 1765, 1778, 1781, 1787, 1791], "74": [61, 62, 128, 129, 450, 641, 644], "41": [61, 62, 63, 109, 110, 111, 112, 113, 120, 121, 196, 209, 212, 450, 481, 484, 736, 739, 1090, 1107, 1110, 1112, 1115, 1392, 1393, 1396, 1661, 1677, 1680, 1751, 1787, 1791], "59": [61, 62], "ceil": [61, 62, 109, 110, 237, 239, 240, 450, 1809], "radian": [61, 62, 63, 109, 110, 111, 151, 450, 456, 459, 471, 474, 481, 484, 486, 489, 531, 534, 541, 544, 701, 704, 726, 729, 751, 755], "54": [61, 62, 70, 71, 109, 110, 111, 118, 119, 128, 129, 150, 450, 531, 534, 536, 539, 761, 765, 1321, 1372, 1375, 1387, 1390, 1392, 1467, 1470, 1751, 1762, 1765], "416": [61, 62, 450, 531, 534], "540": [61, 62], "990": [61, 62], "cosh": [61, 62, 109, 110, 450, 1809], "angl": [61, 62, 109, 110, 180, 450, 486, 489, 536, 539, 731, 734, 756, 760], "76": [61, 62, 88, 89, 105, 106, 109, 110, 128, 129, 321, 372, 375, 450, 536, 539, 1392, 1502, 1505, 1637, 1646, 1751, 1762, 1765], "03": [61, 62, 109, 110, 114, 115, 128, 129, 237, 277, 278, 450, 631, 634, 1090, 1239, 1242, 1283, 1300, 1303, 1321, 1387, 1390, 1392, 1437, 1440], "81": [61, 62, 105, 106, 109, 110, 120, 121, 128, 129, 160, 237, 277, 278, 321, 372, 375, 450, 631, 634, 741, 744, 1637, 1646, 1661, 1677, 1680, 1751, 1762, 1765], "deg2rad": [61, 62, 109, 110, 450], "degre": [61, 62, 63, 88, 89, 109, 110, 111, 136, 137, 450, 541, 544, 701, 704, 1751, 1783, 1786, 1792, 1796, 1818], "180": [61, 62, 109, 110, 450, 541, 544, 701, 704], "270": [61, 62, 109, 110, 450, 541, 544, 701, 704], "360": [61, 62, 109, 110, 450, 541, 544, 701, 704], "71": [61, 62, 109, 110, 450, 541, 544, 701, 704], "28": [61, 62, 78, 79, 109, 110, 111, 112, 113, 128, 129, 136, 137, 450, 541, 544, 701, 704, 1090, 1179, 1182, 1283, 1285, 1288, 1321, 1347, 1350, 1355, 1358, 1372, 1375, 1392, 1467, 1470, 1656, 1657, 1660, 1751, 1762, 1765], "dividend": [61, 62, 109, 110, 450, 546, 549, 711, 714, 766, 770], "divisor": [61, 62, 66, 67, 88, 89, 109, 110, 114, 115, 136, 137, 450, 546, 549, 711, 714, 766, 770, 1283, 1285, 1288, 1289, 1292, 1300, 1303, 1751, 1783, 1786, 1792, 1796], "375": [61, 62], "erf": [61, 62, 109, 110, 450], "exponenti": [61, 62, 109, 110, 450, 556, 559, 561, 564, 641, 644, 696, 699], "gauss": [61, 62, 109, 110, 450, 556, 559], "328": [61, 62, 450, 556, 559, 751, 755], "677": [61, 62, 450, 556, 559], "842": [61, 62, 450, 556, 559, 751, 755], "exp": [61, 62, 109, 110, 450, 566, 569, 641, 644, 1392, 1482, 1485, 1809], "expm1": [61, 62, 109, 110, 148, 450], "244": [61, 62], "918": [61, 62], "48": [61, 62, 63, 109, 110, 111, 112, 113, 114, 115, 128, 129, 196, 204, 207, 450, 461, 464, 736, 739, 1090, 1179, 1182, 1283, 1285, 1288, 1295, 1298, 1392, 1467, 1470, 1637, 1639, 1751, 1762, 1765], "147": [61, 62, 196, 224, 227, 450, 566, 569], "floor": [61, 62, 109, 110, 450, 516, 519, 1809], "floor_divid": [61, 62, 109, 110, 450], "isfinit": [61, 62, 109, 110, 158, 450], "out_i": [61, 62, 109, 110, 450, 591, 594, 596, 599, 601, 604, 606, 609], "self_i": [61, 62, 109, 110], "finit": [61, 62, 63, 109, 110, 111, 450, 466, 469, 486, 489, 591, 594, 676, 679, 696, 699, 711, 714], "isinf": [61, 62, 109, 110, 450], "neg": [61, 62, 63, 72, 73, 76, 77, 80, 81, 90, 91, 95, 96, 109, 110, 111, 120, 121, 124, 125, 128, 129, 138, 139, 146, 155, 157, 196, 204, 207, 237, 239, 240, 258, 259, 450, 591, 594, 596, 599, 676, 679, 696, 699, 711, 714, 1392, 1408, 1411, 1492, 1496, 1520, 1524, 1525, 1529, 1552, 1558, 1561, 1568, 1571, 1573, 1576, 1593, 1596, 1661, 1672, 1675, 1797, 1798, 1801, 1803, 1806], "isnan": [61, 62, 109, 110, 450], "isreal": [61, 62, 109, 110, 450], "1j": [61, 62, 109, 110, 1090, 1239, 1242], "5j": [61, 62, 109, 110, 450, 606, 609], "6j": [61, 62, 450, 606, 609], "61": [61, 62, 63, 109, 110, 111, 114, 115, 122, 123, 128, 129, 450, 621, 624, 631, 634, 741, 744, 1283, 1285, 1288, 1321, 1355, 1358, 1535, 1536, 1539], "log10": [61, 62, 109, 110, 450], "logarithm": [61, 62, 109, 110, 450, 561, 564, 621, 624, 626, 629, 631, 634, 636, 639, 641, 644, 1392, 1482, 1485], "602": [61, 62, 450, 626, 629], "699": [61, 62, 450, 626, 629], "log1p": [61, 62, 109, 110, 450], "693": [61, 62, 109, 110, 196, 224, 227, 450, 476, 479, 631, 634, 1535, 1547, 1550], "001": [61, 62, 63, 78, 79, 111, 167, 168, 321, 361, 364, 1656, 1657, 1660], "0953": [61, 62, 109, 110, 450, 621, 624], "log2": [61, 62, 109, 110, 450], "logaddexp": [61, 62, 109, 110, 450], "05": [61, 62, 63, 66, 67, 78, 79, 109, 110, 111, 114, 115, 126, 127, 159, 160, 237, 277, 278, 450, 641, 644, 1090, 1161, 1179, 1182, 1230, 1283, 1285, 1288, 1300, 1303, 1392, 1447, 1450, 1656, 1657, 1660], "logical_and": [61, 62, 109, 110, 158, 162, 450, 1809, 1826], "logical_not": [61, 62, 109, 110, 148, 450, 1809], "logical_or": [61, 62, 109, 110, 450, 1809, 1826], "conform": [61, 62, 72, 73, 109, 110, 151, 237, 239, 240, 242, 244, 252, 253, 256, 258, 259, 261, 264, 266, 267, 270, 272, 275, 280, 283, 295, 296, 298, 301, 303, 307, 308, 312, 313, 315, 316, 320, 321, 343, 346, 361, 364, 372, 375, 401, 404, 450, 451, 454, 456, 459, 461, 464, 466, 469, 471, 474, 476, 479, 481, 484, 486, 489, 491, 494, 496, 499, 501, 504, 506, 509, 516, 519, 521, 524, 526, 529, 531, 534, 536, 539, 546, 549, 551, 554, 566, 569, 571, 574, 576, 579, 581, 584, 586, 589, 591, 594, 596, 599, 601, 604, 616, 619, 626, 629, 631, 634, 636, 639, 641, 644, 646, 649, 651, 654, 656, 659, 661, 664, 676, 679, 681, 684, 686, 689, 691, 694, 696, 699, 711, 714, 716, 719, 721, 724, 726, 729, 731, 734, 736, 739, 741, 744, 746, 750, 751, 755, 756, 760, 761, 765, 1392, 1393, 1396, 1398, 1401, 1403, 1406, 1408, 1411, 1413, 1416, 1418, 1421, 1422, 1425, 1427, 1430, 1437, 1440, 1442, 1445, 1447, 1450, 1452, 1455, 1457, 1460, 1462, 1465, 1467, 1470, 1472, 1475, 1477, 1480, 1482, 1485, 1487, 1490, 1492, 1496, 1497, 1501, 1502, 1505, 1520, 1524, 1525, 1529, 1552, 1558, 1561, 1568, 1571, 1573, 1576, 1578, 1581, 1588, 1591, 1593, 1596, 1603, 1606, 1608, 1611, 1688, 1689, 1692, 1694, 1697, 1704, 1707, 1709, 1713, 1714, 1715, 1719, 1720, 1724, 1725, 1729, 1730, 1734, 1735, 1736, 1739, 1746, 1749, 1751, 1766, 1769, 1770, 1773, 1774, 1777, 1778, 1781, 1783, 1786, 1787, 1791, 1792, 1796, 1797, 1798, 1801, 1803, 1806], "org": [61, 62, 109, 110, 114, 115, 151, 321, 343, 346, 450, 591, 594, 716, 719, 1283, 1285, 1288, 1289, 1292, 1392, 1482, 1485, 1530, 1534, 1751, 1783, 1786], "api_specif": [61, 62, 109, 110, 151, 321, 343, 346, 450, 591, 594, 716, 719, 1751, 1783, 1786], "elementwise_funct": [61, 62, 109, 110, 151, 450, 591, 594, 716, 719], "simplic": [61, 62, 72, 73, 109, 110, 151, 162, 168, 180, 237, 239, 240, 242, 244, 252, 253, 256, 258, 259, 261, 264, 266, 267, 270, 272, 275, 277, 278, 280, 283, 295, 296, 298, 301, 303, 307, 308, 312, 313, 315, 316, 320, 321, 343, 346, 379, 382, 389, 392, 450, 451, 454, 456, 459, 461, 464, 466, 469, 471, 474, 476, 479, 481, 484, 486, 489, 491, 494, 496, 499, 501, 504, 506, 509, 516, 519, 521, 524, 526, 529, 531, 534, 536, 539, 546, 549, 551, 554, 566, 569, 571, 574, 576, 579, 581, 584, 586, 589, 591, 594, 596, 599, 601, 604, 606, 609, 616, 619, 626, 629, 631, 634, 636, 639, 641, 644, 646, 649, 651, 654, 656, 659, 661, 664, 676, 679, 681, 684, 686, 689, 691, 694, 696, 699, 711, 714, 716, 719, 721, 724, 726, 729, 731, 734, 736, 739, 741, 744, 746, 750, 751, 755, 756, 760, 761, 765, 1090, 1147, 1150, 1164, 1167, 1173, 1176, 1179, 1182, 1265, 1269, 1283, 1313, 1317, 1321, 1333, 1336, 1342, 1345, 1355, 1358, 1372, 1375, 1382, 1385, 1387, 1390, 1392, 1393, 1396, 1398, 1401, 1403, 1406, 1408, 1411, 1413, 1416, 1418, 1421, 1422, 1425, 1427, 1430, 1437, 1440, 1442, 1445, 1447, 1450, 1452, 1455, 1457, 1460, 1462, 1465, 1467, 1470, 1472, 1475, 1477, 1480, 1482, 1485, 1487, 1490, 1492, 1496, 1497, 1501, 1502, 1505, 1520, 1524, 1525, 1529, 1530, 1534, 1552, 1553, 1556, 1558, 1561, 1563, 1566, 1568, 1571, 1573, 1576, 1578, 1581, 1583, 1586, 1588, 1591, 1593, 1596, 1598, 1601, 1603, 1606, 1608, 1611, 1613, 1617, 1618, 1622, 1623, 1627, 1628, 1632, 1656, 1657, 1660, 1688, 1689, 1692, 1694, 1697, 1704, 1707, 1709, 1713, 1714, 1715, 1719, 1720, 1724, 1725, 1729, 1730, 1734, 1735, 1736, 1739, 1746, 1749, 1751, 1766, 1769, 1770, 1773, 1774, 1777, 1778, 1781, 1783, 1786, 1787, 1791, 1792, 1796], "nestabl": [61, 62, 72, 73, 109, 110, 142, 150, 151, 157, 160, 237, 239, 240, 242, 244, 252, 253, 256, 258, 259, 261, 264, 266, 267, 270, 272, 275, 277, 278, 280, 283, 295, 296, 298, 301, 303, 307, 308, 312, 313, 315, 316, 320, 321, 343, 346, 379, 382, 389, 392, 450, 451, 454, 456, 459, 461, 464, 466, 469, 471, 474, 476, 479, 481, 484, 486, 489, 491, 494, 496, 499, 501, 504, 506, 509, 516, 519, 521, 524, 526, 529, 531, 534, 536, 539, 546, 549, 551, 554, 566, 569, 571, 574, 576, 579, 581, 584, 586, 589, 591, 594, 596, 599, 601, 604, 616, 619, 626, 629, 631, 634, 636, 639, 641, 644, 646, 649, 651, 654, 656, 659, 661, 664, 676, 679, 681, 684, 686, 689, 691, 694, 696, 699, 711, 714, 716, 719, 721, 724, 726, 729, 731, 734, 736, 739, 741, 744, 746, 750, 751, 755, 756, 760, 761, 765, 1090, 1147, 1150, 1164, 1167, 1173, 1176, 1179, 1182, 1249, 1253, 1265, 1269, 1283, 1313, 1317, 1321, 1333, 1336, 1342, 1345, 1355, 1358, 1372, 1375, 1382, 1385, 1387, 1390, 1392, 1393, 1396, 1398, 1401, 1403, 1406, 1408, 1411, 1413, 1416, 1418, 1421, 1422, 1425, 1427, 1430, 1437, 1440, 1442, 1445, 1447, 1450, 1452, 1455, 1457, 1460, 1462, 1465, 1467, 1470, 1472, 1475, 1477, 1480, 1482, 1485, 1487, 1490, 1492, 1496, 1497, 1501, 1502, 1505, 1520, 1524, 1525, 1529, 1530, 1534, 1552, 1553, 1556, 1558, 1561, 1563, 1566, 1568, 1571, 1573, 1576, 1578, 1581, 1583, 1586, 1588, 1591, 1593, 1596, 1598, 1601, 1603, 1606, 1608, 1611, 1613, 1617, 1618, 1622, 1623, 1627, 1628, 1632, 1656, 1657, 1660, 1688, 1689, 1692, 1694, 1697, 1704, 1707, 1709, 1713, 1714, 1715, 1719, 1720, 1724, 1725, 1729, 1730, 1734, 1735, 1736, 1739, 1746, 1749, 1751, 1766, 1769, 1770, 1773, 1774, 1777, 1778, 1781, 1783, 1786, 1787, 1791, 1792, 1796, 1797, 1798, 1801, 1803, 1806, 1808], "logical_xor": [61, 62, 109, 110, 450], "use_wher": [61, 62, 109, 110, 450, 666, 669, 671, 674], "formula": [61, 62, 109, 110, 450, 666, 669, 671, 674], "clip": [61, 62, 76, 77, 109, 110, 112, 113, 124, 125, 146, 155, 157, 167, 169, 450, 666, 669, 671, 674, 1090, 1107, 1110, 1112, 1115, 1552, 1809], "minimum": [61, 62, 64, 65, 76, 77, 82, 83, 88, 89, 109, 110, 112, 113, 124, 125, 130, 131, 136, 137, 450, 451, 454, 1090, 1161, 1162, 1230, 1231, 1239, 1242, 1244, 1247, 1552, 1553, 1556, 1688, 1694, 1697, 1751, 1766, 1769, 1774, 1777, 1809, 1816, 1822, 1826], "exce": [61, 62, 63, 111, 450, 671, 674], "arguement": [61, 62], "condit": [61, 62, 82, 83, 130, 131, 143, 148, 150, 152, 157, 180, 234, 235, 450, 676, 679, 1637, 1648, 1649, 1688, 1709, 1713], "boradcastbl": [61, 62, 450, 676, 679], "thatth": [61, 62], "30": [61, 62, 63, 94, 99, 100, 111, 112, 113, 128, 129, 136, 137, 450, 676, 679, 1090, 1152, 1155, 1179, 1182, 1184, 1187, 1223, 1226, 1233, 1239, 1242, 1392, 1437, 1440, 1467, 1470, 1637, 1647, 1751, 1762, 1765, 1778, 1781], "56": [61, 62, 63, 70, 71, 80, 81, 109, 110, 111, 150, 450, 676, 679, 736, 739, 751, 755, 761, 765, 1283, 1285, 1288, 1321, 1347, 1350, 1392, 1467, 1470, 1497, 1501, 1751, 1762, 1765], "expon": [61, 62, 63, 64, 65, 111, 112, 113, 450, 696, 699, 1090, 1244, 1247, 1392, 1452, 1455], "rad2deg": [61, 62, 109, 110, 450], "286": [61, 62, 111], "458": [61, 62], "573": [61, 62, 450, 701, 704], "reciproc": [61, 62, 109, 110, 450], "remaind": [61, 62, 63, 76, 77, 97, 98, 109, 110, 111, 124, 125, 143, 450, 1552, 1598, 1601], "modulu": [61, 62, 109, 110, 450, 711, 714], "x2_i": [61, 62, 109, 110, 143, 450, 466, 469, 486, 489, 496, 499, 506, 509, 511, 514, 516, 519, 521, 524, 546, 549, 551, 554, 576, 579, 581, 584, 586, 589, 611, 614, 616, 619, 641, 644, 646, 649, 656, 659, 661, 664, 676, 679, 686, 689, 696, 699, 711, 714, 746, 750], "94": [61, 62, 66, 67, 80, 81, 109, 110, 114, 115, 128, 129, 416, 435, 1283, 1295, 1298], "256": [61, 62, 1321, 1347, 1350], "0001": [61, 62], "45": [61, 62, 63, 88, 89, 94, 99, 100, 109, 110, 111, 114, 115, 128, 129, 450, 486, 489, 546, 549, 1283, 1285, 1288, 1300, 1303, 1392, 1467, 1470, 1552, 1598, 1601, 1751, 1762, 1765], "678": [61, 62], "33": [61, 62, 80, 81, 88, 89, 109, 110, 112, 113, 114, 115, 118, 119, 450, 481, 484, 516, 519, 1090, 1239, 1242, 1283, 1295, 1298, 1321, 1372, 1375, 1392, 1467, 1470, 1637, 1655, 1751, 1762, 1765], "sin": [61, 62, 64, 65, 109, 110, 144, 164, 450, 1090, 1140, 1143, 1809], "841": [61, 62, 109, 110, 196, 198, 201, 450, 726, 729], "909": [61, 62, 109, 110, 112, 113, 450, 726, 729], "141": [61, 62, 109, 110, 321, 328, 331, 450, 726, 729], "sinh": [61, 62, 109, 110, 450, 1809], "63": [61, 62, 95, 96, 109, 110, 120, 121, 450, 701, 704, 731, 734, 736, 739, 1392, 1393, 1396, 1467, 1470, 1637, 1639, 1751, 1762, 1765], "232": [61, 62, 109, 110, 450, 731, 734], "sqrt": [61, 62, 109, 110, 450, 1392, 1525, 1529], "squar": [61, 62, 72, 73, 109, 110, 120, 121, 450, 736, 739, 1283, 1294, 1299, 1319, 1392, 1393, 1396, 1403, 1406, 1408, 1411, 1418, 1421, 1422, 1425, 1427, 1430, 1437, 1440, 1452, 1455, 1482, 1485, 1487, 1490, 1492, 1496, 1515, 1519, 1637, 1644], "73": [61, 62, 120, 121, 160, 1392, 1393, 1396, 1661, 1672, 1675], "44": [61, 62, 63, 80, 81, 109, 110, 111, 128, 129, 450, 476, 479, 716, 719, 736, 739, 741, 744, 1090, 1106, 1392, 1467, 1470, 1637, 1646, 1688, 1709, 1713, 1751, 1762, 1765], "tan": [61, 62, 109, 110, 146, 151, 154, 155, 157, 158, 164, 450, 1090, 1097, 1809], "tanh": [61, 62, 109, 110, 164, 450, 1809], "762": [61, 62, 109, 110, 450, 756, 760], "964": [61, 62, 109, 110, 450, 756, 760], "trunc": [61, 62, 109, 110, 450], "025": [61, 62, 450, 761, 765], "trunc_divid": [61, 62, 109, 110, 450], "elementwis": [62, 78, 79, 110, 126, 127, 155, 161, 164, 451, 454, 456, 459, 461, 464, 466, 469, 471, 474, 476, 479, 481, 484, 486, 489, 491, 494, 496, 499, 501, 504, 506, 509, 511, 514, 516, 519, 521, 524, 526, 529, 531, 534, 536, 539, 541, 544, 546, 549, 551, 554, 556, 559, 561, 564, 566, 569, 571, 574, 576, 579, 581, 584, 586, 589, 591, 594, 596, 599, 601, 604, 606, 609, 611, 614, 616, 619, 621, 624, 626, 629, 631, 634, 636, 639, 641, 644, 646, 649, 651, 654, 656, 659, 661, 664, 666, 669, 671, 674, 676, 679, 681, 684, 686, 689, 691, 694, 696, 699, 701, 704, 706, 709, 711, 714, 716, 719, 721, 724, 726, 729, 731, 734, 736, 739, 741, 744, 746, 750, 751, 755, 756, 760, 761, 765, 766, 770, 1392, 1515, 1519, 1656, 1657, 1660], "allclos": [63, 111], "rtol": [63, 72, 73, 111, 120, 121, 159, 1392, 1457, 1460, 1472, 1475], "1e": [63, 66, 67, 74, 75, 78, 79, 111, 114, 115, 122, 123, 126, 127, 146, 155, 157, 159, 168, 169, 321, 361, 364, 1090, 1161, 1162, 1230, 1231, 1236, 1239, 1242, 1283, 1285, 1288, 1289, 1292, 1300, 1303, 1308, 1311, 1392, 1492, 1496, 1535, 1536, 1539, 1541, 1542, 1545, 1547, 1550, 1656, 1657, 1660, 1809], "atol": [63, 72, 73, 111, 120, 121, 1392, 1457, 1460], "08": [63, 88, 89, 111, 128, 129, 237, 277, 278, 450, 476, 479, 1321, 1387, 1390], "equal_nan": [63, 111], "toler": [63, 72, 73, 111, 120, 121, 143, 159, 1392, 1457, 1460, 1472, 1475, 1819], "compar": [63, 64, 65, 86, 87, 97, 98, 111, 112, 113, 134, 135, 145, 150, 153, 159, 160, 167, 1090, 1091, 1094, 1098, 1100, 1392, 1497, 1501, 1714, 1715, 1719, 1720, 1724, 1725, 1729, 1730, 1734, 1735, 1736, 1739, 1746, 1749, 1815, 1817, 1819, 1825, 1826], "1e10": 63, "00001e10": 63, "00001e": 63, "005": 63, "count_nonzero": [63, 111], "keepdim": [63, 72, 73, 76, 77, 82, 83, 88, 89, 90, 91, 97, 98, 111, 120, 121, 124, 125, 130, 131, 136, 137, 138, 139, 152, 158, 164, 1392, 1447, 1450, 1525, 1529, 1552, 1623, 1627, 1688, 1689, 1692, 1694, 1697, 1751, 1766, 1769, 1770, 1773, 1774, 1777, 1778, 1781, 1783, 1786, 1787, 1791, 1792, 1796, 1797, 1798, 1801, 1803, 1806], "count": [63, 76, 77, 84, 85, 90, 91, 111, 124, 125, 132, 133, 138, 139, 146, 150, 167, 416, 434, 1392, 1520, 1524, 1552, 1558, 1561, 1573, 1576, 1714, 1715, 1719, 1720, 1724, 1797, 1798, 1801, 1803, 1806], "flatten": [63, 64, 65, 76, 77, 82, 83, 84, 85, 111, 112, 113, 120, 121, 124, 125, 130, 131, 132, 133, 162, 1090, 1140, 1143, 1392, 1432, 1435, 1467, 1470, 1525, 1529, 1552, 1558, 1561, 1583, 1586, 1593, 1596, 1688, 1689, 1692, 1694, 1697, 1714, 1715, 1719, 1720, 1724, 1725, 1729, 1730, 1734], "diff": [63, 97, 98, 111, 146, 150, 167], "th": [63, 111], "discret": [63, 111, 1535, 1542, 1545], "static_diff": [63, 111], "exp2": [63, 111], "nearest": [63, 111, 450, 466, 469, 676, 679, 716, 719], "float_pow": [63, 111], "125": [63, 72, 73, 120, 121, 450, 516, 519, 1392, 1515, 1519], "fmax": [63, 111], "fmod": [63, 111], "divis": [63, 64, 65, 66, 67, 111, 112, 113, 114, 115, 155, 450, 516, 519, 546, 549, 576, 579, 711, 714, 766, 770, 1090, 1162, 1231, 1239, 1242, 1283, 1285, 1288, 1289, 1292, 1300, 1303], "gcd": [63, 111], "gradient": [63, 67, 111, 115, 161, 167, 168, 180, 181, 416, 440, 1284, 1285, 1288, 1289, 1292, 1293, 1294, 1295, 1298, 1299, 1300, 1303, 1304, 1307, 1308, 1311, 1312, 1313, 1317, 1318, 1319, 1320, 1633, 1634, 1635, 1636, 1809, 1819], "edge_ord": [63, 111], "w": [63, 66, 67, 70, 71, 97, 98, 109, 110, 111, 112, 113, 114, 115, 118, 119, 164, 167, 168, 1090, 1132, 1135, 1239, 1242, 1283, 1285, 1288, 1289, 1292, 1293, 1295, 1298, 1300, 1303, 1304, 1307, 1308, 1311, 1321, 1323, 1326, 1328, 1331, 1333, 1336, 1338, 1340, 1342, 1345, 1347, 1350, 1352, 1353, 1355, 1358, 1372, 1375, 1637, 1644], "outcom": [63, 111], "scale": [63, 70, 71, 111, 114, 115, 118, 119, 416, 438, 439, 1283, 1304, 1307, 1321, 1360, 1363, 1365, 1368, 1382, 1385, 1387, 1390, 1819, 1821], "frist": [63, 111], "estim": [63, 111], "boundari": [63, 80, 81, 111, 128, 129, 1661, 1677, 1680, 1819], "diment": 63, "40": [63, 64, 65, 94, 99, 100, 111, 112, 113, 128, 129, 136, 137, 450, 516, 519, 536, 539, 736, 739, 1090, 1152, 1155, 1223, 1226, 1239, 1242, 1282, 1392, 1437, 1440, 1467, 1470, 1637, 1647, 1751, 1762, 1765], "72": [63, 80, 81, 111, 114, 115, 237, 277, 278, 450, 561, 564, 566, 569, 1283, 1295, 1298, 1392, 1467, 1470, 1751, 1762, 1765], "33333333": [63, 111], "isclos": [63, 111, 143], "hold": [63, 64, 65, 72, 73, 88, 89, 111, 120, 121, 136, 137, 167, 1090, 1218, 1221, 1223, 1226, 1392, 1447, 1450, 1751, 1757, 1760, 1820], "01": [63, 66, 67, 111, 114, 115, 120, 121, 128, 129, 145, 169, 237, 277, 278, 450, 641, 644, 716, 719, 721, 724, 1090, 1239, 1242, 1283, 1285, 1288, 1300, 1303, 1392, 1427, 1430, 1497, 1501, 1535, 1541, 1661, 1672, 1675], "isneginf": [63, 111], "isposinf": [63, 111], "lcm": [63, 111], "60": [63, 88, 89, 111, 112, 113, 128, 129, 136, 137, 1090, 1184, 1187, 1239, 1242, 1282, 1392, 1467, 1470, 1637, 1641, 1751, 1752, 1755, 1762, 1765, 1778, 1781], "logaddexp2": [63, 111], "169925": [63, 111], "nan_to_num": [63, 111], "posinf": [63, 111], "neginf": [63, 111], "small": [63, 72, 73, 78, 79, 111, 120, 121, 126, 127, 150, 155, 159, 162, 164, 168, 181, 450, 676, 679, 1392, 1457, 1460, 1472, 1475, 1482, 1485, 1656, 1657, 1660, 1820], "5e": [63, 66, 67, 111, 1283, 1300, 1303], "nansum": [63, 111], "accumul": [63, 111], "By": [63, 88, 89, 90, 91, 111, 136, 137, 138, 139, 148, 150, 155, 157, 158, 164, 168, 169, 1392, 1520, 1524, 1552, 1583, 1586, 1751, 1752, 1755, 1766, 1769, 1770, 1773, 1774, 1777, 1778, 1781, 1783, 1786, 1787, 1791, 1792, 1796, 1797, 1798, 1801, 1803, 1806], "reduc": [63, 64, 65, 72, 73, 82, 83, 88, 89, 90, 91, 97, 98, 111, 112, 113, 120, 121, 130, 131, 136, 137, 138, 139, 152, 158, 162, 164, 166, 416, 440, 1090, 1127, 1130, 1392, 1477, 1480, 1688, 1689, 1692, 1694, 1697, 1751, 1766, 1769, 1770, 1773, 1774, 1777, 1778, 1781, 1783, 1786, 1787, 1791, 1792, 1796, 1797, 1798, 1801, 1803, 1806, 1817, 1821, 1822, 1823], "nextaft": [63, 111], "represent": [63, 64, 65, 94, 97, 98, 99, 100, 111, 112, 113, 180, 236, 321, 326, 327, 361, 364, 372, 375, 416, 419, 420, 450, 451, 454, 466, 469, 496, 499, 511, 514, 521, 524, 661, 664, 676, 679, 1090, 1096, 1255, 1258, 1817, 1818, 1820, 1824, 1825], "0e": [63, 66, 67, 111, 114, 115, 1283, 1300, 1303], "50": [63, 88, 89, 109, 110, 111, 112, 113, 166, 450, 541, 544, 701, 704, 1090, 1152, 1155, 1179, 1182, 1184, 1187, 1223, 1226, 1239, 1242, 1392, 1437, 1440, 1467, 1470, 1637, 1639, 1641, 1688, 1704, 1707, 1751, 1762, 1765], "4013e": [63, 111], "4028e": [63, 111], "38": [63, 109, 110, 111, 128, 129, 150, 321, 361, 364, 450, 751, 755], "signbit": [63, 111], "637": [63, 111], "212": [63, 70, 71, 111, 1714, 1715, 1719], "0909": [63, 111], "trapz": [63, 109, 110], "dx": [63, 109, 110], "sampl": [63, 80, 81, 88, 89, 109, 110, 111, 128, 129, 136, 137, 156, 159, 160, 237, 272, 275, 1321, 1360, 1363, 1365, 1368, 1661, 1662, 1665, 1667, 1670, 1672, 1675, 1677, 1680, 1751, 1783, 1786, 1792, 1796], "evenli": [63, 76, 77, 97, 98, 109, 110, 124, 125, 237, 239, 240, 272, 275, 277, 278, 1552, 1598, 1601], "apart": [63, 109, 110], "trapezoid": [63, 109, 110], "zeta": [63, 111], "0369": [63, 111], "2021": [63, 111, 1809], "isin": [63, 111], "test_el": [63, 111], "assume_uniqu": [63, 111], "invert": [63, 111, 450, 501, 504, 1392, 1452, 1455], "avg_pool1d": [63, 111], "kernel": [63, 70, 71, 111, 118, 119, 162, 164, 181, 1321, 1377, 1380, 1819, 1822, 1823], "stride": [63, 70, 71, 111, 118, 119, 1321, 1322, 1323, 1326, 1328, 1331, 1333, 1336, 1338, 1340, 1342, 1345, 1347, 1350, 1352, 1353, 1355, 1358, 1371, 1819], "pad": [63, 70, 71, 111, 118, 119, 1090, 1140, 1143, 1321, 1322, 1323, 1326, 1328, 1331, 1333, 1336, 1338, 1340, 1342, 1345, 1347, 1350, 1352, 1353, 1354, 1355, 1358, 1371, 1552, 1563, 1566, 1628, 1632], "data_format": [63, 70, 71, 111, 118, 119, 1321, 1322, 1323, 1326, 1328, 1331, 1333, 1336, 1338, 1340, 1342, 1345, 1347, 1350, 1352, 1353, 1355, 1358, 1365, 1368, 1370], "nwc": [63, 70, 71, 111, 118, 119, 1321, 1323, 1326, 1328, 1331, 1365, 1368], "batch_siz": [63, 70, 71, 80, 81, 111, 118, 119, 128, 129, 167, 1321, 1323, 1326, 1328, 1331, 1333, 1336, 1338, 1340, 1342, 1345, 1347, 1350, 1352, 1353, 1355, 1358, 1661, 1662, 1665], "d_in": [63, 70, 71, 111, 118, 119, 1321, 1323, 1326, 1328, 1331, 1333, 1336, 1338, 1340, 1342, 1345, 1347, 1350, 1352, 1353, 1355, 1358], "slide": [63, 70, 71, 111, 118, 119, 1321, 1323, 1326, 1328, 1331, 1333, 1336, 1338, 1340, 1342, 1345, 1347, 1350, 1352, 1353, 1355, 1358], "algorithm": [63, 70, 71, 95, 96, 111, 118, 119, 148, 158, 162, 181, 1321, 1323, 1326, 1328, 1331, 1333, 1336, 1338, 1340, 1342, 1345, 1347, 1350, 1352, 1353, 1355, 1358, 1392, 1482, 1485, 1819, 1821, 1823], "ncw": [63, 70, 71, 111, 118, 119, 1321, 1323, 1326, 1328, 1331, 1365, 1368], "pool": [63, 111], "arang": [63, 72, 73, 88, 89, 111, 120, 121, 148, 237, 272, 275, 277, 278, 1090, 1214, 1282, 1392, 1447, 1450, 1751, 1762, 1765, 1809, 1826], "reshap": [63, 72, 73, 76, 77, 97, 98, 111, 118, 119, 120, 121, 124, 125, 157, 158, 160, 162, 164, 166, 169, 1090, 1282, 1321, 1333, 1336, 1342, 1345, 1355, 1358, 1392, 1447, 1450, 1552, 1809], "avg_pool2d": [63, 111], "nhwc": [63, 70, 71, 111, 118, 119, 1321, 1333, 1336, 1338, 1340, 1355, 1358], "h": [63, 70, 71, 111, 112, 113, 118, 119, 142, 146, 1090, 1132, 1135, 1321, 1333, 1336, 1338, 1340, 1342, 1345, 1347, 1350, 1352, 1353, 1355, 1358, 1637, 1641, 1645, 1647, 1654, 1815], "nchw": [63, 70, 71, 111, 118, 119, 1321, 1333, 1336, 1338, 1340, 1355, 1358], "max_pool2d": [63, 111], "46": [63, 80, 81, 111, 118, 119, 128, 129, 450, 631, 634, 721, 724, 1637, 1639], "avg_pool3d": [63, 111], "ndhwc": [63, 70, 71, 111, 118, 119, 1321, 1342, 1345, 1347, 1350], "convolut": [63, 70, 71, 111, 118, 119, 1321, 1323, 1326, 1328, 1331, 1333, 1336, 1338, 1340, 1342, 1345, 1347, 1350, 1352, 1353, 1355, 1358, 1817, 1819], "ncdhw": [63, 70, 71, 111, 118, 119, 1321, 1342, 1345, 1347, 1350], "43": [63, 94, 99, 100, 128, 129, 450, 516, 519, 1661, 1672, 1675, 1677, 1680, 1688, 1709, 1713], "dct": [63, 111, 167], "norm": [63, 64, 65, 72, 73, 79, 111, 112, 113, 120, 121, 127, 161, 1090, 1107, 1110, 1112, 1115, 1392, 1447, 1450, 1525, 1529, 1657, 1660, 1809], "signal": [63, 111, 1818, 1819], "liter": [63, 72, 73, 111, 120, 121, 153, 1392, 1447, 1450, 1525, 1529], "lenght": [63, 111], "transform": [63, 70, 71, 111, 118, 119, 160, 169, 180, 1321, 1360, 1363, 1372, 1375, 1808, 1817, 1819, 1820, 1821], "truncat": [63, 111, 167, 1090, 1229], "larger": [63, 76, 77, 88, 89, 111, 124, 125, 136, 137, 160, 321, 361, 364, 1552, 1553, 1556, 1593, 1596, 1751, 1783, 1786, 1792, 1796, 1826], "ortho": [63, 111], "102": [63, 111, 128, 129], "406": [63, 111, 1090, 1107, 1110], "max_pool1d": [63, 111], "max_pool3d": [63, 111], "diagflat": [63, 111], "offset": [63, 72, 73, 111, 120, 121, 1392, 1413, 1416, 1510, 1514], "padding_valu": [63, 111], "right_left": [63, 111], "num_row": [63, 111], "num_col": [63, 111], "kron": [63, 111, 1826], "atleast_1d": [63, 111], "ari": [63, 111], "a1": 63, "a2": 63, "atleast_2d": [63, 111], "atleast_3d": [63, 111], "dsplit": [63, 111], "indices_or_sect": [63, 111], "3rd": [63, 111], "dstack": [63, 111], "start_dim": [63, 111], "end_dim": [63, 111], "dim": [63, 97, 98, 103, 104, 111, 148, 159, 162, 237, 290, 293, 1321, 1322, 1352, 1353, 1370], "fastest": [63, 76, 77, 111, 124, 125, 1552, 1588, 1591], "slowest": [63, 76, 77, 111, 124, 125, 1552, 1588, 1591], "fortran": [63, 76, 77, 111, 124, 125, 1552, 1588, 1591, 1819, 1823], "memori": [63, 76, 77, 111, 124, 125, 148, 149, 157, 158, 162, 164, 179, 181, 237, 280, 283, 416, 421, 435, 440, 446, 449, 1321, 1377, 1380, 1552, 1588, 1591, 1809, 1819, 1821, 1822, 1823], "layout": [63, 76, 77, 111, 124, 125, 145, 158, 162, 1552, 1588, 1591], "underli": [63, 76, 77, 111, 124, 125, 146, 162, 450, 496, 499, 511, 514, 521, 524, 661, 664, 1392, 1482, 1485, 1552, 1588, 1591, 1819], "fliplr": [63, 111], "flip": [63, 76, 77, 111, 124, 125, 158, 166, 167, 169, 450, 501, 504, 1552, 1809], "diag": [63, 72, 73, 111, 120, 121, 164, 1392], "flipud": [63, 111], "heavisid": [63, 111], "0000": [63, 111], "5000": [63, 1392, 1437, 1440], "hsplit": [63, 111], "horizont": [63, 111], "hstack": [63, 111], "vstack": [63, 111], "i0": [63, 111], "bessel": [63, 88, 89, 111, 136, 137, 1751, 1783, 1786, 1792, 1796], "26606588": [63, 111], "2795853": [63, 111], "88079259": [63, 111], "moveaxi": [63, 111], "destin": [63, 111], "unstack": [63, 76, 77, 97, 98, 124, 125, 146, 164, 167, 1552, 1809, 1826], "reorder": [63, 76, 77, 111, 124, 125, 1552, 1573, 1576], "pad_width": [63, 76, 77, 111, 124, 125, 1552, 1563, 1566, 1628, 1632], "constant": [63, 78, 79, 111, 126, 127, 155, 159, 161, 168, 169, 181, 1552, 1563, 1566, 1637, 1644, 1656, 1657, 1660], "stat_length": [63, 111], "constant_valu": [63, 111], "end_valu": [63, 111], "reflect_typ": [63, 111], "rot90": [63, 111], "rotat": [63, 111, 180], "plane": [63, 111], "take_along_axi": [63, 111], "arr": [63, 64, 65, 105, 106, 111, 148, 149, 321, 384, 387], "top_k": [63, 111], "largest": [63, 97, 98, 111, 180, 321, 361, 364, 372, 375, 1392, 1447, 1450, 1492, 1496], "retun": [63, 111], "smallest": [63, 97, 98, 111, 321, 361, 364, 372, 375, 450, 526, 529, 1392, 1447, 1450], "vsplit": [63, 111], "dirichlet": [63, 111], "seed": [63, 80, 81, 97, 98, 111, 128, 129, 160, 1661, 1662, 1665, 1667, 1670, 1672, 1675, 1677, 1680, 1683, 1686, 1809], "shuffl": [63, 80, 81, 97, 98, 111, 128, 129, 1661, 1809], "length": [63, 76, 77, 94, 97, 98, 99, 100, 111, 124, 125, 153, 160, 167, 237, 239, 240, 280, 283, 1090, 1282, 1392, 1492, 1496, 1497, 1501, 1535, 1541, 1552, 1588, 1591], "nativeshap": [63, 76, 77, 80, 81, 111, 124, 125, 128, 129, 237, 252, 266, 295, 296, 313, 315, 1090, 1223, 1226, 1237, 1254, 1259, 1321, 1328, 1331, 1338, 1340, 1347, 1350, 1552, 1588, 1591, 1661, 1667, 1670, 1672, 1675, 1677, 1680], "drawn": [63, 80, 81, 111, 128, 129, 160, 1661, 1662, 1665, 1667, 1670, 1672, 1675, 1677, 1680], "vector": [63, 64, 65, 70, 71, 72, 73, 112, 113, 118, 119, 120, 121, 180, 237, 280, 283, 1090, 1112, 1115, 1282, 1321, 1372, 1375, 1392, 1398, 1401, 1418, 1421, 1422, 1425, 1432, 1435, 1442, 1445, 1467, 1470, 1492, 1496, 1497, 1501, 1515, 1519, 1520, 1524, 1525, 1529, 1530, 1534, 1819], "10598304": 63, "21537054": 63, "67864642": 63, "48006698": 63, "07472073": 63, "44521229": 63, "55479872": 63, "05426367": 63, "39093761": 63, "19531053": 63, "51675832": 63, "28793114": 63, "12315625": 63, "29823365": 63, "5786101": 63, "15564976": 63, "50542368": 63, "33892656": 63, "1325352": 63, "44439589": 63, "42306891": 63, "msort": [63, 111], "randint": [63, 70, 71, 80, 81, 111, 118, 119, 128, 129, 148, 1661, 1809], "median": [63, 111, 158], "nanmean": [63, 111], "anyth": [63, 111, 160, 161, 1819, 1820], "6666666666666665": [63, 111], "quantil": [63, 111], "interpol": [63, 111, 1819], "linear": [63, 64, 65, 70, 71, 95, 96, 111, 112, 113, 118, 119, 146, 151, 158, 160, 162, 164, 167, 168, 169, 196, 198, 201, 203, 204, 207, 214, 217, 229, 232, 1090, 1140, 1143, 1214, 1321, 1360, 1363, 1487, 1490, 1637, 1645, 1809, 1817, 1818, 1819, 1822], "higher": [63, 66, 67, 111, 163, 164, 169, 181, 1816, 1819, 1820, 1823, 1825, 1826], "midpoint": [63, 111], "fraction": [63, 111], "surround": [63, 111, 162], "whichev": [63, 111], "rank": [63, 72, 73, 76, 77, 90, 91, 111, 120, 121, 124, 125, 138, 139, 237, 280, 283, 1392, 1398, 1401, 1408, 1411, 1457, 1460, 1477, 1480, 1487, 1490, 1510, 1514, 1520, 1524, 1525, 1529, 1552, 1563, 1566, 1568, 1571, 1608, 1611, 1623, 1627, 1628, 1632, 1688, 1704, 1707, 1797, 1798, 1801, 1803, 1806], "len": [63, 72, 73, 111, 120, 121, 146, 157, 158, 160, 166, 169, 237, 280, 283, 1392, 1515, 1519], "unravel_index": [63, 111], "unravel": [63, 111], "all_equ": [64, 65, 112, 113, 1090], "equality_matrix": [64, 65, 112, 113, 1090, 1091, 1094], "array_equ": [64, 65, 1090], "assert_supports_inplac": [64, 65, 112, 113, 1090], "clip_matrix_norm": [64, 65, 112, 113, 1090], "max_norm": [64, 65, 112, 113, 1090, 1107, 1110, 1112, 1115], "downscal": [64, 65, 112, 113, 1090, 1107, 1110, 1112, 1115], "894": [64, 65, 112, 113, 1090, 1107, 1110, 1112, 1115, 1656, 1657, 1660], "clip_vector_norm": [64, 65, 112, 113, 1090], "default_v": [64, 65, 1090, 1119, 1121], "catch_except": [64, 65, 1090, 1119, 1121], "rev": [64, 65, 1090, 1119, 1121], "with_cal": [64, 65, 1090, 1119, 1121], "catch": [64, 65, 160, 1090, 1119, 1121], "callabl": [64, 65, 112, 113, 146, 152, 158, 164, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 196, 197, 203, 234, 235, 237, 246, 247, 248, 321, 366, 367, 369, 370, 416, 428, 429, 440, 1090, 1096, 1106, 1119, 1121, 1127, 1130, 1145, 1146, 1214, 1270, 1282, 1321, 1382, 1385, 1633, 1634, 1635, 1636, 1637, 1644, 1645, 1646, 1648, 1649, 1650, 1651], "einops_rearrang": [64, 65, 112, 113, 1090], "axes_length": [64, 65, 112, 113, 1090, 1122, 1125, 1127, 1130, 1132, 1135], "arrang": [64, 65, 1090, 1122, 1125], "rearrang": [64, 65, 112, 113, 1090, 1122, 1125, 1132, 1135], "einops_reduc": [64, 65, 112, 113, 1090], "reduct": [64, 65, 74, 75, 90, 91, 97, 98, 112, 113, 122, 123, 138, 139, 148, 160, 166, 1090, 1127, 1130, 1218, 1221, 1223, 1226, 1535, 1536, 1539, 1541, 1542, 1545, 1547, 1550, 1797, 1798, 1801, 1803, 1806, 1809], "One": [64, 65, 76, 77, 80, 81, 112, 113, 124, 125, 128, 129, 146, 148, 150, 159, 160, 164, 166, 167, 1090, 1127, 1130, 1552, 1588, 1591, 1661, 1667, 1670], "prod": [64, 65, 88, 89, 112, 113, 136, 137, 148, 150, 164, 1090, 1127, 1130, 1751], "einops_repeat": [64, 65, 112, 113, 1090], "fourier_encod": [64, 65, 112, 113, 1090], "max_freq": [64, 65, 112, 113, 1090, 1140, 1143], "num_band": [64, 65, 112, 113, 1090, 1140, 1143], "concat": [64, 65, 76, 77, 97, 98, 124, 125, 159, 162, 164, 416, 440, 1090, 1140, 1143, 1552, 1809], "band": [64, 65, 112, 113, 1090, 1140, 1143], "linearli": [64, 65, 112, 113, 1090, 1140, 1143, 1392, 1487, 1490], "oppos": [64, 65, 112, 113, 148, 1090, 1140, 1143], "geometr": [64, 65, 112, 113, 1090, 1140, 1143, 1392, 1515, 1519], "concaten": [64, 65, 76, 77, 159, 162, 164, 167, 1090, 1140, 1143, 1552, 1558, 1561, 1809], "seper": [64, 65, 150, 159, 160, 1090, 1140, 1143], "batch": [64, 65, 97, 98, 112, 113, 120, 121, 146, 155, 167, 416, 438, 439, 1090, 1140, 1143, 1147, 1150, 1282, 1321, 1372, 1375, 1392, 1525, 1529, 1633, 1634, 1635, 1636, 1656, 1657, 1660, 1817], "expand": [64, 65, 76, 77, 112, 113, 146, 1090, 1140, 1143, 1552, 1568, 1571], "gather": [64, 65, 112, 113, 1090, 1152, 1155, 1160, 1826], "gather_nd": [64, 65, 112, 113, 1090, 1809], "get_num_dim": [64, 65, 112, 113, 1090, 1809], "as_arrai": [64, 65, 112, 113, 1090, 1164, 1167, 1237], "has_nan": [64, 65, 112, 113, 1090], "include_inf": [64, 65, 112, 113, 1090, 1173, 1176, 1277, 1281], "inplace_decr": [64, 65, 112, 113, 1090], "val": [64, 65, 97, 98, 112, 113, 157, 166, 1090, 1179, 1182, 1184, 1187, 1189, 1192, 1230, 1231], "decrement": [64, 65, 112, 113, 1090, 1179, 1182], "inplace_incr": [64, 65, 112, 113, 1090], "inplace_upd": [64, 65, 112, 113, 157, 1090], "ensure_in_backend": [64, 65, 157, 1090, 1189, 1192], "inplac": [64, 65, 66, 67, 97, 98, 112, 113, 142, 144, 150, 154, 156, 162, 166, 168, 1090, 1097, 1101, 1104, 1178, 1189, 1192, 1194, 1392, 1437, 1440], "is_arrai": [64, 65, 112, 113, 158, 1090], "exclus": [64, 65, 88, 89, 97, 98, 112, 113, 136, 137, 146, 148, 155, 158, 161, 169, 237, 239, 240, 1090, 1195, 1198, 1200, 1203, 1208, 1211, 1661, 1667, 1670, 1751, 1752, 1755, 1757, 1760, 1823, 1825], "trace": [64, 65, 72, 73, 97, 98, 112, 113, 120, 121, 143, 148, 164, 181, 1090, 1171, 1195, 1198, 1200, 1203, 1208, 1211, 1229, 1235, 1272, 1276, 1392, 1808, 1820, 1825], "is_ivy_arrai": [64, 65, 112, 113, 157, 166, 1090], "is_ivy_contain": [64, 65, 1090], "is_native_arrai": [64, 65, 112, 113, 166, 1090], "scatter_flat": [64, 65, 112, 113, 1090], "occupi": [64, 65, 321, 361, 364, 372, 375, 1090, 1218, 1221, 1223, 1226], "scatter_nd": [64, 65, 112, 113, 162, 166, 1090, 1809], "stable_divid": [64, 65, 112, 113, 155, 1090], "denomin": [64, 65, 78, 79, 112, 113, 126, 127, 155, 181, 1090, 1162, 1231, 1239, 1242, 1656, 1657, 1660, 1816], "min_denomin": [64, 65, 112, 113, 1090, 1239, 1242], "_min_denomin": [64, 65, 112, 113, 1090, 1239, 1242], "stable_pow": [64, 65, 112, 113, 1090], "min_bas": [64, 65, 112, 113, 1090, 1244, 1247], "_min_bas": [64, 65, 78, 79, 112, 113, 126, 127, 1090, 1244, 1247, 1656, 1657, 1660], "supports_inplace_upd": [64, 65, 112, 113, 1090], "supports_inplac": [64, 65, 112, 113], "to_list": [64, 65, 112, 113, 1090, 1809], "to_numpi": [64, 65, 112, 113, 167, 1090, 1809], "to_scalar": [64, 65, 112, 113, 1090], "value_is_nan": [64, 65, 112, 113, 1090], "92": [64, 65, 128, 129, 1283, 1308, 1311, 1392, 1403, 1406, 1492, 1496], "adam_step": [66, 67, 114, 115, 1283], "mw": [66, 67, 114, 115, 168, 1283, 1285, 1288, 1289, 1292], "vw": [66, 67, 114, 115, 168, 1283, 1285, 1288, 1289, 1292], "beta1": [66, 67, 114, 115, 168, 1090, 1097, 1283, 1285, 1288, 1289, 1292, 1300, 1303], "beta2": [66, 67, 114, 115, 168, 1090, 1097, 1283, 1285, 1288, 1289, 1292, 1300, 1303], "999": [66, 67, 109, 110, 114, 115, 168, 450, 756, 760, 1283, 1285, 1288, 1289, 1292, 1300, 1303, 1308, 1311], "epsilon": [66, 67, 72, 73, 74, 75, 78, 79, 114, 115, 120, 121, 122, 123, 126, 127, 146, 155, 157, 168, 1090, 1097, 1283, 1285, 1288, 1289, 1292, 1300, 1303, 1392, 1457, 1460, 1472, 1475, 1535, 1536, 1539, 1541, 1542, 1545, 1547, 1550, 1656, 1657, 1660], "07": [66, 67, 74, 75, 109, 110, 114, 115, 122, 123, 128, 129, 168, 237, 277, 278, 450, 486, 489, 621, 624, 641, 644, 721, 724, 1283, 1285, 1288, 1289, 1292, 1294, 1295, 1298, 1299, 1300, 1303, 1319, 1535, 1536, 1539, 1541, 1542, 1545, 1547, 1550], "cost": [66, 67, 114, 115, 162, 1283, 1285, 1288, 1289, 1292, 1295, 1298, 1300, 1303, 1304, 1307, 1308, 1311, 1633, 1634, 1635, 1636, 1817], "weight": [66, 67, 70, 71, 78, 79, 114, 115, 118, 119, 126, 127, 146, 155, 164, 168, 169, 1283, 1285, 1288, 1289, 1292, 1295, 1298, 1300, 1303, 1304, 1307, 1308, 1311, 1321, 1372, 1375, 1377, 1380, 1387, 1390, 1535, 1541, 1656, 1657, 1660, 1818], "dc": [66, 67, 114, 115, 1283, 1285, 1288, 1289, 1292, 1295, 1298, 1300, 1303, 1304, 1307, 1308, 1311], "dw": [66, 67, 114, 115, 1283, 1285, 1288, 1289, 1292, 1295, 1298, 1300, 1303, 1304, 1307, 1308, 1311], "averag": [66, 67, 114, 115, 1283, 1285, 1288, 1289, 1292, 1300, 1303, 1633, 1634, 1635], "forget": [66, 67, 114, 115, 148, 1283, 1285, 1288, 1289, 1292, 1300, 1303], "adam": [66, 67, 114, 115, 167, 168, 169, 1090, 1097, 1283, 1285, 1288, 1289, 1292, 1300, 1303, 1809, 1819], "delta": [66, 67, 114, 115, 1283, 1285, 1288], "dcdw": [66, 67, 114, 115, 1283, 1285, 1288, 1289, 1292, 1295, 1298, 1300, 1303, 1304, 1307], "adam_step_delta": [66, 67, 114, 115, 1283, 1285, 1288], "2020105": [66, 67, 1283, 1285, 1288], "22187898": [66, 67, 1283, 1285, 1288], "24144873": [66, 67, 1283, 1285, 1288], "10000002": [66, 67, 136, 137, 1283, 1285, 1288], "20000005": [66, 67, 1283, 1285, 1288], "00300002": [66, 67, 1283, 1285, 1288], "00800002": [66, 67, 1283, 1285, 1288], "adam_upd": [66, 67, 114, 115, 168, 1283], "lr": [66, 67, 114, 115, 167, 168, 1090, 1097, 1283, 1289, 1292, 1295, 1298, 1300, 1303, 1304, 1307, 1308, 1311], "mw_tm1": [66, 67, 114, 115, 1283, 1289, 1292, 1300, 1303], "vw_tm1": [66, 67, 114, 115, 1283, 1289, 1292, 1300, 1303], "stop_gradi": [66, 67, 114, 115, 168, 416, 440, 1090, 1097, 1283, 1289, 1292, 1295, 1298, 1300, 1303, 1304, 1307, 1308, 1311, 1633, 1634, 1635, 1636, 1809], "rate": [66, 67, 114, 115, 1283, 1289, 1292, 1295, 1298, 1300, 1303, 1304, 1307, 1308, 1311, 1633, 1634, 1635, 1636], "ws_new": [66, 67, 114, 115, 1283, 1289, 1292, 1300, 1303, 1304, 1307, 1308, 1311], "gradient_descent_upd": [66, 67, 114, 115, 1283, 1633, 1634, 1635, 1636, 1809], "handl": [66, 67, 94, 97, 98, 99, 100, 142, 146, 148, 149, 154, 155, 156, 157, 158, 159, 160, 162, 168, 234, 235, 416, 419, 420, 421, 422, 423, 425, 430, 434, 435, 446, 449, 1816, 1826], "descent": [66, 67, 114, 115, 168, 1283, 1295, 1298, 1819], "new_weight": [66, 67, 114, 115, 167, 1283, 1295, 1298, 1300, 1303], "95": [66, 67, 80, 81, 114, 115, 128, 129, 196, 198, 201, 1283, 1285, 1288, 1295, 1298, 1308, 1311, 1661, 1672, 1675], "97": [66, 67, 109, 110, 114, 115, 128, 129, 450, 476, 479, 1283, 1295, 1298], "96": [66, 67, 109, 110, 111, 112, 113, 128, 129, 450, 531, 534, 751, 755, 1090, 1127, 1130, 1283, 1295, 1298, 1392, 1467, 1470, 1751, 1762, 1765], "lamb_upd": [66, 67, 114, 115, 1283], "max_trust_ratio": [66, 67, 114, 115, 1283, 1300, 1303], "decay_lambda": [66, 67, 114, 115, 1283, 1300, 1303, 1304, 1307], "trust": [66, 67, 114, 115, 1283, 1300, 1303], "ratio": [66, 67, 114, 115, 1283, 1300, 1303], "decai": [66, 67, 114, 115, 1283, 1300, 1303, 1304, 1307], "lamb": [66, 67, 114, 115, 168, 1283, 1300, 1303], "784": [66, 67, 1283, 1300, 1303], "78": [66, 67, 450, 521, 524, 721, 724, 1283, 1300, 1303, 1392, 1467, 1470, 1661, 1672, 1675, 1751, 1762, 1765], "02": [66, 67, 78, 79, 80, 81, 109, 110, 114, 115, 128, 129, 237, 277, 278, 450, 641, 644, 1090, 1239, 1242, 1283, 1285, 1288, 1300, 1303, 1656, 1657, 1660, 1661, 1677, 1680], "04": [66, 67, 114, 115, 160, 196, 209, 212, 237, 277, 278, 321, 361, 364, 450, 566, 569, 1090, 1230, 1236, 1283, 1285, 1288, 1300, 1303, 1321, 1387, 1390], "lars_upd": [66, 67, 114, 115, 1283], "lar": [66, 67, 114, 115, 168, 1283, 1304, 1307], "optimizer_upd": [66, 67, 114, 115, 1283], "effective_grad": [66, 67, 114, 115, 1283, 1308, 1311], "3e": [66, 67, 114, 115, 1283, 1308, 1311], "preserve_typ": [66, 67, 114, 115, 1283, 1313, 1317], "preserv": [66, 67, 94, 97, 98, 99, 100, 114, 115, 160, 169, 181, 1283, 1313, 1317, 1552, 1573, 1576], "conv1d": [70, 71, 118, 119, 1321], "dilat": [70, 71, 111, 118, 119, 1321, 1322, 1323, 1326, 1328, 1331, 1333, 1336, 1338, 1340, 1342, 1345, 1347, 1350, 1352, 1353, 1354, 1355, 1358], "fw": [70, 71, 118, 119, 160, 1321, 1323, 1326, 1328, 1331, 1333, 1336, 1338, 1340, 1342, 1345, 1347, 1350, 1352, 1353, 1355, 1358], "d_out": [70, 71, 118, 119, 1321, 1323, 1326, 1328, 1331, 1333, 1336, 1338, 1340, 1342, 1345, 1347, 1350, 1352, 1353], "wio": [70, 71, 1321, 1323, 1326], "conv1d_transpos": [70, 71, 118, 119, 1321], "output_shap": [70, 71, 118, 119, 1321, 1322, 1328, 1331, 1338, 1340, 1347, 1350, 1353], "conv2d": [70, 71, 118, 119, 1321, 1809], "fh": [70, 71, 118, 119, 1321, 1333, 1336, 1338, 1340, 1342, 1345, 1347, 1350, 1352, 1353, 1355, 1358], "hwio": [70, 71, 1321, 1333, 1336], "conv3d": [70, 71, 118, 119, 1321], "fd": [70, 71, 1321, 1342, 1345, 1347, 1350, 1352, 1353], "conv3d_transpos": [70, 71, 118, 119, 1321], "depthwise_conv2d": [70, 71, 118, 119, 1321, 1809], "255": [70, 71, 111, 118, 119, 450, 516, 519], "random_norm": [70, 71, 80, 81, 118, 119, 128, 129, 1321, 1342, 1345, 1347, 1350, 1355, 1358, 1392, 1492, 1496, 1661, 1714, 1715, 1719], "std": [70, 71, 80, 81, 88, 89, 118, 119, 128, 129, 136, 137, 150, 1321, 1342, 1345, 1347, 1350, 1355, 1358, 1661, 1667, 1670, 1672, 1675, 1714, 1715, 1719, 1751], "dropout": [70, 71, 118, 119, 167, 1321, 1365, 1368], "prob": [70, 71, 118, 119, 128, 129, 1321, 1360, 1363, 1365, 1368, 1661, 1662, 1665], "dropout1d": [70, 71, 118, 119, 1321], "bia": [70, 71, 78, 79, 118, 119, 126, 127, 164, 168, 1090, 1214, 1321, 1372, 1375, 1377, 1380, 1656, 1657, 1660], "outer_batch_shap": [70, 71, 118, 119, 1321, 1372, 1375], "inner_batch_shap": [70, 71, 118, 119, 1321, 1372, 1375], "in_featur": [70, 71, 118, 119, 1321, 1372, 1375], "out_featur": [70, 71, 118, 119, 1321, 1360, 1363, 1372, 1375], "84": [70, 71, 88, 89, 109, 110, 126, 127, 128, 129, 321, 372, 375, 416, 427, 1392, 1467, 1470, 1656, 1657, 1660, 1751, 1762, 1765], "133": [70, 71, 1090, 1112, 1115], "134": [70, 71], "lstm_updat": [70, 71, 118, 119, 164, 1321], "init_h": [70, 71, 118, 119, 164, 1321, 1377, 1380], "init_c": [70, 71, 118, 119, 164, 1321, 1377, 1380], "recurrent_kernel": [70, 71, 118, 119, 164, 1321, 1377, 1380], "recurrent_bia": [70, 71, 118, 119, 164, 1321, 1377, 1380], "multi_head_attent": [70, 71, 118, 119, 157, 1321], "num_head": [70, 71, 118, 119, 1321, 1382, 1385], "mask": [70, 71, 118, 119, 162, 1090, 1160, 1321, 1382, 1385, 1387, 1390], "to_q_fn": [70, 71, 118, 119, 1321, 1382, 1385], "to_kv_fn": [70, 71, 118, 119, 1321, 1382, 1385], "to_out_fn": [70, 71, 118, 119, 157, 1321, 1382, 1385], "to_q_v": [70, 71, 118, 119, 1321, 1382, 1385], "to_kv_v": [70, 71, 118, 119, 1321, 1382, 1385], "to_out_v": [70, 71, 118, 119, 1321, 1382, 1385], "scaled_dot_product_attent": [70, 71, 118, 119, 1321], "linear_algebra": [72, 73, 120, 121, 161, 1392, 1393, 1396, 1398, 1401, 1403, 1406, 1408, 1411, 1413, 1416, 1418, 1421, 1422, 1425, 1427, 1430, 1432, 1435, 1437, 1440, 1442, 1445, 1447, 1450, 1452, 1455, 1457, 1460, 1462, 1465, 1467, 1470, 1472, 1475, 1477, 1480, 1482, 1485, 1487, 1490, 1492, 1496, 1497, 1501, 1502, 1505, 1506, 1509, 1510, 1514, 1515, 1519, 1520, 1524, 1525, 1529, 1530, 1534], "choleski": [72, 73, 120, 121, 157, 1392], "symmetr": [72, 73, 111, 120, 121, 146, 1392, 1393, 1396, 1418, 1421, 1422, 1425, 1427, 1430, 1530, 1534], "625": [72, 73, 1392, 1393, 1396], "cross": [72, 73, 74, 75, 120, 121, 122, 123, 147, 1392, 1535, 1536, 1539, 1541, 1542, 1545, 1547, 1550, 1809], "vif": [72, 73, 120, 121, 1392, 1398, 1401], "det": [72, 73, 120, 121, 1392, 1482, 1485], "axis1": [72, 73, 76, 77, 120, 121, 124, 125, 1392, 1413, 1416, 1510, 1514, 1552, 1613, 1617], "axis2": [72, 73, 120, 121, 1392, 1413, 1416, 1510, 1514], "eig": [72, 73, 120, 121, 1392, 1422, 1425, 1427, 1430], "eigh": [72, 73, 120, 121, 1392, 1418, 1421], "uplo": [72, 73, 120, 121, 1392, 1422, 1425, 1427, 1430], "eigvalsh": [72, 73, 120, 121, 1392], "eigenvalu": [72, 73, 120, 121, 1392, 1418, 1421, 1422, 1425, 1427, 1430], "inv": [72, 73, 120, 121, 1392, 1809], "adjoint": [72, 73, 120, 121, 1392, 1437, 1440, 1492, 1496], "matmul": [72, 73, 120, 121, 145, 160, 161, 164, 1090, 1282, 1392, 1492, 1496, 1809], "transpose_a": [72, 73, 120, 121, 1392, 1442, 1445], "transpose_b": [72, 73, 120, 121, 1392, 1442, 1445], "matrix_norm": [72, 73, 120, 121, 1392], "ord": [72, 73, 120, 121, 1392, 1447, 1450, 1525, 1529], "fro": [72, 73, 120, 121, 1392, 1447, 1450], "nuc": [72, 73, 120, 121, 1392, 1447, 1450], "matrix_pow": [72, 73, 120, 121, 1392], "matrix_rank": [72, 73, 120, 121, 1392], "singular": [72, 73, 120, 121, 148, 1392, 1447, 1450, 1457, 1460, 1472, 1475, 1492, 1496, 1497, 1501], "largest_singular_valu": [72, 73, 120, 121, 1392, 1457, 1460, 1472, 1475], "ep": [72, 73, 120, 121, 321, 361, 364, 1392, 1457, 1460, 1472, 1475], "defici": [72, 73, 1392, 1457, 1460], "matrix_transpos": [72, 73, 120, 121, 166, 1392], "pinv": [72, 73, 120, 121, 1392, 1809], "0426": [72, 73, 120, 121, 1661, 1672, 1675], "0964": [72, 73, 120, 121], "0605": [72, 73, 120, 121], "1368": [72, 73, 120, 121], "qr": [72, 73, 120, 121, 1392], "slogdet": [72, 73, 120, 121, 1392], "namedtupl": [72, 73, 84, 85, 120, 121, 132, 133, 1392, 1418, 1421, 1422, 1425, 1477, 1480, 1482, 1485, 1492, 1496, 1714, 1715, 1719, 1720, 1724, 1725, 1729], "logabsdet": [72, 73, 120, 121, 1392, 1482, 1485], "6931472": [72, 73, 120, 121, 1392, 1482, 1485], "098611": [72, 73, 1392, 1482, 1485], "solv": [72, 73, 120, 121, 143, 158, 165, 180, 1392, 1821], "svd": [72, 73, 120, 121, 1392, 1497, 1501, 1809], "compute_uv": [72, 73, 120, 121, 1392, 1492, 1496], "full_matric": [72, 73, 120, 121, 1392, 1492, 1496], "svdval": [72, 73, 120, 121, 1392], "tensordot": [72, 73, 120, 121, 148, 1392], "tensorsolv": [72, 73, 120, 121, 1392], "vander": [72, 73, 120, 121, 1392], "vandermond": [72, 73, 120, 121, 1392, 1515, 1519], "column": [72, 73, 120, 121, 237, 258, 259, 1392, 1418, 1421, 1422, 1425, 1447, 1450, 1477, 1480, 1487, 1490, 1492, 1496, 1515, 1519], "vecdot": [72, 73, 120, 121, 1392], "vector_norm": [72, 73, 120, 121, 1392, 1809], "vector_to_skew_symmetric_matrix": [72, 73, 120, 121, 1392, 1809], "binary_cross_entropi": [74, 75, 122, 123, 1535], "pred": [74, 75, 122, 123, 146, 155, 157, 1535, 1536, 1539, 1541, 1542, 1545, 1547, 1550], "predict": [74, 75, 122, 123, 1535, 1536, 1539, 1541, 1542, 1545, 1547, 1550], "amount": [74, 75, 122, 123, 149, 159, 416, 446, 1535, 1536, 1539, 1541, 1542, 1545, 1547, 1550], "smooth": [74, 75, 122, 123, 1535, 1536, 1539, 1541, 1542, 1545, 1547, 1550], "binari": [74, 75, 122, 123, 450, 496, 499, 511, 514, 521, 524, 661, 664, 1535, 1536, 1539, 1541], "entropi": [74, 75, 122, 123, 1535, 1536, 1539, 1541, 1542, 1545, 1547, 1550], "357": [74, 75, 122, 123, 1535, 1536, 1539, 1547, 1550], "223": [74, 75, 122, 123, 1535, 1536, 1539], "cross_entropi": [74, 75, 122, 123, 146, 155, 157, 1535, 1547, 1550], "3862944": [74, 75, 1535, 1542, 1545], "sparse_cross_entropi": [74, 75, 122, 123, 1535], "logit": [74, 75, 122, 123, 1535, 1541, 1547, 1550], "loss": [75, 123, 148, 155, 158, 161, 167, 168, 169, 1536, 1539, 1541, 1542, 1545, 1547, 1550, 1809, 1819, 1826], "x_min": [76, 77, 124, 125, 169, 1552, 1553, 1556], "x_max": [76, 77, 124, 125, 169, 1552, 1553, 1556], "join": [76, 77, 97, 98, 152, 1552, 1558, 1561, 1608, 1611, 1809], "constant_pad": [76, 77, 124, 125, 1552], "expand_dim": [76, 77, 124, 125, 158, 164, 167, 1321, 1355, 1358, 1552, 1809], "permute_dim": [76, 77, 124, 125, 1552], "valueerror": [76, 77, 112, 113, 124, 125, 152, 1090, 1249, 1253, 1552, 1588, 1591, 1603, 1606], "reus": [76, 77, 124, 125, 152, 160, 1552, 1588, 1591, 1824], "buffer": [76, 77, 124, 125, 181, 1552, 1588, 1591], "roll": [76, 77, 124, 125, 146, 154, 1552], "restor": [76, 77, 124, 125, 1552, 1593, 1596], "num_or_size_split": [76, 77, 97, 98, 124, 125, 164, 1321, 1382, 1385, 1552, 1598, 1601], "with_remaind": [76, 77, 97, 98, 124, 125, 1552, 1598, 1601], "squeez": [76, 77, 124, 125, 1552, 1809, 1819], "swapax": [76, 77, 124, 125, 1552], "axis0": [76, 77, 124, 125, 1552, 1613, 1617], "swap_ax": [76, 77], "tile": [76, 77, 112, 113, 124, 125, 1552, 1809], "rep": [76, 77, 124, 125, 1552, 1618, 1622], "unpack": [76, 77, 124, 125, 153, 159, 160, 1552, 1623, 1627], "zero_pad": [76, 77, 124, 125, 1552, 1809], "layer_norm": [78, 79, 126, 127, 1656], "normalized_idx": [78, 79, 126, 127, 1656, 1657, 1660], "new_std": [78, 79, 126, 127, 1656, 1657, 1660], "learnabl": [78, 79, 126, 127, 169, 1656, 1657, 1660], "gamma": [78, 79, 80, 81, 126, 127, 1656, 1657, 1660], "0976": [78, 79, 1656, 1657, 1660], "3452": [78, 79, 1656, 1657, 1660], "2740": [78, 79, 1656, 1657, 1660], "1047": [78, 79, 1656, 1657, 1660], "5886": [78, 79, 1656, 1657, 1660], "2732": [78, 79, 1656, 1657, 1660], "7696": [78, 79, 1656, 1657, 1660], "7024": [78, 79, 1656, 1657, 1660], "2518": [78, 79, 1656, 1657, 1660], "826": [78, 79, 1656, 1657, 1660], "178": [78, 79, 1656, 1657, 1660], "981": [78, 79, 1656, 1657, 1660], "831": [78, 79, 1656, 1657, 1660], "421": [78, 79, 1656, 1657, 1660], "parameter": [80, 81, 128, 129, 1661, 1672, 1675, 1677, 1680], "multinomi": [80, 81, 128, 129, 1661], "population_s": [80, 81, 128, 129, 1661, 1662, 1665], "num_sampl": [80, 81, 128, 129, 1661, 1662, 1665], "unnorm": [80, 81, 128, 129, 160, 1661, 1662, 1665], "popul": [80, 81, 88, 89, 97, 98, 128, 129, 136, 137, 148, 149, 160, 164, 1661, 1662, 1665, 1751, 1783, 1786, 1792, 1796, 1825], "uniform": [80, 81, 128, 129, 168, 1661, 1662, 1665, 1667, 1670, 1677, 1680, 1826], "batch_shap": [80, 81, 103, 104, 128, 129, 162, 164, 166, 237, 258, 259, 290, 293, 1321, 1377, 1380, 1382, 1385, 1387, 1390, 1392, 1530, 1534, 1661, 1662, 1665], "independ": [80, 81, 128, 129, 143, 148, 150, 156, 164, 169, 1392, 1398, 1401, 1487, 1490, 1661, 1662, 1665, 1817], "highest": [80, 81, 128, 129, 1661, 1667, 1670], "low": [80, 81, 128, 129, 146, 158, 162, 164, 1661, 1667, 1670, 1677, 1680, 1815, 1817, 1819, 1820, 1821, 1823, 1825], "half": [80, 81, 128, 129, 162, 237, 239, 240, 1661, 1667, 1670, 1677, 1680], "int16": [80, 81, 105, 106, 128, 129, 148, 158, 160, 164, 321, 343, 346, 354, 366, 367, 389, 392, 413, 1751, 1752, 1755, 1757, 1760, 1778, 1781, 1787, 1791], "int64": [80, 81, 82, 83, 86, 87, 105, 106, 128, 129, 130, 131, 134, 135, 136, 137, 148, 158, 160, 164, 321, 343, 346, 354, 360, 366, 367, 372, 375, 394, 397, 408, 1688, 1689, 1692, 1694, 1697, 1699, 1702, 1735, 1741, 1744, 1751, 1752, 1755, 1757, 1760, 1778, 1781, 1787, 1791], "235": [80, 81], "float16": [80, 81, 128, 129, 148, 160, 321, 349, 351, 352, 361, 364, 369, 370], "49": [80, 81, 120, 121, 196, 224, 227, 450, 736, 739, 1751, 1762, 1765], "807": [80, 81], "42": [80, 81, 95, 96, 114, 115, 126, 127, 128, 129, 164, 169, 196, 229, 232, 450, 516, 519, 1283, 1285, 1288, 1295, 1298, 1392, 1447, 1450, 1467, 1470, 1656, 1657, 1660, 1661, 1682, 1751, 1752, 1755, 1762, 1765], "random_uniform": [80, 81, 128, 129, 149, 160, 168, 1661, 1809], "86": [80, 81, 128, 129, 1283, 1285, 1288], "06": [80, 81, 109, 110, 114, 115, 160, 167, 196, 198, 201, 237, 277, 278, 321, 361, 364, 1283, 1300, 1303], "53": [80, 81, 109, 110, 416, 446, 1283, 1294, 1299, 1319, 1656, 1657, 1660], "argmax": [82, 83, 130, 131, 158, 1688, 1809], "output_dtyp": [82, 83, 130, 131, 1688, 1689, 1692, 1694, 1697], "insert": [82, 83, 130, 131, 1552, 1568, 1571, 1637, 1643, 1688, 1689, 1692, 1735, 1741, 1744], "occurr": [82, 83, 1688, 1689, 1692, 1694, 1697, 1714, 1715, 1719], "argmin": [82, 83, 130, 131, 1688, 1809], "singleton": [82, 83, 88, 89, 90, 91, 120, 121, 130, 131, 136, 137, 138, 139, 164, 1392, 1525, 1529, 1552, 1568, 1571, 1603, 1606, 1688, 1694, 1697, 1751, 1766, 1769, 1770, 1773, 1774, 1777, 1778, 1781, 1783, 1786, 1787, 1791, 1792, 1796, 1797, 1798, 1801, 1803, 1806], "accordingli": [82, 83, 88, 89, 90, 91, 120, 121, 130, 131, 136, 137, 138, 139, 153, 158, 164, 237, 280, 283, 450, 566, 569, 631, 634, 1392, 1525, 1529, 1688, 1694, 1697, 1714, 1715, 1719, 1720, 1724, 1725, 1729, 1730, 1734, 1751, 1766, 1769, 1770, 1773, 1774, 1777, 1778, 1781, 1783, 1786, 1787, 1791, 1792, 1796, 1797, 1798, 1801, 1803, 1806], "argwher": [82, 83, 130, 131, 153, 1688], "nonzero": [82, 83, 130, 131, 450, 466, 469, 676, 679, 1688], "as_tupl": [82, 83, 130, 131, 1688, 1704, 1707], "fewer": [82, 83, 130, 131, 1688, 1704, 1707], "yield": [82, 83, 147, 153, 1688, 1709, 1713], "unique_al": [84, 85, 132, 133, 1714], "unique_count": [84, 85, 132, 133, 1714], "field": [84, 85, 132, 133, 180, 1392, 1418, 1421, 1422, 1425, 1477, 1480, 1482, 1485, 1492, 1496, 1714, 1715, 1719, 1720, 1724, 1725, 1729, 1817, 1825], "unique_invers": [84, 85, 132, 133, 1714], "inverse_indic": [84, 85, 132, 133, 1714, 1715, 1719, 1725, 1729], "reconstruct": [84, 85, 132, 133, 1392, 1492, 1496, 1714, 1715, 1719, 1725, 1729], "unique_valu": [84, 85, 132, 133, 1714], "argsort": [86, 87, 134, 135, 1735, 1741, 1744], "descend": [86, 87, 134, 135, 1392, 1492, 1496, 1497, 1501, 1735, 1736, 1739, 1746, 1749], "ascend": [86, 87, 134, 135, 1735, 1736, 1739, 1741, 1744], "stabil": [86, 87, 134, 135, 148, 162, 1090, 1239, 1242, 1244, 1247, 1735, 1736, 1739, 1746, 1749], "searchsort": [86, 87, 134, 135, 1735], "sorter": [86, 87, 134, 135, 1735, 1741, 1744], "ret_dtyp": [86, 87, 134, 135, 1735, 1741, 1744], "cumprod": [88, 89, 136, 137, 158, 169, 1751], "cumul": [88, 89, 136, 137, 180, 1751, 1752, 1755, 1757, 1760], "120": [88, 89, 94, 99, 100, 136, 137, 1392, 1467, 1470], "cumsum": [88, 89, 136, 137, 148, 1751, 1809], "einsum": [88, 89, 136, 137, 1751], "equat": [88, 89, 111, 136, 137, 1392, 1487, 1490, 1751, 1762, 1765, 1819], "contract": [88, 89, 1392, 1502, 1505, 1751, 1762, 1765], "operand": [88, 89, 146, 151, 158, 450, 456, 459, 461, 464, 466, 469, 471, 474, 476, 479, 481, 484, 486, 489, 521, 524, 526, 529, 531, 534, 536, 539, 561, 564, 566, 569, 571, 574, 621, 624, 626, 629, 631, 634, 636, 639, 641, 644, 676, 679, 696, 699, 711, 714, 716, 719, 726, 729, 731, 734, 736, 739, 751, 755, 756, 760, 761, 765, 1751, 1762, 1765, 1766, 1769, 1774, 1777, 1787, 1791], "seq": [88, 89, 1751, 1762, 1765], "ij": [88, 89, 237, 280, 283, 1751, 1762, 1765], "jk": [88, 89, 1751, 1762, 1765], "ik": [88, 89, 1751, 1762, 1765], "66": [88, 89, 112, 113, 114, 115, 450, 521, 524, 1090, 1127, 1130, 1283, 1295, 1298, 1392, 1467, 1470, 1751, 1762, 1765], "104": [88, 89, 1392, 1467, 1470, 1751, 1762, 1765], "126": [88, 89, 196, 198, 201, 450, 701, 704, 1751, 1762, 1765], "510": [88, 89, 1751, 1762, 1765], "arithmet": [88, 89, 136, 137, 158, 450, 516, 519, 1751, 1770, 1773], "x_i": [88, 89, 109, 110, 151, 450, 451, 454, 456, 459, 461, 464, 471, 474, 476, 479, 481, 484, 501, 504, 526, 529, 531, 534, 536, 539, 561, 564, 566, 569, 571, 574, 591, 594, 596, 599, 601, 604, 606, 609, 621, 624, 626, 629, 631, 634, 636, 639, 651, 654, 716, 719, 721, 724, 726, 729, 731, 734, 736, 739, 741, 744, 751, 755, 756, 760, 761, 765, 1714, 1715, 1719, 1720, 1724, 1725, 1729, 1730, 1734, 1751, 1766, 1769, 1770, 1773, 1774, 1777, 1783, 1786, 1787, 1791, 1792, 1796], "propag": [88, 89, 450, 516, 519, 1751, 1766, 1769, 1770, 1773, 1774, 1777, 1783, 1786, 1787, 1791, 1792, 1796], "04999995": [88, 89], "0999999": [88, 89], "freedom": [88, 89, 136, 137, 145, 1751, 1783, 1786, 1792, 1796], "constitut": [88, 89, 136, 137, 155, 164, 1751, 1783, 1786, 1792, 1796, 1820], "commonli": [88, 89, 136, 137, 152, 155, 1751, 1783, 1786, 1792, 1796], "8164966": [88, 89, 1751, 1783, 1786], "varianc": [88, 89, 136, 137, 1751, 1792, 1796], "unbias": [88, 89, 136, 137, 1751, 1792, 1796], "6666665": [88, 89, 167], "667": [88, 89, 112, 113, 450, 546, 549, 1090, 1239, 1242, 1714, 1715, 1719], "AND": [90, 91, 138, 139, 450, 496, 499, 646, 649, 1797, 1798, 1801], "backward": [90, 91, 138, 139, 181, 450, 711, 714, 1392, 1520, 1524, 1797, 1798, 1801, 1803, 1806], "add_ivy_array_instance_method": 92, "cl": [92, 93, 140, 141], "to_ignor": [92, 93, 140, 141, 1637, 1649], "loop": [92, 93, 140, 141, 145, 153, 181, 1633, 1634, 1635, 1636], "_wrap_funct": [92, 93, 140, 141, 155, 156], "toi": [92, 93, 140, 141], "arrayexampl": [92, 93], "hasattr": [92, 93, 140, 141], "dict_in": [94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139], "queue": [94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 167, 1090, 1169, 1233, 1274], "queue_load_s": [94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139], "container_combine_method": [94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139], "list_join": [94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139], "queue_timeout": [94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139], "print_limit": [94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139], "key_length_limit": [94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139], "print_ind": [94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139], "print_line_spac": [94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139], "ivyh": [94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139], "default_key_color": [94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139], "keyword_color_dict": [94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139], "rebuild_child_contain": [94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139], "types_to_iteratively_nest": [94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139], "alphabetical_kei": [94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139], "containerwithactiv": [94, 95, 99, 100], "containerwithconvers": [94, 99, 100, 101], "containerwithcr": [94, 99, 100, 103], "containerwithdatatyp": [94, 99, 100, 105], "containerwithdevic": [94, 99, 100, 107], "containerwithelementwis": [94, 99, 100, 109, 146], "containerwithgener": [94, 99, 100, 112], "containerwithgradi": [94, 99, 100, 114], "containerwithimag": [94, 99, 100, 116], "containerwithlay": [94, 99, 100, 118], "containerwithlinearalgebra": [94, 99, 100, 120], "containerwithloss": [94, 99, 100, 122], "containerwithnorm": [94, 99, 100, 126], "containerwithrandom": [94, 99, 100, 128], "containerwithsearch": [94, 99, 100, 130], "containerwithset": [94, 99, 100, 132], "containerwithsort": [94, 99, 100, 134], "containerwithstatist": [94, 99, 100, 136], "containerwithutil": [94, 99, 100, 138], "containerwithactivationexperiment": [94, 99, 100, 111], "containerwithconversionexperiment": [94, 99, 100, 111], "containerwithcreationexperiment": [94, 99, 100, 111], "containerwithdata_typeexperiment": [94, 99, 100, 111], "containerwithdeviceexperiment": [94, 99, 100, 111], "containerwithelementwiseexperiment": [94, 99, 100, 111], "containerwithgeneralexperiment": [94, 99, 100, 111], "containerwithgradientsexperiment": [94, 99, 100, 111], "containerwithimageexperiment": [94, 99, 100, 111], "containerwithlayersexperiment": [94, 99, 100, 111], "containerwithlinearalgebraexperiment": [94, 99, 100, 111], "containerwithlossesexperiment": [94, 99, 100, 111], "containerwithmanipulationexperiment": [94, 99, 100, 111], "containerwithnormsexperiment": [94, 99, 100, 111], "containerwithrandomexperiment": [94, 99, 100, 111], "containerwithsearchingexperiment": [94, 99, 100, 111], "containerwithsetexperiment": [94, 99, 100, 111], "containerwithsortingexperiment": [94, 99, 100, 111], "containerwithstatisticalexperiment": [94, 99, 100, 111], "containerwithutilityexperiment": [94, 99, 100, 111], "eq": [94, 99, 100], "ge": [94, 99, 100], "gt": [94, 99, 100, 159, 164], "dictionari": [94, 97, 98, 99, 100, 148, 158, 167, 181, 196, 197, 203, 416, 439, 1283, 1293], "multiprocess": [94, 97, 98, 99, 100, 167, 181, 1090], "asynchron": [94, 97, 98, 99, 100, 1819], "arriv": [94, 97, 98, 99, 100, 162, 1090, 1233], "timeout": [94, 97, 98, 99, 100, 1090, 1169, 1233, 1274], "whitespac": [94, 97, 98, 99, 100], "indent": [94, 97, 98, 99, 100, 167], "extra": [94, 97, 98, 99, 100, 144, 148, 150, 156, 158, 159, 162, 164, 1090, 1282, 1816, 1821], "newlin": [94, 97, 98, 99, 100, 151], "color": [94, 97, 98, 99, 100, 1870, 1871], "map": [94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 118, 119, 120, 121, 122, 123, 124, 125, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 146, 148, 154, 155, 158, 160, 161, 167, 180, 181, 1090, 1282, 1321, 1365, 1368, 1637, 1645, 1646, 1650, 1651, 1808, 1820], "termcolor": [94, 97, 98, 99, 100], "constructor": [94, 97, 98, 99, 100, 148, 149, 166, 1090, 1097], "alphabet": [94, 97, 98, 99, 100], "le": [94, 99, 100], "lt": [94, 99, 100], "ne": [94, 99, 100], "75979435": [94, 99, 100], "52153397": [94, 99, 100], "13532257": [94, 99, 100], "rshift": [94, 99, 100], "143": [94, 99, 100, 109, 110, 150, 450, 751, 755], "truediv": [94, 99, 100], "66666669": [94, 99, 100], "60000002": [94, 99, 100, 136, 137], "containerbas": [95, 96, 97, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 146], "key_chain": [95, 96, 97, 98, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 118, 119, 120, 121, 122, 123, 124, 125, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 1637, 1651], "to_appli": [95, 96, 97, 98, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 118, 119, 120, 121, 122, 123, 124, 125, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 1637, 1651], "prune_unappli": [95, 96, 97, 98, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 118, 119, 120, 121, 122, 123, 124, 125, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 1637, 1651], "map_sequ": [95, 96, 97, 98, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 118, 119, 120, 121, 122, 123, 124, 125, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139], "formul": [95, 96], "chain": [95, 96, 97, 98, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 118, 119, 120, 121, 122, 123, 124, 125, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 144, 146, 158, 168, 169, 181, 1633, 1634, 1635, 1637, 1640, 1651, 1819], "prune": [95, 96, 97, 98, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 118, 119, 120, 121, 122, 123, 124, 125, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 1637, 1651, 1652, 1653], "slope": [95, 96, 196, 204, 207], "leaki": [95, 96, 196, 204, 207], "371": [95, 96], "rectifi": [95, 96, 196, 204, 207, 214, 217], "revert": [95, 96, 196, 229, 232], "535": [95, 96, 196, 229, 232], "948": [95, 96], "static_gelu": [95, 96], "static_leaky_relu": [95, 96], "static_log_softmax": [95, 96], "static_relu": [95, 96], "static_sigmoid": [95, 96], "static_softmax": [95, 96], "static_softplu": [95, 96], "__getitem__": [97, 98, 146], "queri": [97, 98, 146, 148, 166, 416, 427, 439, 1090, 1160, 1321, 1382, 1385, 1387, 1390, 1819], "slice": [97, 98, 112, 113, 1090, 1147, 1150, 1152, 1155, 1160, 1637, 1647, 1819], "__setitem__": [97, 98, 144, 146, 166], "all_fals": [97, 98], "assert_is_bool": [97, 98], "all_key_chain": [97, 98], "include_empti": [97, 98], "all_tru": [97, 98, 146, 167], "as_bool": [97, 98], "assert_contains_sub_contain": [97, 98], "sub_cont": [97, 98], "assert_contains_sub_structur": [97, 98], "assert_ident": [97, 98], "check_typ": [97, 98], "same_arrai": [97, 98, 167], "arrays_equ": [97, 98], "assert_identical_structur": [97, 98], "at_key_chain": [97, 98], "ignore_key_error": [97, 98], "ignore_non": [97, 98], "at_kei": [97, 98], "ignor": [97, 98, 147, 150, 160, 181, 237, 280, 283, 1321, 1365, 1368, 1637, 1649, 1825], "substr": [97, 98], "duplic": [97, 98, 145, 151, 153, 156, 159, 168, 1637, 1640, 1825], "container_rightmost": [97, 98], "common_key_chain": [97, 98, 146], "cont_inplace_upd": [97, 98], "contains_sub_contain": [97, 98], "contains_sub_structur": [97, 98], "create_if_abs": [97, 98], "noth": [97, 98, 162, 1825], "cutoff_at_depth": [97, 98], "depth_cutoff": [97, 98], "cutoff_at_height": [97, 98], "height_cutoff": [97, 98], "deep_copi": [97, 98, 167], "intern": [97, 98, 144, 146, 149, 151, 157, 1637, 1638, 1648, 1649], "dev_str": [97, 98, 237, 277, 278], "diff_kei": [97, 98], "detect_key_diff": [97, 98], "detect_value_diff": [97, 98], "detect_shape_diff": [97, 98], "treat": [97, 98, 160, 165, 169, 234, 235], "container0": [97, 98], "duplicate_array_keychain": [97, 98], "find_sub_contain": [97, 98], "sub_cont_to_find": [97, 98], "exsit": [97, 98], "find_sub_structur": [97, 98], "sub_struc_to_find": [97, 98], "flatten_key_chain": [97, 98, 167], "__": [97, 98, 150, 167], "above_height": [97, 98, 167], "below_depth": [97, 98, 167], "format_key_chain": [97, 98], "format_fn": [97, 98], "string": [97, 98, 145, 148, 149, 152, 153, 164, 167, 196, 197, 203, 321, 326, 327, 356, 358, 378, 415, 416, 417, 419, 420, 421, 422, 427, 435, 441, 445, 446, 449, 1090, 1118, 1392, 1427, 1430], "from_disk_as_hdf5": [97, 98, 167], "h5_obj_or_filepath": [97, 98], "slice_obj": [97, 98], "load": [97, 98, 181, 1818, 1825], "disk": [97, 98, 167, 1818], "h5py": [97, 98], "hdf5": [97, 98, 167], "h5": [97, 98], "from_disk_as_json": [97, 98, 167], "json_filepath": [97, 98], "from_disk_as_pickl": [97, 98, 167], "pickle_filepath": [97, 98], "pickl": [97, 98, 146, 167], "from_flat_list": [97, 98], "flat_list": [97, 98], "flat": [97, 98, 1090, 1218, 1221, 1552, 1583, 1586], "h5_file_s": [97, 98], "handle_inplac": [97, 98], "prime": [97, 98], "overwritten": [97, 98, 144, 145], "has_kei": [97, 98], "query_kei": [97, 98], "somewher": [97, 98], "has_key_chain": [97, 98], "identical_array_shap": [97, 98], "identical_config": [97, 98], "identical_structur": [97, 98], "if_exist": [97, 98], "key_chains_contain": [97, 98], "sub_str": [97, 98], "list_stack": [97, 98, 167], "map_cont": [97, 98], "include_self": [97, 98], "possibi": [97, 98], "max_depth": [97, 98, 1090, 1170, 1637, 1650], "multi_map": [97, 98, 146], "map_nest": [97, 98], "leftmost": [97, 98, 1637, 1651], "multi_map_in_static_method": [97, 98, 146], "fn_name": [97, 98, 145, 160], "num_arrai": [97, 98, 159, 160], "overwrite_at_key_chain": [97, 98], "target_dict": [97, 98], "return_dict": [97, 98], "prune_empti": [97, 98], "keep_non": [97, 98], "prune_key_chain": [97, 98], "key1": [97, 98, 168], "key2": [97, 98], "key3": [97, 98], "prune_key_from_key_chain": [97, 98], "prune_kei": [97, 98], "prune_keys_from_key_chain": [97, 98], "remove_key_length_limit": [97, 98], "remove_print_limit": [97, 98], "reshape_lik": [97, 98], "leading_shap": [97, 98], "return_cont": [97, 98], "restructur": [97, 98], "keep_orig": [97, 98], "restructure_key_chain": [97, 98], "keychain_map": [97, 98], "set_at_key_chain": [97, 98], "set_at_kei": [97, 98], "attribut": [97, 98, 146, 148, 151, 156, 157, 165, 166, 167, 168, 321, 361, 364, 366, 367, 369, 370, 372, 375, 416, 428, 429, 436, 1090, 1145, 1146], "shared_shap": [97, 98], "show_sub_contain": [97, 98], "sub_cont_or_keychain": [97, 98], "shuffle_h5_fil": [97, 98], "seed_valu": [97, 98, 1661, 1682], "dataset": [97, 98, 167, 179, 1809], "size_ordered_arrai": [97, 98], "keychain": [97, 98, 111], "slice_kei": [97, 98], "key_slic": [97, 98], "all_depth": [97, 98], "slice_via_kei": [97, 98], "sort_by_kei": [97, 98], "split_cont": [97, 98], "constitu": [97, 98, 169], "structural_diff": [97, 98], "to_dict": [97, 98], "to_disk_as_hdf5": [97, 98, 167], "starting_index": [97, 98], "max_batch_s": [97, 98], "to_disk_as_json": [97, 98, 167], "to_disk_as_pickl": [97, 98, 167], "to_flat_list": [97, 98], "to_iter": [97, 98, 146], "leaf_keys_onli": [97, 98], "to_iterator_kei": [97, 98], "to_iterator_valu": [97, 98], "to_json": [97, 98], "to_nested_list": [97, 98], "to_raw": [97, 98], "raw": [97, 98, 151, 1820], "trim_kei": [97, 98], "max_length": [97, 98], "trim": [97, 98], "try_kc": [97, 98], "tri": [97, 98], "concatten": [97, 98, 416, 440], "unstack_cont": [97, 98], "dim_siz": [97, 98, 1321, 1354], "update_config": [97, 98], "with_default_key_color": [97, 98], "with_entries_as_list": [97, 98], "with_ivy_backend": [97, 98], "ivy_backend": [97, 98], "with_key_length_limit": [97, 98, 167], "with_print_ind": [97, 98, 167], "with_print_limit": [97, 98, 167], "with_print_line_spac": [97, 98], "static_to_ivi": [101, 102], "static_to_n": [101, 102], "2324": [103, 104, 237, 267, 270], "234": [103, 104, 109, 110, 237, 267, 270, 450, 761, 765, 1321, 1372, 1375], "123": [103, 104, 160, 237, 267, 270, 1090, 1137, 1139], "static_arang": [103, 104], "static_asarrai": [103, 104], "static_empty_lik": [103, 104], "static_ey": [103, 104], "n_row": [103, 104, 111, 237, 258, 259], "n_col": [103, 104, 111, 237, 258, 259], "static_from_dlpack": [103, 104], "static_full_lik": [103, 104], "static_linspac": [103, 104], "static_logspac": [103, 104], "static_meshgrid": [103, 104], "static_native_arrai": [103, 104], "static_one_hot": [103, 104], "static_on": [103, 104], "static_ones_lik": [103, 104], "static_tril": [103, 104], "static_triu": [103, 104], "static_zero": [103, 104], "static_zeros_lik": [103, 104], "718": [105, 106, 109, 110, 321, 328, 331], "618": [105, 106, 109, 110, 321, 328, 331], "broadcats": [105, 106], "1800": [105, 106, 321, 372, 375], "32768": [105, 106], "32767": [105, 106], "2147483648": [105, 106, 321, 372, 375], "2147483647": [105, 106, 321, 372, 375], "static_astyp": [105, 106], "static_broadcast_arrai": [105, 106], "And": [105, 106, 160], "static_broadcast_to": [105, 106], "static_can_cast": [105, 106], "from_": [105, 106, 321, 343, 346], "static_default_float_dtyp": [105, 106], "float_dtyp": [105, 106, 321, 323, 324, 351, 352, 407], "static_dtyp": [105, 106], "static_finfo": [105, 106], "static_function_supported_dtyp": [105, 106], "static_function_unsupported_dtyp": [105, 106], "static_iinfo": [105, 106], "static_is_bool_dtyp": [105, 106], "dtype_in": [105, 106, 321, 326, 327, 360, 378, 379, 382, 384, 387, 389, 392, 394, 397, 415], "static_is_float_dtyp": [105, 106], "static_is_int_dtyp": [105, 106], "static_is_uint_dtyp": [105, 106], "static_result_typ": [105, 106], "static_dev": [107, 108], "static_to_devic": [107, 108], "__dlpack__": [107, 108, 237, 261, 264, 416, 441, 445], "caveat": [107, 108, 416, 441, 445], "portabl": [107, 108, 416, 441, 445, 1809, 1817], "524": [109, 110, 450, 471, 474], "644": [109, 110, 168, 450, 471, 474], "305": [109, 110, 118, 119, 450, 471, 474, 1535, 1541], "915": [109, 110, 450, 486, 489], "29": [109, 110, 112, 113, 114, 115, 128, 129, 450, 486, 489, 1090, 1127, 1130, 1283, 1300, 1303], "983": [109, 110, 450, 486, 489], "978": [109, 110, 196, 219, 222, 450, 486, 489], "696": [109, 110, 128, 129, 450, 486, 489], "993": [109, 110, 450, 486, 489], "203": [109, 110, 126, 127, 1656, 1657, 1660], "34": [109, 110, 111, 112, 113, 128, 129, 237, 277, 278, 321, 372, 375, 450, 521, 524, 641, 644, 1090, 1106, 1127, 1130, 1661, 1677, 1680], "351": [109, 110, 450, 541, 544], "00613": [109, 110], "0154": [109, 110], "0262": [109, 110, 450, 541, 544, 701, 704], "873": [109, 110, 450, 541, 544, 701, 704], "333": [109, 110, 450, 546, 549, 1090, 1112, 1115, 1321, 1355, 1358], "thefunct": [109, 110], "27632612": [109, 110], "934008": [109, 110], "99999928": [109, 110], "91903949": [109, 110], "649": [109, 110], "220": [109, 110], "959": [109, 110, 450, 726, 729], "865": [109, 110], "metho": [109, 110], "999999999999": [109, 110, 450, 591, 594], "7j": [109, 110, 450, 606, 609], "3j": [109, 110, 450, 606, 609], "0j": [109, 110, 450, 606, 609], "898": [109, 110, 450, 626, 629], "0414": [109, 110, 450, 626, 629], "956": [109, 110], "65": [109, 110, 114, 115, 128, 129, 450, 516, 519, 1090, 1179, 1182, 1283, 1285, 1288, 1392, 1467, 1470, 1751, 1762, 1765], "2860": [109, 110], "413": [109, 110], "recirpoc": [109, 110], "300": [109, 110, 112, 113, 160, 450, 716, 719, 1090, 1152, 1155, 1223, 1226, 1392, 1437, 1440], "527": [109, 110, 450, 716, 719], "301": [109, 110, 450, 716, 719], "757": [109, 110, 450, 726, 729], "279": [109, 110, 450, 726, 729, 1090, 1107, 1110], "835": [109, 110], "347": [109, 110], "721": [109, 110], "93": [109, 110, 112, 113, 128, 129, 416, 427, 1090, 1127, 1130], "static_ab": [109, 110], "static_aco": [109, 110], "static_acosh": [109, 110], "static_add": [109, 110, 146, 150, 151], "static_asin": [109, 110], "412": [109, 110, 118, 119, 450, 471, 474], "201": [109, 110, 111, 450, 471, 474, 1535, 1541], "static_asinh": [109, 110], "static_atan": [109, 110], "static_atan2": [109, 110], "static_atanh": [109, 110], "static_bitwise_and": [109, 110], "static_bitwise_invert": [109, 110], "static_bitwise_left_shift": [109, 110], "static_bitwise_or": [109, 110], "static_bitwise_right_shift": [109, 110], "static_bitwise_xor": [109, 110], "static_ceil": [109, 110], "static_co": [109, 110], "static_cosh": [109, 110], "static_deg2rad": [109, 110], "static_divid": [109, 110], "static_equ": [109, 110], "static_erf": [109, 110], "static_exp": [109, 110], "static_expm1": [109, 110], "areal": [109, 110], "71828175": [109, 110], "38905621": [109, 110], "08553696": [109, 110], "59815216": [109, 110], "static_floor": [109, 110], "static_floor_divid": [109, 110], "static_great": [109, 110], "static_greater_equ": [109, 110], "static_isfinit": [109, 110], "static_isinf": [109, 110], "static_isnan": [109, 110], "static_isr": [109, 110], "23j": [109, 110], "9j": [109, 110], "static_less": [109, 110], "static_less_equ": [109, 110], "static_log": [109, 110], "static_log10": [109, 110], "static_log1p": [109, 110], "static_log2": [109, 110], "static_logaddexp": [109, 110], "static_logical_and": [109, 110], "static_logical_not": [109, 110], "static_logical_or": [109, 110], "static_logical_xor": [109, 110], "static_maximum": [109, 110], "static_minimum": [109, 110], "static_multipli": [109, 110], "static_neg": [109, 110], "static_not_equ": [109, 110], "static_posit": [109, 110], "static_pow": [109, 110], "static_rad2deg": [109, 110], "5160": [109, 110], "10300": [109, 110, 450, 701, 704], "15500": [109, 110], "20600": [109, 110], "static_reciproc": [109, 110], "static_remaind": [109, 110], "static_round": [109, 110], "thevfunct": [109, 110], "static_sign": [109, 110], "static_sin": [109, 110], "static_sinh": [109, 110], "static_sqrt": [109, 110], "static_squar": [109, 110], "static_subtract": [109, 110], "static_tan": [109, 110, 146, 150], "static_tanh": [109, 110], "995": [109, 110, 450, 756, 760], "9999": [109, 110], "static_trapz": [109, 110], "static_trunc": [109, 110], "static_trunc_divid": [109, 110], "hamming_window": 111, "coeffici": [111, 1392, 1487, 1490], "ham": 111, "8000": 111, "2000": 111, "4180": 111, "8180": 111, "hann_window": 111, "hann": 111, "7500": 111, "3455": 111, "9045": 111, "kaiser_bessel_derived_window": 111, "spectral": 111, "analysi": [111, 1819, 1820], "kaiser": 111, "70710677": 111, "18493208": 111, "9827513": 111, "kaiser_window": 111, "static_kaiser_window": 111, "2049": 111, "8712": 111, "0367": 111, "7753": 111, "static_hamming_window": 111, "static_hann_window": 111, "window_length": 111, "static_hann": 111, "static_kaiser_bessel_derived_window": 111, "static_triu_indic": 111, "static_vorbis_window": 111, "vorbis_window": 111, "vorbi": 111, "38268343": 111, "92387953": 111, "14943586": 111, "51644717": 111, "85631905": 111, "98877142": 111, "triu_indic": 111, "0003": [111, 1392, 1437, 1440], "0006": 111, "coord": 111, "1080": 111, "1550": 111, "130": 111, "08746284": 111, "32192809": 111, "0707": 111, "0579": 111, "static_allclos": 111, "static_count_nonzero": 111, "static_exp2": 111, "static_fix": 111, "static_float_pow": 111, "static_fmax": 111, "static_fmod": 111, "static_gcd": 111, "static_gradi": 111, "static_isclos": 111, "static_isneginf": 111, "static_isposinf": 111, "static_lcm": 111, "static_logaddexp2": 111, "static_nan_to_num": 111, "static_nansum": 111, "static_nextaft": 111, "static_signbit": 111, "static_sinc": 111, "636": 111, "090": 111, "070": 111, "057": 111, "static_zeta": 111, "0244": 111, "static_isin": 111, "673": 111, "0507": 111, "static_avg_pool1d": 111, "static_avg_pool2d": 111, "static_avg_pool3d": 111, "static_dct": 111, "132": 111, "182": 111, "242": 111, "253": [111, 450, 731, 734], "515": [111, 1661, 1672, 1675], "467": 111, "static_max_pool1d": 111, "static_max_pool2d": 111, "max_pool2dd": 111, "static_max_pool3d": 111, "450": 111, "static_diagflat": 111, "static_kron": 111, "kroneck": 111, "atleast": 111, "1d": [111, 1321, 1365, 1368], "ary1": 111, "ary2": 111, "2d": [111, 158, 1321, 1365, 1368], "3d": [111, 180, 1321, 1365, 1368], "30192195": 111, "static_atleast_1d": 111, "static_atleast_2d": 111, "static_atleast_3d": 111, "static_dsplit": 111, "static_dstack": 111, "static_flatten": 111, "static_fliplr": 111, "static_flipud": 111, "static_heavisid": 111, "static_hsplit": 111, "static_vsplit": 111, "static_hstack": 111, "static_i0": 111, "static_moveaxi": 111, "static_pad": 111, "static_rot90": 111, "static_take_along_axi": 111, "static_top_k": 111, "static_vstack": 111, "43643127": 111, "32325703": 111, "24031169": 111, "34251311": 111, "31692529": 111, "3405616": 111, "5319725": 111, "22458365": 111, "24344385": 111, "26588406": 111, "61075421": 111, "12336174": 111, "51142915": 111, "25041268": 111, "23815817": 111, "64042903": 111, "25763214": 111, "10193883": 111, "31624692": 111, "46567987": 111, "21807321": 111, "37677699": 111, "39914594": 111, "22407707": 111, "static_dirichlet": 111, "static_msort": 111, "static_median": 111, "static_nanmean": 111, "static_quantil": 111, "static_unravel_index": 111, "static_all_equ": [112, 113], "833": [112, 113], "200": [112, 113, 167, 450, 516, 519, 1090, 1152, 1155, 1223, 1226], "400": [112, 113, 1090, 1152, 1155, 1223, 1226, 1392, 1437, 1440], "500": [112, 113, 1090, 1152, 1155], "600": [112, 113], "700": [112, 113], "static_assert_supports_inplac": [112, 113], "static_clip_matrix_norm": [112, 113], "849": [112, 113, 1090, 1107, 1110, 1112, 1115], "static_clip_vector_norm": [112, 113], "static_einops_rearrang": [112, 113], "static_einops_reduc": [112, 113], "static_einops_repeat": [112, 113], "static_fourier_encod": [112, 113], "static_gath": [112, 113], "static_gather_nd": [112, 113], "static_get_num_dim": [112, 113], "static_has_nan": [112, 113], "leafwis": [112, 113], "static_inplace_decr": [112, 113], "static_inplace_incr": [112, 113], "static_inplace_upd": [112, 113], "static_is_arrai": [112, 113], "static_is_ivy_arrai": [112, 113], "static_is_native_arrai": [112, 113], "static_scatter_flat": [112, 113], "ref": [112, 113, 120, 121, 151, 450, 611, 614, 686, 689, 711, 714, 746, 750, 1552, 1608, 1611], "static_scatter_nd": [112, 113], "static_stable_divid": [112, 113], "22222222": [112, 113], "11111111": [112, 113], "857": [112, 113, 1090, 1239, 1242, 1714, 1715, 1719], "444": [112, 113], "static_stable_pow": [112, 113], "static_supports_inplace_upd": [112, 113], "static_to_list": [112, 113], "static_to_numpi": [112, 113], "static_to_scalar": [112, 113], "static_value_is_nan": [112, 113], "452": [112, 113], "425": [112, 113], "87": [114, 115, 450, 516, 519, 631, 634, 1283, 1285, 1288], "976": [114, 115, 450, 756, 760, 1283, 1285, 1288], "49e": [114, 115, 1283, 1285, 1288], "74e": [114, 115, 1283, 1285, 1288], "95e": [114, 115, 1283, 1285, 1288], "024": [114, 115, 1283, 1285, 1288, 1535, 1541], "096": [114, 115, 450, 541, 544, 1283, 1285, 1288], "216": [114, 115, 120, 121, 1283, 1285, 1288], "384": [114, 115, 1283, 1285, 1288], "626": [114, 115, 1283, 1285, 1288], "en": [114, 115, 1283, 1285, 1288, 1289, 1292, 1392, 1530, 1534], "wikipedia": [114, 115, 1283, 1285, 1288, 1289, 1292, 1392, 1530, 1534], "wiki": [114, 115, 1283, 1285, 1288, 1289, 1292, 1392, 1530, 1534], "stochastic_gradient_desc": [114, 115, 1283, 1285, 1288, 1289, 1292], "w_new": [114, 115, 1283, 1295, 1298], "88": [114, 115, 128, 129, 196, 204, 207, 450, 521, 524, 1283, 1295, 1298, 1392, 1467, 1470, 1497, 1501, 1661, 1677, 1680, 1751, 1762, 1765], "708": [114, 115, 1283, 1300, 1303], "445": [114, 115, 1283, 1300, 1303], "6e": [114, 115, 1283, 1300, 1303], "00036": [114, 115, 1283, 1300, 1303], "00016": [114, 115, 1283, 1300, 1303], "00049": [114, 115, 1283, 1300, 1303], "layerwis": [114, 115, 1283, 1304, 1307], "static_stop_gradi": [114, 115], "ey": [118, 119, 162, 169, 237, 1321, 1333, 1336, 1355, 1358], "conv2d_transpos": [118, 119, 1321], "fdfh": [118, 119], "inp": [118, 119, 1321, 1355, 1358], "278": [118, 119, 1321, 1372, 1375], "105": [118, 119, 1321, 1372, 1375, 1392, 1467, 1470, 1535, 1536, 1539], "352": [118, 119, 1321, 1372, 1375], "195": [118, 119], "static_conv1d": [118, 119], "static_conv1d_transpos": [118, 119], "static_conv2d": [118, 119], "static_conv2d_transpos": [118, 119], "static_conv3d": [118, 119], "static_conv3d_transpos": [118, 119], "static_depthwise_conv2d": [118, 119], "static_dropout": [118, 119], "static_dropout1d": [118, 119], "static_linear": [118, 119], "static_lstm_upd": [118, 119], "static_multi_head_attent": [118, 119], "static_scaled_dot_product_attent": [118, 119], "577": [120, 121, 1392, 1393, 1396], "707": [120, 121, 1392, 1393, 1396], "pseudo": [120, 121, 1392, 1472, 1475], "0986123": [120, 121, 1392, 1482, 1485], "static_choleski": [120, 121], "static_rol": [120, 121, 124, 125, 146, 150], "static_cross": [120, 121], "static_det": [120, 121], "static_diag": [120, 121], "static_diagon": [120, 121], "static_eigh": [120, 121], "static_eigvalsh": [120, 121], "51572949": [120, 121, 1392, 1427, 1430], "17091519": [120, 121, 1392, 1427, 1430], "3448143": [120, 121, 1392, 1427, 1430], "88178420e": [120, 121, 1392, 1427, 1430], "35898387e": [120, 121, 1392, 1427, 1430], "46410179e": [120, 121, 1392, 1427, 1430], "00": [120, 121, 160, 237, 277, 278, 450, 566, 569, 1392, 1427, 1430], "static_inn": [120, 121], "static_inv": [120, 121, 1392, 1437, 1440], "static_matmul": [120, 121], "matul": [120, 121], "static_matrix_norm": [120, 121], "deimens": [120, 121], "static_matrix_pow": [120, 121], "static_matrix_rank": [120, 121], "static_matrix_transpos": [120, 121], "static_out": [120, 121], "static_pinv": [120, 121], "static_qr": [120, 121], "static_slogdet": [120, 121], "static_solv": [120, 121], "static_svd": [120, 121], "static_svdv": [120, 121], "static_tensordot": [120, 121], "static_trac": [120, 121], "static_vand": [120, 121], "343": [120, 121, 450, 716, 719], "512": [120, 121], "729": [120, 121, 168], "static_vecdot": [120, 121], "static_vector_norm": [120, 121], "mathemat": [120, 121, 148, 158, 162, 236, 450, 466, 469, 486, 489, 566, 569, 631, 634, 676, 679, 1392, 1447, 1450, 1525, 1529, 1819, 1825], "l1": [120, 121, 146, 167, 1392, 1525, 1529], "manhattan": [120, 121, 1392, 1525, 1529], "l2": [120, 121, 146, 1392, 1525, 1529], "euclidean": [120, 121, 1392, 1525, 1529], "static_vector_to_skew_symmetric_matrix": [120, 121], "511": [122, 123, 1535, 1536, 1539], "5108256": [122, 123], "609438": [122, 123, 1392, 1482, 1485], "static_binary_cross_entropi": [122, 123], "static_cross_entropi": [122, 123], "20397282": [122, 123], "83258148": [122, 123], "60943794": [122, 123], "static_sparse_cross_entropi": [122, 123], "static_clip": [124, 125], "static_concat": [124, 125], "static_constant_pad": [124, 125], "static_expand_dim": [124, 125], "container_axi": [124, 125, 1552, 1568, 1571], "static_flip": [124, 125], "static_permute_dim": [124, 125], "static_repeat": [124, 125], "static_reshap": [124, 125], "positivclip": [124, 125], "static_split": [124, 125], "static_squeez": [124, 125], "static_stack": [124, 125], "static_swapax": [124, 125], "static_til": [124, 125], "static_unstack": [124, 125], "static_zero_pad": [124, 125], "classivi": [124, 125, 1552, 1598, 1601, 1714, 1720, 1724], "342": [126, 127, 1656, 1657, 1660], "0427": [126, 127, 1656, 1657, 1660], "299": [126, 127, 1656, 1657, 1660], "241": [126, 127], "431": [128, 129], "83": [128, 129, 450, 736, 739, 1321, 1372, 1375], "274": [128, 129], "91": [128, 129, 450, 521, 524, 1321, 1372, 1375, 1392, 1467, 1470, 1661, 1672, 1675, 1751, 1762, 1765], "static_beta": [128, 129], "static_multinomi": [128, 129], "static_randint": [128, 129], "static_random_norm": [128, 129], "651": [128, 129], "static_random_uniform": [128, 129], "481": [128, 129], "0999": [128, 129], "static_shuffl": [128, 129], "static_argmax": [130, 131], "static_argmin": [130, 131], "static_argwher": [130, 131], "static_nonzero": [130, 131], "static_wher": [130, 131], "static_unique_al": [132, 133], "static_unique_count": [132, 133], "static_unique_invers": [132, 133], "static_unique_valu": [132, 133], "static_argsort": [134, 135], "static_searchsort": [134, 135], "static_sort": [134, 135], "cotain": [136, 137], "11000001": [136, 137], "23100001": [136, 137], "30800003": [136, 137, 1751, 1778, 1781], "static_cumprod": [136, 137], "static_cumsum": [136, 137], "static_prod": [136, 137], "static_sum": [136, 137], "static_var": [136, 137], "12666667": [136, 137, 1751, 1792, 1796], "11555555": [136, 137, 1751, 1792, 1796], "respectv": [136, 137], "81649649": [136, 137], "94280904": [136, 137], "509902": [136, 137, 1751, 1783, 1786], "2472192": [136, 137], "44948983": [136, 137], "41421354": [136, 137], "contian": [136, 137], "6666667": [136, 137], "static_al": [138, 139], "static_ani": [138, 139], "add_ivy_container_instance_method": 140, "containerexampl": [140, 141], "who": [142, 163, 181, 1819, 1821], "hood": [142, 146, 150, 155, 158, 160, 162, 163, 164, 167, 169, 1826], "weed": [142, 163], "tour": 142, "primari": [142, 145, 148, 157, 158, 160, 162, 181, 1808], "superset": [142, 181], "goe": [142, 162], "dynam": [142, 148, 149, 157, 158, 164, 234, 235, 1819, 1823], "runtim": [142, 160, 162, 416, 417, 1819], "borrow": 142, "conjunct": 143, "establish": [143, 1821], "2020": [143, 1819], "group": [143, 146, 155, 158, 159, 1637, 1640, 1815, 1818, 1824], "intend": [143, 154, 1751, 1787, 1791, 1817, 1819, 1823, 1824], "popular": [143, 1819], "sens": [143, 150, 158, 166], "unconnect": 143, "decis": [143, 146, 148, 158, 162, 164, 166, 1819], "initialis": [143, 160, 416, 417], "checkout": [143, 160], "everytim": [143, 148], "init": [143, 169], "thoroughli": 143, "ci": [143, 148, 153, 159, 160, 181], "test_linalg": 143, "test_set_funct": 143, "test_signatur": 143, "excess": [143, 145, 150], "explicitli": [143, 144, 145, 146, 148, 151, 152, 155, 156, 157, 160, 164, 181, 1392, 1422, 1425, 1427, 1430, 1819], "array_modul": 143, "vv": 143, "test_manipulation_funct": 143, "test_concat": [143, 160], "typic": [143, 155, 1735, 1741, 1744, 1818, 1826], "nb": 143, "liber": 143, "bodi": [143, 160], "decor": [143, 146, 148, 149, 155, 156, 157, 158, 159, 1090, 1106], "fortun": 143, "falsifi": [143, 160], "______________________": 143, "test_remaind": 143, "_______________________": 143, "test_operators_and_elementwise_funct": 143, "1264": 143, "st": [143, 159, 160], "1277": 143, "binary_param_assert_against_refimpl": 143, "ctx": 143, "mod": 143, "620": 143, "binary_assert_against_refimpl": 143, "324": 143, "scalar_o": 143, "assertionerror": [143, 152, 160], "17304064": 143, "binaryparamcontext": 143, "reproduc": 143, "temporarili": [143, 161], "reproduce_failur": [143, 160], "axic42baaowcnp": 143, "rumwmabaear0": 143, "parametr": [143, 160, 1819], "make_binary_param": 143, "dh": 143, "numeric_dtyp": 143, "left_strat": 143, "left_sym": 143, "right_strat": 143, "right_sym": 143, "right_is_scalar": 143, "xp": 143, "binary_param_assert_dtyp": 143, "binary_param_assert_shap": 143, "led": [143, 1821], "unexpectedli": 143, "discrep": [143, 159], "sync": 143, "varieti": [143, 147, 148, 149, 160, 1815, 1817, 1821, 1822, 1825, 1826], "known": [143, 148, 158, 160], "test_asarray_arrai": 143, "test_floor_divid": 143, "health": 143, "test_iop": 143, "__imod__": 143, "x1_i": [143, 450, 466, 469, 486, 489, 496, 499, 506, 509, 511, 514, 516, 519, 521, 524, 546, 549, 551, 554, 576, 579, 581, 584, 586, 589, 611, 614, 616, 619, 641, 644, 646, 649, 656, 659, 661, 664, 676, 679, 686, 689, 696, 699, 711, 714, 746, 750], "isequ": 143, "test_matrix_norm": 143, "alter": 143, "tweak": 143, "array_api_methods_to_test": 143, "identifi": [143, 147, 160, 162, 196, 197, 203], "202": [143, 450, 536, 539], "test_trac": 143, "latter": [143, 145, 148, 151, 158], "hand": [143, 148, 155, 160, 181], "scheme": [143, 168, 1819], "edg": [143, 160, 1552, 1553, 1556, 1563, 1566, 1628, 1632, 1809, 1819, 1821, 1825], "test_special_cas": 143, "__ipow__": 143, "is_integ": 143, "revisit": [143, 154], "tf": [144, 148, 149, 154, 157, 158, 160, 161, 162, 164, 169, 181, 1808, 1809, 1819], "wrapper": [144, 146, 148, 156, 157, 158, 166, 1808, 1815, 1819], "_data": [144, 158, 166], "meta": [144, 161, 1634, 1635, 1636, 1819], "organiz": [144, 146, 158], "inherit": [144, 146, 152, 166, 181, 1808], "bear": [144, 146, 148, 158], "necessarili": [144, 146], "although": [144, 146, 158, 162, 1392, 1482, 1485, 1817, 1819], "underpin": [144, 146, 164], "programmat": [144, 146, 1820], "backup": [144, 146], "accident": [144, 146, 158], "readabl": [144, 146, 152, 154, 160, 161, 166, 167], "absent": [144, 146], "perk": [144, 146], "auto": [144, 146, 167], "__mul__": [144, 146, 150, 154, 162, 166], "throw": [144, 148, 152, 166, 1819], "imposs": 144, "inputs_to_native_arrai": [144, 156, 182], "outputs_to_ivy_arrai": [144, 148, 149, 154, 156, 182], "firstli": [144, 148, 150, 151, 152, 155, 156, 157, 162, 167, 1815, 1825], "anywai": [144, 156, 158], "secondli": [144, 148], "permit": [144, 154, 158, 160, 162], "dictat": [144, 150, 154, 157], "implicit_backend": [145, 164], "__dict__": [145, 164], "ivy_original_dict": [145, 164], "unmodifi": [145, 148, 416, 420], "opt": [145, 148, 157, 160, 161, 162], "fallback": 145, "requires_grad": [145, 159], "memory_format": 145, "preserve_format": 145, "weren": 145, "break": [145, 148, 153, 154, 161, 181, 1809], "Not": [145, 159, 167, 168, 181, 236], "vast": [145, 148, 1819], "minor": [145, 162, 181], "fn_name_v_1p12_and_abov": 145, "similarli": [145, 148, 162, 166, 237, 280, 283, 1825], "fn_name_v_1p01_to_1p1": 145, "vari": [146, 150, 158, 160, 166, 1714, 1715, 1719, 1720, 1724, 1725, 1729, 1730, 1734], "five": [146, 167], "recap": [146, 150, 168], "arbitrarili": [146, 156, 167], "__repr__": 146, "control": [146, 148, 157, 158, 162, 166, 167, 180, 1321, 1365, 1368, 1392, 1408, 1411, 1808, 1819, 1825], "__getattr__": 146, "__setattr__": 146, "__contains__": 146, "__getstate__": 146, "__setstate__": 146, "unpickl": 146, "num_dim": [146, 169], "__len__": 146, "restrict": [146, 158, 164, 1816], "enforc": [146, 166], "extern": [146, 154, 158, 160, 161], "flexibl": [146, 154, 161, 1819], "c1": 146, "lefthand": 146, "righthand": 146, "handle_nest": [146, 155, 156, 164, 182], "addition": [146, 157, 158, 1825], "counterpart": [146, 156], "behavior": [146, 148, 158, 159, 160, 162, 164, 181, 450, 696, 699, 711, 714, 1714, 1715, 1719, 1720, 1724, 1725, 1729, 1730, 1734, 1816], "presenc": [146, 157], "absenc": [146, 154, 1819], "implicitli": [146, 160, 164], "themselv": [146, 148, 149, 151, 155, 158, 168, 1637, 1638, 1816, 1825], "log_pr": [146, 155, 157], "intuit": [146, 160, 167, 168, 1815], "chronolog": 146, "concurr": [146, 155, 1819], "had": [146, 157, 164, 1819, 1820], "consum": [146, 154, 159, 160], "sequenti": [146, 168], "shouldn": 146, "But": [146, 151, 156, 157, 169], "flow": [146, 180, 1819, 1820], "compil": [146, 158, 161, 162, 163, 165, 181, 1808, 1809, 1815, 1818, 1819, 1820, 1823, 1826], "implic": 146, "whatsoev": [146, 155, 1808, 1825], "implicit": [146, 151, 158, 160, 164, 1819], "eager": [146, 181, 1819], "children": 146, "shallowest": 146, "deepest": 146, "event": [147, 160], "ex": 147, "review_request": 147, "yml": 147, "dispatch": [147, 181, 1819, 1822], "pair": [147, 450, 486, 489, 1321, 1387, 1390, 1392, 1398, 1401], "test_nn": 147, "yellow": 147, "dot": [147, 1321, 1382, 1385, 1387, 1390, 1392, 1520, 1524], "queu": 147, "redirect": 147, "book": 147, "procedur": [147, 150], "decoupl": [147, 168], "ran": 147, "badg": 147, "clickabl": 147, "uint8": [148, 160, 321, 343, 346, 355, 366, 367, 394, 397, 401, 404, 409, 414], "uint16": [148, 158, 160, 164, 321, 349, 355, 369, 370, 372, 375, 394, 397, 1751, 1752, 1755, 1757, 1760, 1778, 1781, 1787, 1791], "uint32": [148, 160, 164, 321, 355, 369, 370, 372, 375, 377, 414, 1751, 1752, 1755, 1757, 1760, 1778, 1781, 1787, 1791], "uint64": [148, 160, 164, 321, 355, 369, 370, 377, 378, 401, 404, 406, 409, 1751, 1752, 1755, 1757, 1760, 1778, 1781, 1787, 1791], "bfloat16": [148, 158, 160, 321, 366, 367], "all_dtyp": 148, "all_numeric_dtyp": 148, "all_int_dtyp": 148, "all_float_dtyp": 148, "replic": [148, 150, 158, 162], "four": [148, 150, 154, 155, 160, 162, 167], "thirdli": 148, "native_float32": 148, "importantli": [148, 166, 169, 180], "conveni": [148, 149, 154, 159, 165, 167, 168, 1808, 1825], "set_default_dtyp": [148, 155, 321, 411], "default_dtyp": [148, 155, 321], "arguabl": [148, 149, 158], "promote_typ": [148, 321], "type_promote_arrai": [148, 321], "promote_types_of_input": [148, 321], "jaxarrai": [148, 149, 154, 157, 161, 164], "jnp": [148, 149, 154, 157, 161, 164, 169, 1809], "_handle_0_dim_output": [148, 157], "experiment": [148, 158, 161, 164, 1819], "subtli": [148, 157], "On": [148, 158, 160, 165, 169], "promote_types_frontend_nam": 148, "promote_types_of_frontend_name_input": 148, "frontend_nam": 148, "demonstr": [148, 150, 166], "accuraci": 148, "precis": [148, 158, 162, 321, 361, 364, 450, 676, 679, 736, 739, 1392, 1482, 1485, 1823], "upcast": 148, "instabl": 148, "underflow": [148, 1392, 1482, 1485], "nearli": [148, 154, 156, 1819], "downcast": 148, "footprint": 148, "constraint": 148, "concret": 148, "compound": 148, "infer_dtyp": [148, 149, 154, 156, 182], "default_int_dtyp": [148, 321, 408, 413], "default_float_dtyp": [148, 321], "settabl": [148, 149], "set_default_int_dtyp": [148, 321, 354, 377, 413], "set_default_float_dtyp": [148, 321, 351, 352, 377, 412], "irrelev": [148, 150], "handle_out_argu": [148, 149, 154, 156, 157, 164, 182], "infer_devic": [148, 149, 154, 156, 182], "deleg": [148, 1826], "shape_to_tupl": 148, "with_supported_dtyp": [148, 182], "with_unsupported_dtyp": [148, 182], "unment": 148, "backend_vers": 148, "_cast_for_unary_op": 148, "target_typ": 148, "function_supported_dtyp": [148, 321], "function_unsupported_dtyp": [148, 321], "unsign": [148, 159, 164, 1751, 1752, 1755, 1757, 1760, 1778, 1781, 1787, 1791], "discov": 148, "unsupported_dtyp": 148, "invalid_dtyp": [148, 321], "former": [148, 151, 158], "uint": [148, 159, 321, 355, 394, 397, 409, 414], "lack": [148, 157, 1819, 1826], "rang": [148, 152, 160, 164, 167, 168, 169, 237, 239, 240, 272, 275, 277, 278, 1090, 1282, 1283, 1318, 1714, 1715, 1719, 1751, 1752, 1755, 1757, 1760, 1778, 1781, 1787, 1791, 1809, 1819, 1825], "patch": [148, 1819], "achiev": [148, 153, 156, 160, 167, 169, 1808], "subtl": [148, 161, 1825], "offici": [148, 164], "inconsist": [148, 152], "unexpect": [148, 321, 400], "84530": 148, "unwarr": 148, "risk": [148, 1825], "needlessli": 148, "bloat": 148, "undergo": [148, 181], "supported_dtyp": [148, 158], "unsupported_devic": 148, "supported_devic": 148, "slight": [148, 168], "downsid": 148, "coverag": [148, 160], "inflat": 148, "idx": [149, 166, 1090, 1096], "tpu": [149, 416, 417, 420, 438, 447, 1819, 1822], "get_all_ivy_arrays_on_dev": [149, 416], "aliv": [149, 416, 430, 434, 436, 1090, 1157, 1216, 1217], "num_gpu": [149, 160, 416], "total_mem_on_dev": [149, 416], "dev_util": [149, 416], "num_cpu_cor": [149, 416], "default_devic": [149, 152, 416, 434, 437, 438, 448], "outsid": [149, 153, 155, 166, 1552, 1553, 1556, 1608, 1611, 1824], "dual": 149, "categor": [149, 155, 158], "thrown": [149, 152, 181, 1090, 1189, 1192], "far": [149, 150, 165, 1637, 1638, 1649, 1824, 1825], "set_default_devic": [149, 416, 448], "eight": [150, 163], "func_nam": [150, 151, 155, 158], "static_func_nam": 150, "op_nam": 150, "__r": 150, "combinatori": 150, "variat": [150, 158, 160], "grid": [150, 160, 180, 237, 280, 283], "unus": [150, 153, 157, 234, 235], "okai": [150, 162, 164], "showcas": [150, 180], "meant": 150, "imaginari": 150, "spec": [150, 151], "my_func": [150, 161], "some_flag": 150, "another_flag": 150, "jointli": 150, "x0": [150, 1090, 1098, 1100], "5574077": 150, "1850398": 150, "5463025": 150, "8422884": 150, "91601413": 150, "9647598": 150, "3738229": 150, "1597457": 150, "0963247": 150, "9955841": 150, "3278579": 150, "multi": [150, 163, 181, 1321, 1382, 1385, 1392, 1398, 1401, 1809, 1815, 1817, 1819, 1823], "pars": [150, 181], "satisfi": 150, "asid": [150, 180], "increasingli": 150, "14254655": 150, "1578213": 150, "380515": 150, "trivial": 150, "exlud": 150, "failing_fn_nam": 150, "onlin": [150, 151], "minutest": 150, "suffici": [150, 160], "segment": 150, "fault": [150, 1819], "contrast": [151, 154, 158, 1825], "instanti": 151, "templat": [151, 160, 1809], "array_api": 151, "preview": 151, "render": 151, "incorrectli": 151, "domain": [151, 450, 456, 459, 461, 464, 471, 474, 476, 479, 481, 484, 486, 489, 531, 534, 536, 539, 561, 564, 566, 569, 621, 624, 626, 629, 636, 639, 726, 729, 731, 734, 736, 739, 751, 755, 756, 760, 1817, 1819], "codomain": [151, 450, 456, 459, 461, 464, 471, 474, 476, 479, 481, 484, 486, 489, 531, 534, 536, 539, 561, 564, 566, 569, 621, 624, 626, 629, 636, 639, 726, 729, 731, 734, 736, 739, 751, 755, 756, 760], "needless": [151, 159], "info": [151, 1809], "subset": [151, 154, 158, 160, 164, 1819], "renam": [151, 158], "judgment": 151, "beyond": [151, 158, 1552, 1593, 1596, 1825], "pure": [151, 154, 158, 162, 166, 169, 181, 1819, 1825, 1826], "operator_nam": 151, "succinct": 151, "contstructor": 151, "_forward": [151, 164, 167, 168, 1809], "trainabl": [151, 165, 167, 168], "docst": 151, "ivyexcept": [152, 158, 1283, 1312, 1320], "super": [152, 164, 167, 168, 169], "ivybackendexcept": 152, "_default": 152, "current_backend_str": [152, 164, 166, 1090], "_delimit": 152, "indexerror": [152, 1283, 1318, 1552, 1568, 1571], "ivyerror": 152, "repetit": [152, 1552, 1583, 1586, 1618, 1622], "caught": 152, "functool": [152, 158, 166], "new_fn": [152, 158], "__name__": [152, 1090, 1270], "comparison": 152, "error_stack": 152, "axiserror": 152, "bound": [152, 160, 164, 1825], "got": [152, 1809], "elif": [152, 157, 158], "polici": [152, 160, 180], "moreov": 152, "cleaner": [152, 167], "lesser": 152, "set_split_factor": [152, 416], "split_factor": [152, 416, 438], "met": 152, "flake8": 153, "undefin": 153, "statement": [153, 157, 160, 162, 181], "handler": [153, 163, 165, 169, 1808, 1809], "annot": [153, 154], "star": 153, "byte": [153, 1824, 1825], "notimpl": 153, "notimplementederror": 153, "unsuccess": 153, "reformat": 153, "exceed": 153, "black": 153, "disobei": 153, "taken": [153, 158, 161, 169, 1392, 1413, 1416, 1820], "successfulli": 153, "inde": [153, 154, 162, 181, 1817], "adress": 154, "dedic": [154, 166, 168], "to_native_arrays_and_back": [154, 156, 164, 182], "usabl": [154, 161], "sole": [154, 161, 1818, 1819, 1820], "strictli": [154, 157], "rational": 154, "__div__": [154, 162], "dicat": 154, "futher": 154, "pep": 154, "484": 154, "brittl": 154, "freeli": 154, "technic": [154, 157, 181, 1819, 1821], "original_typ": 154, "cumbersom": 154, "omit": [154, 157, 158, 450, 716, 719, 1714, 1715, 1719, 1720, 1724, 1725, 1729, 1730, 1734], "venn": 155, "diagram": [155, 1825], "light": [155, 158, 181, 1808, 1820, 1825], "array_arg": 155, "cache_fn": [155, 1090], "cach": [155, 160, 416, 421, 1090, 1106], "deal": [155, 181], "modif": [155, 1819], "briefli": [155, 160, 167], "get_all_arrays_on_dev": 155, "nested_map": [155, 1637], "index_nest": [155, 1637], "inputs_to_ivy_arrai": [156, 182], "heavili": [156, 158, 181], "facilit": 156, "integer_array_to_float": 156, "handle_cmd_line_arg": 156, "as_vari": [156, 159, 160], "with_out": [156, 159, 160], "instance_method": [156, 160], "test_gradi": 156, "topic": [156, 166, 1819], "suffic": [156, 160], "program": [157, 1816, 1817, 1819, 1822, 1823, 1826], "ration": [157, 162], "speak": 157, "x_nativ": 157, "val_n": 157, "_is_vari": 157, "unspecifi": [157, 450, 696, 699, 711, 714, 1392, 1418, 1421, 1422, 1425, 1552, 1608, 1611], "predominantli": [157, 161, 180], "support_native_out": [157, 164], "math": [157, 158, 159, 169, 1809, 1817], "mx": 157, "nd": 157, "_wrap_fn": 157, "dim0": 157, "dim1": 157, "maxim": [157, 162, 164, 1816, 1817, 1821, 1822, 1823], "third": [157, 181, 1392, 1492, 1496, 1714, 1715, 1719, 1818, 1819, 1825], "leverag": [157, 1817, 1819], "capabl": [157, 160, 162], "input_arrai": 157, "plai": [158, 160, 169, 1819, 1822], "tf_frontend": 158, "lax": [158, 159, 162, 169, 181], "neither": [158, 162, 450, 466, 469, 676, 679, 1283, 1312, 1320], "fn_tree": [158, 159, 160], "wrong": [158, 162], "carefulli": [158, 1817, 1822], "acceler": [158, 1809, 1817, 1821, 1822, 1823, 1824], "algebra": [158, 1817, 1818, 1819, 1822, 1826], "xla": [158, 181, 1808, 1819], "decompos": 158, "dynamic": 158, "extent": 158, "to_ivy_arrays_and_back": [158, 159], "mimic": 158, "arithmetic_oper": 158, "handle_numpy_cast": 158, "same_kind": 158, "subok": [158, 159, 162], "as_ivy_dtyp": [158, 321], "recov": 158, "obtain": 158, "unhandl": 158, "subclass": [158, 162], "trigonometric_funct": 158, "from_zero_dim_arrays_to_float": [158, 182], "raw_op": [158, 159], "tackl": 158, "map_raw_ops_alia": 158, "unnecessari": [158, 162], "output_typ": 158, "kwargs_to_upd": 158, "implemnt": 158, "pointwise_op": 158, "preferred_element_typ": 158, "conv_general_dil": [158, 1321], "finer": 158, "nor": [158, 450, 466, 469, 676, 679, 1283, 1312, 1320, 1823], "margin": 158, "fit": [158, 164, 1552, 1583, 1586, 1815, 1816, 1819], "meet": 158, "criteria": 158, "incorpor": [158, 167, 1819], "omiss": 158, "sensibl": 158, "deem": 158, "reserv": 158, "resum": 158, "sort_complex": 158, "stai": 158, "awai": [158, 1817, 1819], "notifi": 158, "awar": 158, "meantim": 158, "possibli": [158, 160, 181, 1090, 1255, 1258], "straight": [158, 160, 166, 1809], "ahead": [158, 1819], "heavi": [158, 159, 162, 1820], "logicaland": 158, "truth": [158, 160, 450, 551, 554, 581, 584, 586, 589, 611, 614, 616, 619, 686, 689], "np_frontend": 158, "radd": 158, "_init_data": 158, "isinst": [158, 160, 161, 168, 169], "_process_str_data": 158, "_shape": [158, 166], "_dtype": [158, 159, 166], "govern": 158, "promote_types_of_": 158, "_input": 158, "promote_types_of_tensorflow_input": 158, "saniti": 158, "func_wrapp": [158, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194], "handle_numpy_casting_speci": 158, "equiv": 158, "unsaf": 158, "array_type_test": 158, "routin": [158, 162, 181, 1819], "organis": 158, "watch": 158, "youtub": 158, "seri": [158, 160, 1819, 1821], "jump": 159, "knowledg": 159, "handle_frontend_test": [159, 160], "handle_frontend_method": [159, 160], "test_frontend_funct": 159, "lift": [159, 1820], "get_dtyp": [159, 160], "dtype_and_valu": [159, 160], "get_shap": [159, 160], "np_frontend_help": 159, "nn": [159, 162, 169, 237, 280, 283, 1809, 1820], "test_jax": 159, "test_jax_lax_oper": 159, "dtype_and_x": [159, 160], "available_dtyp": [159, 160], "test_jax_lax_tan": 159, "num_positional_arg": [159, 160], "on_devic": 159, "input_dtyp": [159, 160], "as_variable_flag": 159, "native_array_flag": 159, "test_numpi": 159, "test_mathematical_funct": 159, "test_np_trigonometric_funct": 159, "test_numpy_tan": 159, "handle_dtype_and_cast": 159, "get_dtypes_kind": 159, "handle_where_and_array_bool": 159, "test_tensorflow": 159, "test_math": 159, "test_tensorflow_tan": 159, "test_torch": 159, "test_pointwise_op": 159, "test_torch_tan": 159, "_fill_valu": 159, "min_valu": [159, 160], "max_valu": [159, 160], "allow_non": [159, 160], "min_num_dim": [159, 160], "max_num_dim": [159, 160], "min_dim_s": [159, 160], "max_dim_s": 159, "test_jax_lax_ful": 159, "test_from_shape_or_valu": 159, "input_fill_dtyp": 159, "_input_fill_and_dtyp": 159, "test_numpy_ful": 159, "dtype_to_cast": 159, "test_tf_funct": 159, "test_tensorflow_fil": 159, "test_creation_op": 159, "_requires_grad": 159, "test_torch_ful": 159, "accommod": 159, "walkthrough": 159, "torch_frontend": 159, "comparison_op": 159, "promote_types_of_torch_input": 159, "test_comparison_op": 159, "dtype_and_input": 159, "allow_inf": [159, 160], "shared_dtyp": 159, "test_torch_great": 159, "all_alias": 159, "class_tre": 159, "init_tre": 159, "method_nam": 159, "test_frontend_method": 159, "test_jax_devicearrai": 159, "test_jax_instance_add": 159, "init_num_positional_arg": 159, "pf": 159, "numpositionalargfn": 159, "method_num_positional_arg": 159, "numpositionalargmethod": 159, "asvariableflag": 159, "nativearrayflag": 159, "frontend_method_data": 159, "init_input_dtyp": 159, "init_as_variable_flag": 159, "init_native_array_flag": 159, "init_all_as_kwargs_np": 159, "method_input_dtyp": 159, "method_as_variable_flag": 159, "method_native_array_flag": 159, "method_all_as_kwargs_np": 159, "tell": 159, "reli": 159, "test_ndarrai": 159, "test_numpy_instance_add__": 159, "test_tensor": 159, "test_tensorflow_instance_add": 159, "method_tre": [159, 160], "1e04": 159, "allow_infin": 159, "test_torch_instance_add": 159, "_arrays_idx_n_dtyp": 159, "test_manipul": [159, 160], "surprisingli": 159, "cat": [159, 162, 164, 169], "closest_relevant_group": 159, "strive": [159, 160, 162, 181, 1821], "cycl": 160, "exhaust": [160, 1816, 1825], "fixtur": 160, "hit": [160, 164], "eleg": [160, 1819], "intellig": [160, 162, 1821], "unexplor": 160, "repeatedli": [160, 1637, 1647], "upload": 160, "artifact": 160, "impli": [160, 1714, 1715, 1719, 1720, 1724, 1725, 1729, 1730, 1734], "bespok": 160, "_array_or_typ": 160, "standalon": [160, 1808, 1815, 1820, 1825, 1826], "test_default_int_dtyp": 160, "clariti": [160, 162, 1819], "print_hypothesis_exampl": 160, "searchstrategi": 160, "custom_strategi": 160, "sampled_from": 160, "randomis": 160, "simplist": 160, "intricaci": 160, "glanc": 160, "stratigi": 160, "one_of": 160, "datum": 160, "pipe": 160, "overload": 160, "shorthand": 160, "suppos": 160, "scaler": 160, "array_or_scal": 160, "len_of_arrai": 160, "test_add": 160, "keywoard": 160, "gradient_test": 160, "test_gpu_is_avail": 160, "requri": 160, "handle_test": 160, "summara": 160, "pretest": 160, "slighlti": 160, "handle_method": 160, "pytet": 160, "snippet": 160, "thankfulli": 160, "seamlessli": 160, "encount": 160, "criterion": 160, "array_valu": 160, "valid_ax": 160, "craft": 160, "hoc": 160, "intersect": [160, 180], "44758124e": 160, "308": [160, 321, 361, 364], "11228": 160, "456": [160, 1714, 1715, 1719], "268": 160, "wherev": 160, "dtype_values_axi": 160, "9622": 160, "28136": 160, "6375": 160, "12720": 160, "21354": 160, "900e": 160, "955e": 160, "exclude_min": 160, "large_abs_safety_factor": 160, "safety_factor_scal": 160, "57384": 160, "25687": 160, "248": 160, "array_dtyp": 160, "min_siz": 160, "max_siz": 160, "array_bool": 160, "na": 160, "test_devic": 160, "array_shap": 160, "common_shap": 160, "test_lay": 160, "size_bound": 160, "reshape_shap": 160, "stand": 160, "fashion": 160, "some_sequ": 160, "allow_nan": 160, "allow_subnorm": 160, "get_bound": 160, "arrays_valu": 160, "36418": 160, "213": 160, "21716926": 160, "none_or_list_of_float": 160, "get_prob": 160, "get_mean_std": 160, "103515625e": 160, "099609375": 160, "probabilist": 160, "get_axi": 160, "number_positional_argu": 160, "unreproduc": 160, "test_valu": 160, "enough": [160, 166, 167, 168], "report": 160, "valid_float_dtyp": 160, "test_demo": 160, "failing_test": 160, "traceback": 160, "file_nam": [160, 161], "shrink": 160, "prescrib": 160, "closest": [160, 162, 321, 349, 450, 526, 529, 571, 574, 576, 579, 716, 719, 761, 765], "scratch": 160, "databas": 160, "therebi": 160, "test_gelu": 160, "test_fil": 160, "brief": 160, "phase": [160, 181, 1819], "notabl": [160, 1819], "verbos": [160, 164, 1809, 1871], "newer": 160, "max_exampl": 160, "impact": [160, 168, 1821], "deadlin": 160, "weird": 160, "systemat": 160, "safeguard": 160, "inabl": 160, "test_result_typ": 160, "9090909090909091": 160, "judgement": 161, "some_namespac": 161, "some_backend": 161, "another_backend": 161, "refactor": 161, "ongo": 161, "cooler": 161, "something_cool": 161, "clean": [161, 162, 164, 165, 167], "_assert_fill_value_and_dtype_are_compat": 161, "_to_devic": 161, "focus": [161, 180, 1817, 1818, 1819, 1825, 1826], "prior": 161, "older": 161, "grow": [161, 1809, 1819], "unbound": 161, "battl": 161, "face": [162, 164, 1819, 1825], "answer": [162, 166, 181], "contradict": 162, "entail": 162, "sacrif": 162, "dimems": 162, "conv": [162, 1321], "jacfwd": 162, "jacrev": 162, "banner": 162, "ravel": 162, "pointwis": 162, "fuse": 162, "tensorrt": 162, "highli": [162, 1819], "expens": 162, "incredibli": [162, 167, 181, 1822], "six": 162, "price": 162, "pai": 162, "intrus": 162, "x_beta": 162, "equip": 162, "deliber": [162, 450, 716, 719], "priorit": 162, "simplif": 162, "allevi": 162, "ineffici": [162, 181, 1819], "fledg": [164, 165], "syntact": [164, 169], "logspac": [164, 237], "construct": [164, 168, 169, 1552, 1618, 1622, 1817, 1819, 1826], "power_seq": 164, "backend_stack": 164, "cprint": [164, 1870], "_determine_backend_from_arg": 164, "importlib": 164, "import_modul": 164, "_backend_dict": 164, "illustr": [164, 180], "un": [164, 321, 378], "unrol": [164, 167, 1321, 1377, 1380], "lstm": [164, 1321, 1377, 1380, 1819], "cell": [164, 1321, 1377, 1380], "hidden": [164, 168, 1321, 1377, 1380], "recurr": [164, 1321, 1377, 1380, 1819, 1823], "timestep": [164, 1321, 1377, 1380], "x_shape": 164, "input_channel": [164, 168], "x_flat": 164, "wi": 164, "wi_x": 164, "wii_x": 164, "wif_x": 164, "wig_x": 164, "wio_x": 164, "wh": 164, "ht": 164, "ct": 164, "hts_list": 164, "wii_xt": 164, "wif_xt": 164, "wig_xt": 164, "wio_xt": 164, "zip": 164, "htm1": 164, "ctm1": 164, "wh_htm1": 164, "whi_htm1": 164, "whf_htm1": 164, "whg_htm1": 164, "who_htm1": 164, "ft": 164, "ot": 164, "reliabl": 164, "sacrific": 164, "hear": 164, "virtu": [164, 1816], "pure_ivi": 164, "compile_graph": [164, 169], "pure_torch": 164, "backbon": [164, 167], "_layer": 164, "random_unifrom": 164, "unclean": 164, "wx": 164, "temp": [164, 1090, 1236], "ivy_func": 164, "emphas": 164, "torchscript": [164, 1808, 1826], "example_input": [164, 234, 235], "static_argnum": [164, 234, 235], "static_argnam": [164, 234, 235], "jit": [164, 181, 1819], "primit": [165, 181, 1817, 1819], "upcom": 165, "hierarch": [165, 167, 168, 1819], "_init": 166, "_size": 166, "mul": 166, "_devic": 166, "_dev_str": 166, "as_ivy_dev": [166, 416], "_pre_repr": 166, "_post_repr": 166, "framework_str": 166, "noinspect": 166, "pypep8nam": 166, "typeerror": 166, "immut": 166, "claim": 166, "truli": 166, "_native_wrapp": 166, "attributeerror": 166, "genuin": 166, "some_method": 166, "rewritten": 166, "strang": 166, "compartment": 166, "public": [166, 1090, 1117, 1822], "newshap": 166, "new_shap": 166, "tidi": 166, "shorter": 166, "crystal": 166, "ton": 167, "ado": [167, 168], "soup": 167, "walk": [167, 168], "cnt": 167, "combo": 167, "1000": [167, 237, 277, 278], "3333335": 167, "grad": [167, 168, 169, 1283, 1285, 1288, 1809], "delimit": 167, "autocomplet": 167, "midwai": 167, "agent": 167, "total_spe": 167, "total_height": 167, "total_width": 167, "ag": 167, "tot": 167, "total_": 167, "total_h": 167, "cnt0": 167, "cnt1": 167, "diff_0": 167, "diff_1": 167, "config0": 167, "config1": 167, "decod": 167, "l0": 167, "decoder__l0": 167, "decoder__l1": 167, "encoder__l0": 167, "encoder__l1": 167, "height": 167, "l0__b": 167, "l0__w": 167, "l1__b": 167, "l1__w": 167, "printabl": 167, "obviou": [167, 1819], "foresight": 167, "untidili": 167, "update_ag": 167, "normalize_img": 167, "img": 167, "img_max": 167, "reduce_max": [167, 1809], "img_min": 167, "reduce_min": [167, 1809], "img_rang": 167, "agent_posit": 167, "agent_veloc": 167, "agent_cam_front_rgb": 167, "agent_cam_front_depth": 167, "agent_cam_rear_rgb": 167, "agent_cam_rear_depth": 167, "agent_cam_lidar": 167, "camera": 167, "front_rgb": 167, "front_depth": 167, "rear_rgb": 167, "rear_depth": 167, "lidar": 167, "rgb": 167, "rear": 167, "veloc": 167, "cam": 167, "cam_max": 167, "cam_min": 167, "cam_rang": 167, "Of": [167, 1824, 1825], "perman": 167, "thread": [167, 1819], "pretti": [167, 1825], "straightforward": 167, "dataload": [167, 179, 1809], "_cnt": 167, "img_": 167, "_dataset_s": 167, "_batch_siz": 167, "_count": [167, 168], "__next__": 167, "filenam": 167, "img_fnam": 167, "fname": 167, "loaded_img": 167, "cv2": 167, "imread": 167, "from_numpi": 167, "loader": [167, 181], "batch_slic": 167, "model": [167, 168, 1808, 1809, 1817, 1818, 1819, 1820, 1821, 1822, 1823, 1825, 1826], "mymodel": [167, 1809], "linear0": [167, 168, 1809], "linear1": [167, 168, 1809], "x_in": [167, 168, 169, 1809], "loss_fn": [167, 168, 169, 1809], "reduce_mean": [167, 168, 169, 1809], "execute_with_gradi": [167, 168, 169, 181, 1283, 1809], "0145": 167, "grad_fn": [167, 1283, 1294, 1319], "addbackward0": 167, "_create_vari": 168, "output_channel": 168, "with_bia": 168, "_input_channel": 168, "_output_channel": 168, "_w_shape": 168, "_b_shape": 168, "_with_bia": 168, "396": 168, "764": 168, "872": 168, "211": 168, "439": 168, "nightmar": 168, "overcom": 168, "fc": 168, "v0": 168, "v1": 168, "key0": 168, "linear3": 168, "v2": 168, "counter": 168, "fed": [168, 416, 440], "weight_initi": 168, "glorotuniform": 168, "bias_initi": 168, "_w_init": 168, "_b_init": 168, "create_vari": 168, "var_shap": 168, "fan_out": 168, "fan_in": 168, "fan_mod": 168, "fan_sum": 168, "misnom": 168, "saw": 168, "vanilla": [168, 1633, 1635, 1819], "compile_on_next_step": [168, 1090, 1097], "_beta1": 168, "_beta2": 168, "_epsilon": 168, "_mw": 168, "_vw": 168, "_first_pass": 168, "_should_compil": 168, "_step": 168, "new_v": 168, "_lr": 168, "_inplac": 168, "_stop_gradi": 168, "set_stat": 168, "clamp": 169, "clip_by_valu": 169, "captur": [169, 1820], "sparse_funct": 169, "num_class": 169, "new_axi": 169, "_linear": 169, "jax_graph": 169, "to_backend": 169, "to_ivy_modul": 169, "thinli": 169, "whilst": [169, 1808, 1819], "to_haiku_modul": 169, "hk": 169, "loss_fn_t": 169, "without_apply_rng": 169, "rng": 169, "prngkei": 169, "update_rul": 169, "tree_multimap": 169, "mechan": [179, 181, 1809], "robot": [179, 1809], "perfect": 180, "differenti": [180, 1819], "orient": 180, "pose": 180, "euler": [180, 236], "quaternion": 180, "ivy_mech": 180, "target_facing_rotation_matrix": 180, "polar_to_cartesian_coord": 180, "ordin": [180, 1392, 1487, 1490], "warp": 180, "optic": 180, "voxel": 180, "ivy_vis": 180, "coords_to_voxel_grid": 180, "render_pixel_coord": 180, "neural": [180, 1321, 1809, 1815, 1817, 1818, 1819, 1823, 1825, 1826], "radianc": 180, "nerf": 180, "trajectori": 180, "motion": 180, "plan": [180, 1809], "mobil": [180, 1819], "sample_spline_path": 180, "rigidmobil": 180, "sample_bodi": 180, "drone": 180, "sample_link": 180, "openai": 180, "swimmer": 180, "reward": 180, "supervis": 180, "reinforc": 180, "door": [180, 181], "cartpol": 180, "mountain_car": 180, "pendulum": 180, "reacher": 180, "learnt": 180, "ture": 180, "ntm": 180, "egospher": 180, "spatial": 180, "esm": 180, "ivy_memori": 180, "egocentr": 180, "room": 180, "inspir": 180, "doubt": 181, "grate": 181, "probe": 181, "remark": 181, "surpris": 181, "lock": 181, "gold": 181, "dex": 181, "ye": 181, "scan": 181, "tricki": [181, 1808], "predictor": 181, "tight": 181, "driver": 181, "schedul": [181, 1819, 1826], "Will": 181, "ast": 181, "cond": 181, "jacobian": [181, 1283, 1299, 1819], "checkpoint": 181, "autodiff": 181, "shine": 181, "merci": 181, "autograd": 181, "cluster": [181, 1819], "compet": [181, 1819], "paradigm": [181, 1819], "parallelis": 181, "spmd": 181, "mixtur": 181, "expert": 181, "sophist": 181, "depart": 181, "hundr": 181, "thousand": 181, "deepli": [181, 1637, 1639, 1819], "broadli": [181, 1825], "supplementari": 181, "reusabl": [181, 1817, 1819], "fanci": [181, 1819], "fusion": [181, 1823], "lose": 181, "vmap": [181, 1090, 1819], "pmap": 181, "overhead": [181, 1822], "eventu": 181, "supplement": 181, "backdoor": 181, "callback": 181, "record": [181, 1820], "metric": 181, "somewhat": [181, 1819], "outsourc": 181, "handle_array_lik": 182, "handle_nan": 182, "integer_arrays_to_float": 182, "with_supported_device_and_dtyp": 182, "version_dict": 182, "with_supported_devic": 182, "with_unsupported_device_and_dtyp": 182, "with_unsupported_devic": 182, "deseri": 196, "custom_object": [196, 197, 203], "nonetyp": [196, 197, 203], "xxxxxxxxxxxxxx": [196, 197, 203], "custom_fn": [196, 197, 203], "gaussian": [196, 198, 201], "138": [196, 198, 201], "165": [196, 198, 201, 1321, 1372, 1375], "166": [196, 198, 201, 1714, 1715, 1719], "159": [196, 198, 201, 1321, 1372, 1375], "703": [196, 209, 212], "683": [196, 209, 212], "408": [196, 209, 212], "313": [196, 209, 212], "437": [196, 209, 212, 1535, 1541], "214": [196, 219, 222], "891": [196, 219, 222], "0768": [196, 224, 227, 450, 541, 544], "231": [196, 224, 227], "363": [196, 224, 227], "invoc": [234, 235], "718281828459045": 236, "newaxi": 236, "pi": 236, "141592653589793": 236, "nestedsequ": [237, 242, 244], "protocol": [237, 238], "_t_co": [237, 238], "ml_framework": [237, 239, 240], "distanc": [237, 239, 240], "adjac": [237, 239, 240], "obj": [237, 242, 244], "typevar": [237, 242, 244], "supportsbufferprotocol": [237, 242, 244], "asarray_handle_nest": 237, "asarray_infer_devic": 237, "asarray_to_native_arrays_and_back": 237, "static_copy_arrai": [237, 249, 251], "row": [237, 258, 259, 1392, 1447, 1450, 1487, 1490, 1492, 1496, 1515, 1519, 1661, 1662, 1665, 1688, 1704, 1707], "interchang": [237, 261, 264, 1552, 1613, 1617], "215": [237, 277, 278], "443469": [237, 277, 278], "15888336": [237, 277, 278], "98024613": [237, 277, 278], "72075441": [237, 277, 278], "y1": [237, 277, 278, 298, 301, 316, 320], "y2": [237, 277, 278, 298, 301, 316, 320], "000e": [237, 277, 278], "120e": [237, 277, 278], "280e": [237, 277, 278], "200e": [237, 277, 278], "600e": [237, 277, 278], "048e": [237, 277, 278], "2000e": [237, 277, 278], "1920e": [237, 277, 278], "1200e": [237, 277, 278], "2768e": [237, 277, 278], "4000e": [237, 277, 278], "2800e": [237, 277, 278], "0000e": [237, 277, 278], "op1": [237, 277, 278], "op2": [237, 277, 278], "98688589": [237, 277, 278], "71321804": [237, 277, 278], "45833531": [237, 277, 278], "22094823": [237, 277, 278], "99985588": [237, 277, 278], "95241962": [237, 277, 278], "04342969": [237, 277, 278], "54150764": [237, 277, 278], "35985143": [237, 277, 278], "43016841": [237, 277, 278], "26442336": [237, 277, 278], "12940149": [237, 277, 278], "34171831": [237, 277, 278], "72444323": [237, 277, 278], "31783778": [237, 277, 278], "97866642": [237, 277, 278], "42537138": [237, 277, 278], "80249153": [237, 277, 278], "135": [237, 277, 278, 1090, 1107, 1110], "24747445": [237, 277, 278], "19416699": [237, 277, 278], "14256517": [237, 277, 278], "77333857": [237, 277, 278], "246": [237, 277, 278], "1309628": [237, 277, 278], "78050455": [237, 277, 278], "17273296": [237, 277, 278], "02852606": [237, 277, 278], "conserv": [237, 280, 283], "cartesian": [237, 280, 283], "ni": [237, 280, 283], "xi": [237, 280, 283], "n1": [237, 280, 283], "n2": [237, 280, 283], "n3": [237, 280, 283], "xv": [237, 280, 283], "yv": [237, 280, 283], "y3": [237, 298, 301, 316, 320], "intdtyp": [237, 298, 301, 316, 320, 321, 354, 394, 397, 408, 413], "defaultdtyp": 321, "defaultfloatdtyp": 321, "defaultintdtyp": 321, "defaultuintdtyp": 321, "uint_dtyp": [321, 325, 355, 409], "as_native_dtyp": 321, "incompat": [321, 338, 341], "data_type_funct": [321, 343, 346], "check_float": 321, "closest_valid_dtyp": 321, "xtype": [321, 349], "ytype": [321, 349], "native_uint16": [321, 349], "floatdtyp": [321, 351, 352], "4294": [321, 351, 352], "967346": [321, 351, 352], "int_dtyp": [321, 354, 408], "4294967346": [321, 354, 355], "default_uint_dtyp": [321, 409, 414], "uintdtyp": [321, 355, 394, 397, 409, 414], "set_default_uint_dtyp": [321, 355, 377, 414], "dtype_bit": 321, "native_bool": [321, 360], "followng": [321, 361, 364], "smallest_norm": [321, 361, 364], "4028235e": [321, 361, 364], "7976931348623157e": [321, 361, 364], "55040e": [321, 361, 364], "encapsul": [321, 372, 375], "314": [321, 372, 375], "9223372036854775808": [321, 372, 375], "9223372036854775807": [321, 372, 375], "65535": [321, 372, 375], "4294967295": [321, 372, 375], "infer_default_dtyp": 321, "native_uint8": [321, 378], "type1": [321, 399], "type2": [321, 399], "array_api_promot": [321, 399, 400], "default_dtype_stack": [321, 406, 411], "unset_default_dtyp": [321, 406], "native_uint64": [321, 406], "ret1": [321, 410], "ret2": [321, 410], "reset": [321, 411, 412, 413, 414, 416, 448, 1090, 1271, 1272, 1273, 1274, 1275, 1276], "unset_default_float_dtyp": 321, "default_float_dtype_stack": [321, 412], "unset_default_int_dtyp": 321, "unset_default_uint_dtyp": 321, "valid_dtyp": 321, "native_float16": [321, 415], "defaultdevic": 416, "__enter__": [416, 417], "_dev": [416, 417], "__exit__": [416, 417], "exc_typ": [416, 417], "exc_val": [416, 417], "exc_tb": [416, 417], "exit": [416, 417], "profil": 416, "save_dir": [416, 418], "as_native_dev": [416, 435], "clear_mem_on_dev": 416, "function_supported_devic": 416, "function_unsupported_devic": 416, "139740789224448": [416, 430], "gpu_is_avail": 416, "physic": [416, 432], "num_ivy_arrays_on_dev": 416, "percent_used_mem_on_dev": 416, "process_specif": [416, 435, 449], "percentag": [416, 435], "ram": [416, 435, 446, 449], "036902561555": [416, 435], "7024003467681645": [416, 435], "7095597456708771": [416, 435], "print_all_ivy_arrays_on_dev": 416, "attr_onli": [416, 436], "chunk": [416, 438, 439, 440], "split_func_cal": 416, "max_chunk_s": [416, 440], "chunk_siz": [416, 440], "input_ax": [416, 440], "output_ax": [416, 440], "feed": [416, 440, 1819, 1820], "fist": [416, 440], "66700032": [416, 446], "589934592": [416, 446], "tpu_is_avail": 416, "unset_default_devic": 416, "used_mem_on_dev": 416, "219563008": [416, 449], "902400346": [416, 449], "525205504": [416, 449], "magnitud": [450, 451, 454, 466, 469, 676, 679, 1392, 1492, 1496, 1497, 1501], "princip": [450, 456, 459, 471, 474, 481, 484], "2019": [450, 466, 469, 566, 569, 631, 634, 676, 679, 1819, 1822], "commut": [450, 466, 469], "809": [450, 476, 479], "199": [450, 476, 479], "569": [450, 476, 479], "733": [450, 476, 479], "notat": [450, 486, 489, 1751, 1762, 1765], "denot": [450, 486, 489, 1283, 1312, 1320], "quadrant": [450, 486, 489], "3\u03c0": [450, 486, 489], "bitwis": [450, 496, 499, 511, 514, 521, 524, 661, 664], "170": [450, 516, 519], "243": [450, 516, 519], "225": [450, 516, 519], "xor": [450, 521, 524, 661, 664], "77": [450, 521, 524, 1392, 1467, 1470, 1751, 1762, 1765], "654": [450, 531, 534], "368": [450, 536, 539], "670": [450, 536, 539], "548": [450, 536, 539], "1490": [450, 536, 539], "0192": [450, 541, 544], "0384": [450, 541, 544], "0576": [450, 541, 544], "115": [450, 541, 544, 701, 704], "698": [450, 546, 549], "accur": [450, 566, 569, 631, 634, 1392, 1482, 1485], "fdlibm": [450, 566, 569, 631, 634], "compliant": [450, 566, 569, 631, 634, 651, 654, 656, 659, 1751, 1766, 1769, 1770, 1773, 1774, 1777, 1783, 1786], "632": [450, 566, 569], "20e": [450, 566, 569], "72e": [450, 566, 569], "greatest": [450, 571, 574, 576, 579], "742": [450, 631, 634], "versu": [450, 696, 699], "52095687": [450, 696, 699], "92457771": [450, 696, 699], "49372482": [450, 696, 699], "22738838": [450, 696, 699], "156": [450, 696, 699], "5877228": [450, 696, 699], "189": [450, 701, 704], "252": [450, 701, 704], "315": [450, 701, 704], "378": [450, 701, 704], "1150": [450, 701, 704], "2890": [450, 701, 704], "172": [450, 701, 704], "229": [450, 701, 704], "487": [450, 701, 704, 1321, 1372, 1375], "344": [450, 701, 704], "decim": [450, 716, 719], "imprecis": [450, 716, 719], "5654": [450, 716, 719], "034": [450, 716, 719], "433": [450, 716, 719, 1283, 1294, 1299, 1319], "932": [450, 726, 729], "746": [450, 726, 729], "443": [450, 726, 729], "657": [450, 726, 729, 1090, 1112, 1115], "indistinguish": [450, 736, 739], "infinit": [450, 736, 739], "32455532": [450, 736, 739], "89897949": [450, 736, 739], "169": [450, 736, 739], "546": [450, 751, 755, 1321, 1372, 1375], "916": [450, 751, 755, 1535, 1536, 1539], "996": [450, 751, 755], "462": [450, 756, 760], "604": [450, 756, 760], "984": [450, 756, 760], "997": [450, 756, 760], "0375": [450, 761, 765], "032": [450, 761, 765], "arg_info": 1090, "inspect": [1090, 1096], "arg_nam": 1090, "recalcul": [1090, 1106], "my_sum": [1090, 1106], "val1": [1090, 1106], "val2": [1090, 1106], "cached_sum": [1090, 1106], "line_eq": [1090, 1106], "slp": [1090, 1106], "itc": [1090, 1106], "cached_line_eq": [1090, 1106], "0353": [1090, 1107, 1110], "424": [1090, 1107, 1110], "58": [1090, 1107, 1110, 1714, 1715, 1719], "176": [1090, 1107, 1110, 1714, 1715, 1719], "339": [1090, 1107, 1110], "271": [1090, 1107, 1110], "168": [1090, 1107, 1110, 1535, 1541], "391": [1090, 1107, 1110], "417": [1090, 1112, 1115], "583": [1090, 1112, 1115], "0667": [1090, 1112, 1115], "267": [1090, 1112, 1115], "131": [1090, 1112, 1115], "263": [1090, 1112, 1115, 1535, 1541], "394": [1090, 1112, 1115, 1661, 1683, 1686], "526": [1090, 1112, 1115], "788": [1090, 1112, 1115], "container_typ": 1090, "default_str": [1090, 1119, 1121], "405": [1090, 1127, 1130], "fourier": [1090, 1140, 1143], "function_supported_devices_and_dtyp": 1090, "function_unsupported_devices_and_dtyp": 1090, "get_all_arrays_in_memori": [1090, 1217], "get_array_mod": [1090, 1228, 1271], "array_mod": [1090, 1158], "set_array_mod": [1090, 1158, 1271], "get_exception_trace_mod": [1090, 1163, 1229, 1272], "exception_trace_mod": [1090, 1159], "set_exception_trace_mod": [1090, 1159, 1272], "get_item": 1090, "get_min_bas": [1090, 1230], "get_min_denomin": [1090, 1231], "get_nestable_mod": [1090, 1232, 1273], "set_nestable_mod": [1090, 1163, 1273], "get_queue_timeout": [1090, 1233, 1274], "set_queue_timeout": [1090, 1169, 1274], "get_referrers_recurs": 1090, "seen_set": [1090, 1170], "local_set": [1090, 1170], "get_show_func_wrapper_trace_mod": [1090, 1235, 1276], "set_show_func_wrapper_trace_mod": [1090, 1171, 1276], "get_tmp_dir": [1090, 1236], "inplace_arrays_support": 1090, "inplace_variables_support": 1090, "isscalar": 1090, "match_kwarg": 1090, "allow_dupl": [1090, 1214], "forkserv": [1090, 1215], "spawn": [1090, 1215], "num_arrays_in_memori": 1090, "print_all_arrays_in_memori": 1090, "garbag": [1090, 1217], "collector": [1090, 1217], "exept": [1090, 1229], "set_min_bas": 1090, "set_min_denomin": 1090, "set_shape_array_mod": [1090, 1238, 1275], "shape_array_mod": [1090, 1234, 1275], "set_tmp_dir": 1090, "tmp_dr": [1090, 1236], "tmp": [1090, 1236], "my_tmp": [1090, 1236], "49999999999975": [1090, 1239, 1242], "5015015015010504": [1090, 1239, 1242], "000444502911705e": [1090, 1239, 1242], "9999999999995j": [1090, 1239, 1242], "to_ivy_shap": 1090, "100000023841858": [1090, 1255, 1258], "200000047683716": [1090, 1255, 1258], "299999952316284": [1090, 1255, 1258], "400000095367432": [1090, 1255, 1258], "599999904632568": [1090, 1255, 1258], "to_native_shap": 1090, "try_else_non": 1090, "dictionai": [1090, 1270], "hemant": [1090, 1270], "unset_array_mod": 1090, "unset_shape_array_mod": [1090, 1271, 1274], "unset_exception_trace_mod": 1090, "unset_nestable_mod": 1090, "unset_queue_timeout": 1090, "unset_show_func_wrapper_trace_mod": 1090, "451": [1090, 1277, 1281], "in_ax": [1090, 1282], "out_ax": [1090, 1282], "thereof": [1090, 1282], "fun": [1090, 1282, 1637, 1649], "summaris": [1090, 1282], "gradienttrack": 1283, "with_grad": [1283, 1284, 1312, 1318], "0125": [1283, 1285, 1288], "171": [1283, 1285, 1288], "retain_grad": [1283, 1293], "xs_grad_idx": [1283, 1293], "ret_grad_idx": [1283, 1293], "func_ret": [1283, 1293], "retain": [1283, 1293, 1808], "933": [1283, 1294, 1299, 1319], "jac": 1283, "jac_fn": [1283, 1299], "639": [1283, 1300, 1303], "361": [1283, 1300, 1303, 1661, 1672, 1675], "set_with_grad": [1283, 1318, 1320], "with_grads_stack": [1283, 1312, 1318, 1320], "unset_with_grad": 1283, "value_and_grad": 1283, "value_grad": [1283, 1319], "423332": [1283, 1319], "channel_last": [1321, 1322, 1352, 1353], "feature_group_count": [1321, 1322, 1352, 1353], "x_dilat": [1321, 1322, 1352], "dhwio": [1321, 1342, 1345], "258": [1321, 1347, 1350], "channel_first": [1321, 1352, 1353, 1370], "conv_general_transpos": 1321, "deconv_length": 1321, "stride_s": [1321, 1354], "kernel_s": [1321, 1354], "depthwis": [1321, 1355, 1358], "hwi": [1321, 1355, 1358], "randomli": [1321, 1360, 1363, 1365, 1368], "bernoulli": [1321, 1360, 1363, 1365, 1368], "ed": [1321, 1365, 1368], "get_x_data_format": 1321, "handle_pad": 1321, "incom": [1321, 1372, 1375], "666": [1321, 1372, 1375, 1392, 1447, 1450], "4269": [1321, 1372, 1375], "911": [1321, 1372, 1375], "157": [1321, 1372, 1375], "753": [1321, 1372, 1375], "101": [1321, 1372, 1375, 1392, 1437, 1440, 1637, 1644], "545": [1321, 1372, 1375, 1661, 1677, 1680], "547": [1321, 1372, 1375], "124": [1321, 1372, 1375], "852": [1321, 1372, 1375], "963": [1321, 1372, 1375], "108": [1321, 1372, 1375, 1751, 1762, 1765], "196": [1321, 1372, 1375], "306": [1321, 1372, 1375], "num_queri": [1321, 1382, 1385, 1387, 1390], "query_dim": [1321, 1382, 1385], "measur": [1321, 1382, 1385], "num_kei": [1321, 1382, 1385, 1387, 1390], "cont_feat_dim": [1321, 1382, 1385], "numhead": [1321, 1382, 1385], "head_dim": [1321, 1382, 1385], "out_feat_dim": [1321, 1382, 1385], "5678761": [1321, 1382, 1385], "65441847": [1321, 1382, 1385], "18969631": [1321, 1382, 1385], "40131447": [1321, 1382, 1385], "19991851": [1321, 1382, 1385], "40000153": [1321, 1382, 1385], "68589532": [1321, 1382, 1385], "40129396": [1321, 1382, 1385], "40000817": [1321, 1382, 1385], "31219625": [1321, 1382, 1385], "25698996": [1321, 1382, 1385], "31022024": [1321, 1382, 1385], "16286421": [1321, 1382, 1385], "30296469": [1321, 1382, 1385], "16460133": [1321, 1382, 1385], "59497029": [1321, 1382, 1385], "40046397": [1321, 1382, 1385], "14009905": [1321, 1382, 1385], "81691194": [1321, 1382, 1385], "10732293": [1321, 1382, 1385], "40012637": [1321, 1382, 1385], "73519301": [1321, 1382, 1385], "40021262": [1321, 1382, 1385], "7615059": [1321, 1382, 1385], "40326414": [1321, 1382, 1385], "30141067": [1321, 1382, 1385], "19610119": [1321, 1382, 1385], "32028484": [1321, 1382, 1385], "1708746": [1321, 1382, 1385], "34100914": [1321, 1382, 1385], "14920235": [1321, 1382, 1385], "40000009": [1321, 1382, 1385], "73333335": [1321, 1382, 1385], "feat_dim": [1321, 1387, 1390], "score": [1321, 1387, 1390], "axisa": [1392, 1398, 1401], "axisb": [1392, 1398, 1401], "axisc": [1392, 1398, 1401], "293": [1392, 1403, 1406], "46997": [1392, 1403, 1406], "superdiagon": [1392, 1408, 1411], "subdiagon": [1392, 1408, 1411], "eigendecomposit": [1392, 1418, 1421, 1422, 1425], "qlq\u1d40": [1392, 1418, 1421, 1422, 1425], "orthogon": [1392, 1418, 1421, 1422, 1425], "hermitian": [1392, 1418, 1421, 1422, 1425, 1427, 1430, 1492, 1496], "eigenvector": [1392, 1418, 1421, 1422, 1425], "45033181e": [1392, 1427, 1430], "02829754e": [1392, 1427, 1430], "54220343e": [1392, 1427, 1430], "12647155e": [1392, 1427, 1430], "38447177e": [1392, 1427, 1430], "56155300e": [1392, 1427, 1430], "26794919": [1392, 1427, 1430], "7320509": [1392, 1427, 1430], "array_lik": [1392, 1432, 1435, 1467, 1470], "0012": [1392, 1437, 1440], "00342": [1392, 1437, 1440], "000565": [1392, 1437, 1440], "0104": [1392, 1437, 1440], "000981": [1392, 1437, 1440], "00282": [1392, 1437, 1440], "000766": [1392, 1437, 1440], "0322": [1392, 1437, 1440], "00237": [1392, 1437, 1440], "000151": [1392, 1437, 1440], "00101": [1392, 1437, 1440], "00019": [1392, 1437, 1440], "0214": [1392, 1437, 1440], "00171": [1392, 1437, 1440], "0107": [1392, 1437, 1440], "0167": [1392, 1437, 1440], "0472": [1392, 1437, 1440], "0536": [1392, 1437, 1440], "0177": [1392, 1437, 1440], "000429": [1392, 1437, 1440], "00762": [1392, 1437, 1440], "prepend": [1392, 1442, 1445, 1552, 1568, 1571], "frobeniu": [1392, 1447, 1450], "nuclear": [1392, 1447, 1450], "induc": [1392, 1447, 1450], "47722558": [1392, 1447, 1450], "776": [1392, 1447, 1450], "6000004": [1392, 1447, 1450], "112": [1392, 1467, 1470, 1751, 1762, 1765], "moor": [1392, 1472, 1475], "penros": [1392, 1472, 1475], "orthonorm": [1392, 1477, 1480, 1492, 1496], "logsabsdet": [1392, 1482, 1485], "subject": [1392, 1482, 1485], "usvh": [1392, 1492, 1496], "vh": [1392, 1492, 1496], "et": [1392, 1492, 1496], "cetera": [1392, 1492, 1496], "reconstructed_x": [1392, 1492, 1496], "ss": [1392, 1497, 1501], "615": [1392, 1497, 1501, 1714, 1715, 1719], "866": [1392, 1497, 1501], "864": [1392, 1497, 1501], "0x": [1392, 1515, 1519], "alexandr": [1392, 1515, 1519], "theophil": [1392, 1515, 1519], "skew": [1392, 1530, 1534], "symmetric_matrix": [1392, 1530, 1534], "cross_product": [1392, 1530, 1534], "binary_cross_entropy_with_logit": 1535, "pos_weight": [1535, 1541], "463": [1535, 1541], "022": [1535, 1541], "059": [1535, 1541], "601": [1535, 1541], "015": [1535, 1541], "868": [1535, 1541], "908": [1535, 1541], "672": [1535, 1541], "002": [1535, 1541], "029": [1535, 1541], "541": [1535, 1541], "144": [1535, 1541, 1714, 1715, 1719], "953": [1535, 1541], "027": [1535, 1541], "822": [1535, 1541], "153": [1535, 1541], "006": [1535, 1541], "205": [1535, 1541], "35667497": [1535, 1542, 1545], "793291": [1535, 1547, 1550], "512926": [1535, 1547, 1550], "before_1": [1552, 1563, 1566, 1628, 1632], "after_1": [1552, 1563, 1566, 1628, 1632], "before_n": [1552, 1563, 1566, 1628, 1632], "after_n": [1552, 1563, 1566, 1628, 1632], "squeezabl": [1552, 1603, 1606], "famili": [1552, 1608, 1611], "intxx": [1552, 1608, 1611], "floatxx": [1552, 1608, 1611], "retwaitin": [1552, 1618, 1622], "fomaml_step": 1633, "inner_cost_fn": [1633, 1634, 1635], "outer_cost_fn": [1633, 1634, 1635], "inner_grad_step": [1633, 1634, 1635, 1636], "inner_learning_r": [1633, 1634, 1635, 1636], "inner_optimization_step": [1633, 1634, 1635, 1636], "inner_batch_fn": [1633, 1634, 1635], "outer_batch_fn": [1633, 1634, 1635], "average_across_step": [1633, 1634, 1635], "inner_v": [1633, 1634, 1635], "keep_inner_v": [1633, 1634, 1635], "outer_v": [1633, 1634, 1635], "keep_outer_v": [1633, 1634, 1635], "return_inner_v": [1633, 1634, 1635, 1636], "num_task": [1633, 1634, 1635, 1636], "maml": [1633, 1634, 1635], "recev": [1633, 1634, 1635], "0x7f95435a69d0": [1633, 1634, 1635, 1636], "maml_step": 1633, "rece": [1633, 1635], "reptile_step": 1633, "cost_fn": [1633, 1636], "reptil": [1633, 1636], "receivng": [1633, 1636], "all_nested_indic": 1637, "include_nest": [1637, 1638], "_index": [1637, 1638, 1649], "_base": [1637, 1638, 1648, 1649], "extra_nest_typ": [1637, 1638, 1639, 1648, 1649, 1650], "copy_nest": 1637, "to_mut": [1637, 1639, 1650], "mutabl": [1637, 1639, 1650], "copied_nest": [1637, 1639], "1337": [1637, 1639], "duplicate_array_index_chain": 1637, "insert_into_nest_at_index": 1637, "insert_into_nest_at_indic": 1637, "special_squar": [1637, 1644], "6666666666666667": [1637, 1644], "special_pow": [1637, 1644], "linear_model": [1637, 1644], "map_nest_at_index": 1637, "hh": [1637, 1645], "map_nest_at_indic": 1637, "ub": [1637, 1646], "tb": [1637, 1646], "multi_index_nest": 1637, "nested_ani": 1637, "check_nest": [1637, 1648, 1649], "conditon": [1637, 1648, 1649], "nested_argwher": 1637, "stop_after_n_found": [1637, 1649], "nested_indic": [1637, 1649], "_depth": [1637, 1650], "_tuple_check_fn": [1637, 1650], "_list_check_fn": [1637, 1650], "_dict_check_fn": [1637, 1650], "nested_multi_map": 1637, "nest0": [1637, 1651], "ivy_arrai": [1637, 1651], "unappli": [1637, 1651], "prune_nest_at_index": 1637, "prune_nest_at_indic": 1637, "set_nest_at_index": 1637, "set_nest_at_indic": 1637, "111": [1637, 1655], "xyz": [1637, 1655], "pqr": [1637, 1655], "mini": [1656, 1657, 1660], "217": [1656, 1657, 1660], "uniformli": [1661, 1667, 1670, 1677, 1680], "22346112": [1661, 1672, 1675], "0922": [1661, 1672, 1675], "596": [1661, 1672, 1675], "247": [1661, 1672, 1675], "627": [1661, 1672, 1675], "9213753": [1661, 1672, 1675], "12818667": [1661, 1672, 1675], "799": [1661, 1672, 1675], "469": [1661, 1672, 1675], "287": [1661, 1672, 1675], "0366": [1661, 1672, 1675], "26431865": [1661, 1677, 1680], "475": [1661, 1677, 1680], "878": [1661, 1677, 1680], "861": [1661, 1677, 1680], "929": [1661, 1677, 1680], "789": [1661, 1677, 1680], "519": [1661, 1677, 1680], "0435": [1661, 1677, 1680], "381": [1661, 1677, 1680, 1714, 1715, 1719], "4608004": [1661, 1677, 1680], "8458502": [1661, 1677, 1680], "x_j": [1714, 1715, 1719, 1720, 1724, 1725, 1729, 1730, 1734], "aggreg": [1714, 1715, 1719], "fourth": [1714, 1715, 1719], "607": [1714, 1715, 1719], "735": [1714, 1715, 1719], "0396": [1714, 1715, 1719], "828": [1714, 1715, 1719], "40501155": [1714, 1715, 1719], "77361575": [1714, 1715, 1719], "97776199": [1714, 1715, 1719], "36831157": [1714, 1715, 1719], "89148434": [1714, 1715, 1719], "9512272": [1714, 1715, 1719], "67542176": [1714, 1715, 1719], "41985657": [1714, 1715, 1719], "23478023": [1714, 1715, 1719], "1141": [1714, 1715, 1719], "8101": [1714, 1715, 1719], "9298": [1714, 1715, 1719], "8460": [1714, 1715, 1719], "2119": [1714, 1715, 1719], "3519": [1714, 1715, 1719], "6252": [1714, 1715, 1719], "4033": [1714, 1715, 1719], "7443": [1714, 1715, 1719], "2577": [1714, 1715, 1719], "3707": [1714, 1715, 1719], "0545": [1714, 1715, 1719], "3238": [1714, 1715, 1719], "5944": [1714, 1715, 1719], "0775": [1714, 1715, 1719], "4327": [1714, 1715, 1719], "889": [1714, 1715, 1719], "175": [1714, 1715, 1719], "763": [1714, 1715, 1719], "071": [1714, 1715, 1719], "262": [1714, 1715, 1719], "114": [1714, 1715, 1719], "349": [1714, 1715, 1719], "594": [1714, 1715, 1719], "335": [1714, 1715, 1719], "457": [1714, 1715, 1719], "827": [1714, 1715, 1719], "209": [1714, 1715, 1719], "einstein": [1751, 1762, 1765], "summat": [1751, 1762, 1765], "117": [1751, 1762, 1765], "sentinel": [1751, 1766, 1769, 1774, 1777], "90000004": [1751, 1770, 1773], "statistical_funct": [1751, 1783, 1786], "07472222": [1751, 1792, 1796], "00666667": [1751, 1792, 1796], "08966666": [1751, 1792, 1796], "simplicit": [1797, 1798, 1801, 1803, 1806], "nail": 1808, "funtion": 1808, "asset": 1808, "functiona": 1808, "scientist": 1808, "deploi": [1808, 1817, 1818, 1819, 1821, 1825], "correl": 1808, "analyz": 1808, "ai": [1809, 1817, 1821], "colab": 1809, "interact": [1809, 1818, 1819, 1824], "sharp": 1809, "favorit": 1809, "jax_concat": 1809, "tf_concat": 1809, "np_concat": 1809, "torch_concat": 1809, "get_devic": 1809, "reduce_prod": 1809, "reduce_sum": 1809, "gradient_imag": 1809, "indices_wher": 1809, "bilinear_resampl": 1809, "stack_imag": 1809, "neural_net": 1809, "floormod": 1809, "articl": 1809, "lenton2021ivi": 1809, "inter": 1809, "lenton": 1809, "daniel": 1809, "pardo": 1809, "fabio": 1809, "falck": 1809, "fabian": 1809, "jame": 1809, "stephen": 1809, "clark": 1809, "ronald": 1809, "journal": 1809, "arxiv": 1809, "preprint": 1809, "2102": 1809, "02886": 1809, "conceptu": [1815, 1820], "broken": [1815, 1819], "tracer": 1815, "infrastructur": [1815, 1821, 1822], "vendor": [1815, 1821], "complimentari": [1815, 1825], "acycl": [1815, 1820], "insert_numb": 1816, "insert_t": 1816, "scaffold": [1817, 1825], "heart": 1817, "toolchain": [1817, 1822], "intermedi": [1817, 1818, 1819, 1820, 1825], "ir": [1817, 1820, 1825], "assembli": [1817, 1824, 1825], "idl": 1817, "middl": 1817, "emit": 1817, "gnu": [1817, 1822], "gcc": [1817, 1824], "broader": 1817, "heterogen": 1817, "aid": 1817, "coprocessor": 1817, "programm": [1817, 1824], "gate": 1817, "onednn": 1817, "complementari": [1817, 1825], "sit": [1817, 1820, 1825], "tandem": 1817, "possess": 1817, "underneath": 1817, "export": [1818, 1825], "khrono": [1818, 1824], "appl": 1818, "coremltool": 1818, "albeit": 1818, "promin": 1819, "abbrevi": 1819, "laboratori": 1819, "proprietari": [1819, 1823, 1824], "mathwork": 1819, "commerci": 1819, "1984": 1819, "plot": 1819, "toolbox": 1819, "mupad": 1819, "simulink": 1819, "graphic": [1819, 1823, 1824], "simul": 1819, "embed": 1819, "million": [1819, 1822], "worldwid": 1819, "scienc": [1819, 1821], "econom": 1819, "2001": 1819, "scientif": 1819, "od": 1819, "solver": 1819, "cython": 1819, "friendli": 1819, "2002": 1819, "lua": 1819, "luajit": 1819, "idiap": 1819, "epfl": 1819, "2005": 1819, "numarrai": 1819, "cpython": 1819, "partli": 1819, "multidimension": 1819, "2007": 1819, "classif": 1819, "regress": [1819, 1826], "forest": 1819, "boost": 1819, "dbscan": 1819, "inbuilt": 1819, "esqu": 1819, "aesara": 1819, "2008": 1819, "datafram": 1819, "critic": [1819, 1825], "2012": 1819, "Its": 1819, "polymorph": 1819, "parallel": [1819, 1823, 1824], "mpi": 1819, "openmp": 1819, "glue": 1819, "jaot": 1819, "nasa": 1819, "cern": 1819, "climat": 1819, "allianc": 1819, "influenti": 1819, "2014": 1819, "analyt": [1819, 1821, 1825], "scala": 1819, "ship": 1819, "forgiv": 1819, "decemb": 1819, "announc": 1819, "transit": 1819, "mainten": 1819, "v7": 1819, "meaning": 1819, "2016": 1819, "imper": 1819, "fast": 1819, "amazon": 1819, "traction": 1819, "cognit": [1819, 1826], "toolkit": [1819, 1820, 1826], "grade": 1819, "realiz": 1819, "dnn": 1819, "cnn": 1819, "rnn": 1819, "stochast": 1819, "sgd": 1819, "backpropag": 1819, "succumb": 1819, "came": 1819, "monitor": 1819, "practition": [1819, 1823, 1824, 1825], "hobbyist": 1819, "tremend": 1819, "ecosystem": 1819, "gear": 1819, "batteri": 1819, "zygot": 1819, "jl": 1819, "workload": 1819, "daggerflux": 1819, "frontier": 1819, "hessian": 1819, "2018": 1819, "lightweight": [1819, 1826], "shortcom": 1819, "eas": 1819, "barrier": 1819, "inexperienc": 1819, "underdevelop": 1819, "fanat": 1819, "ounc": 1819, "infanc": 1819, "emerg": 1819, "nich": 1819, "introduct": 1819, "lite": 1819, "enterpris": 1819, "reinvent": [1819, 1821], "inertia": 1819, "haven": 1819, "creator": [1819, 1821], "paszk": 1819, "hi": 1819, "safeti": 1819, "bulk": 1819, "haskel": 1819, "dataflow": 1820, "distil": 1820, "essenc": [1820, 1825], "enclos": 1820, "scope": [1820, 1824], "trace_modul": 1820, "scriptfunct": 1820, "scriptmodul": 1820, "fake": 1820, "proxi": 1820, "site": 1820, "graphmodul": 1820, "travi": 1821, "oliph": 1821, "leader": 1821, "cornerston": 1821, "numba": 1821, "numfocu": 1821, "pydata": 1821, "confer": 1821, "consult": 1821, "servic": 1821, "expertis": 1821, "devop": 1821, "mlop": 1821, "dashboard": 1821, "startup": 1821, "mlir": [1821, 1822, 1825], "Their": 1821, "held": 1821, "privileg": 1821, "presum": 1821, "llvm": [1821, 1824], "founder": 1821, "tvm": [1821, 1825], "sustain": 1821, "empow": 1821, "har": 1821, "burden": 1821, "benchmark": 1821, "convention": 1822, "precompil": 1822, "executor": 1822, "exploit": 1822, "julia": [1822, 1825], "fsf": 1822, "gpl": 1822, "biggest": [1822, 1825], "nvidia": [1823, 1824], "conduct": 1823, "throughput": 1823, "autotun": 1823, "consumpt": 1823, "gpgpu": 1823, "talk": 1824, "classic": 1824, "sycl": 1824, "dpc": 1824, "processor": 1824, "x86": 1824, "oneapi": 1824, "ia": 1824, "aka": 1824, "xeon": 1824, "gen9": 1824, "xe": 1824, "card": 1824, "arria": 1824, "gx": 1824, "fpga": 1824, "tune": [1824, 1825], "lofti": 1825, "ambit": 1825, "realm": 1825, "bedrock": 1825, "flux": 1825, "bite": 1825, "chew": 1825, "eagerpi": 1825, "tensorli": 1825, "thinc": 1825, "neuropod": 1825, "exhibit": 1825, "emploi": 1825, "fx": 1825, "retrain": 1825, "wider": 1825, "closer": 1825, "greatli": 1825, "challeng": 1825, "modular": 1825, "anywher": 1825, "switch": 1826, "theano": 1826, "plaidml": 1826, "partial_svd": 1826, "tucker_mode_dot": 1826, "excel": 1826, "subsystem": 1826}, "objects": {"ivy.array": [[46, 0, 0, "-", "activations"], [48, 0, 0, "-", "array"], [50, 0, 0, "-", "conversions"], [55, 0, 0, "-", "creation"], [57, 0, 0, "-", "data_type"], [59, 0, 0, "-", "device"], [61, 0, 0, "-", "elementwise"], [64, 0, 0, "-", "general"], [66, 0, 0, "-", "gradients"], [68, 0, 0, "-", "image"], [70, 0, 0, "-", "layers"], [72, 0, 0, "-", "linear_algebra"], [74, 0, 0, "-", "losses"], [76, 0, 0, "-", "manipulation"], [78, 0, 0, "-", "norms"], [80, 0, 0, "-", "random"], [82, 0, 0, "-", "searching"], [84, 0, 0, "-", "set"], [86, 0, 0, "-", "sorting"], [88, 0, 0, "-", "statistical"], [90, 0, 0, "-", "utility"], [92, 0, 0, "-", "wrapping"]], "ivy.array.activations": [[47, 1, 1, "", "ArrayWithActivations"]], "ivy.array.activations.ArrayWithActivations": [[47, 2, 1, "", "gelu"], [47, 2, 1, "", "leaky_relu"], [47, 2, 1, "", "log_softmax"], [47, 2, 1, "", "relu"], [47, 2, 1, "", "sigmoid"], [47, 2, 1, "", "softmax"], [47, 2, 1, "", "softplus"]], "ivy.array.array": [[49, 1, 1, "", "Array"]], "ivy.array.array.Array": [[49, 3, 1, "", "T"], [49, 2, 1, "", "__abs__"], [49, 2, 1, "", "__add__"], [49, 2, 1, "", "__eq__"], [49, 2, 1, "", "__ge__"], [49, 2, 1, "", "__gt__"], [49, 2, 1, "", "__init__"], [49, 2, 1, "", "__le__"], [49, 2, 1, "", "__lt__"], [49, 2, 1, "", "__ne__"], [49, 2, 1, "", "__pow__"], [49, 2, 1, "", "__radd__"], [49, 2, 1, "", "__rrshift__"], [49, 2, 1, "", "__rshift__"], [49, 2, 1, "", "__rsub__"], [49, 2, 1, "", "__sub__"], [49, 2, 1, "", "__truediv__"], [49, 2, 1, "", "__xor__"], [49, 3, 1, "", "data"], [49, 3, 1, "", "device"], [49, 3, 1, "", "dtype"], [49, 3, 1, "", "mT"], [49, 3, 1, "", "ndim"], [49, 3, 1, "", "shape"], [49, 3, 1, "", "size"]], "ivy.array.conversions": [[51, 4, 1, "", "args_to_ivy"], [52, 4, 1, "", "args_to_native"], [53, 4, 1, "", "to_ivy"], [54, 4, 1, "", "to_native"]], "ivy.array.creation": [[56, 1, 1, "", "ArrayWithCreation"]], "ivy.array.creation.ArrayWithCreation": [[56, 2, 1, "", "asarray"], [56, 2, 1, "", "copy_array"], [56, 2, 1, "", "empty_like"], [56, 2, 1, "", "from_dlpack"], [56, 2, 1, "", "full_like"], [56, 2, 1, "", "linspace"], [56, 2, 1, "", "meshgrid"], [56, 2, 1, "", "native_array"], [56, 2, 1, "", "one_hot"], [56, 2, 1, "", "ones_like"], [56, 2, 1, "", "tril"], [56, 2, 1, "", "triu"], [56, 2, 1, "", "zeros_like"]], "ivy.array.data_type": [[58, 1, 1, "", "ArrayWithDataTypes"]], "ivy.array.data_type.ArrayWithDataTypes": [[58, 2, 1, "", "astype"], [58, 2, 1, "", "broadcast_arrays"], [58, 2, 1, "", "broadcast_to"], [58, 2, 1, "", "can_cast"], [58, 2, 1, "", "dtype"], [58, 2, 1, "", "finfo"], [58, 2, 1, "", "iinfo"], [58, 2, 1, "", "is_bool_dtype"], [58, 2, 1, "", "is_float_dtype"], [58, 2, 1, "", "is_int_dtype"], [58, 2, 1, "", "is_uint_dtype"], [58, 2, 1, "", "result_type"]], "ivy.array.device": [[60, 1, 1, "", "ArrayWithDevice"]], "ivy.array.device.ArrayWithDevice": [[60, 2, 1, "", "dev"], [60, 2, 1, "", "to_device"]], "ivy.array.elementwise": [[62, 1, 1, "", "ArrayWithElementwise"]], "ivy.array.elementwise.ArrayWithElementwise": [[62, 2, 1, "", "abs"], [62, 2, 1, "", "acos"], [62, 2, 1, "", "acosh"], [62, 2, 1, "", "add"], [62, 2, 1, "", "asin"], [62, 2, 1, "", "asinh"], [62, 2, 1, "", "atan"], [62, 2, 1, "", "atan2"], [62, 2, 1, "", "atanh"], [62, 2, 1, "", "bitwise_and"], [62, 2, 1, "", "bitwise_invert"], [62, 2, 1, "", "bitwise_left_shift"], [62, 2, 1, "", "bitwise_or"], [62, 2, 1, "", "bitwise_right_shift"], [62, 2, 1, "", "bitwise_xor"], [62, 2, 1, "", "ceil"], [62, 2, 1, "", "cos"], [62, 2, 1, "", "cosh"], [62, 2, 1, "", "deg2rad"], [62, 2, 1, "", "divide"], [62, 2, 1, "", "equal"], [62, 2, 1, "", "erf"], [62, 2, 1, "", "exp"], [62, 2, 1, "", "expm1"], [62, 2, 1, "", "floor"], [62, 2, 1, "", "floor_divide"], [62, 2, 1, "", "greater"], [62, 2, 1, "", "greater_equal"], [62, 2, 1, "", "isfinite"], [62, 2, 1, "", "isinf"], [62, 2, 1, "", "isnan"], [62, 2, 1, "", "isreal"], [62, 2, 1, "", "less"], [62, 2, 1, "", "less_equal"], [62, 2, 1, "", "log"], [62, 2, 1, "", "log10"], [62, 2, 1, "", "log1p"], [62, 2, 1, "", "log2"], [62, 2, 1, "", "logaddexp"], [62, 2, 1, "", "logical_and"], [62, 2, 1, "", "logical_not"], [62, 2, 1, "", "logical_or"], [62, 2, 1, "", "logical_xor"], [62, 2, 1, "", "maximum"], [62, 2, 1, "", "minimum"], [62, 2, 1, "", "multiply"], [62, 2, 1, "", "negative"], [62, 2, 1, "", "not_equal"], [62, 2, 1, "", "positive"], [62, 2, 1, "", "pow"], [62, 2, 1, "", "rad2deg"], [62, 2, 1, "", "reciprocal"], [62, 2, 1, "", "remainder"], [62, 2, 1, "", "round"], [62, 2, 1, "", "sign"], [62, 2, 1, "", "sin"], [62, 2, 1, "", "sinh"], [62, 2, 1, "", "sqrt"], [62, 2, 1, "", "square"], [62, 2, 1, "", "subtract"], [62, 2, 1, "", "tan"], [62, 2, 1, "", "tanh"], [62, 2, 1, "", "trunc"], [62, 2, 1, "", "trunc_divide"]], "ivy.array.experimental": [[63, 1, 1, "", "ArrayWithActivationsExperimental"], [63, 1, 1, "", "ArrayWithConversionsExperimental"], [63, 1, 1, "", "ArrayWithCreationExperimental"], [63, 1, 1, "", "ArrayWithData_typeExperimental"], [63, 1, 1, "", "ArrayWithDeviceExperimental"], [63, 1, 1, "", "ArrayWithElementWiseExperimental"], [63, 1, 1, "", "ArrayWithGeneralExperimental"], [63, 1, 1, "", "ArrayWithGradientsExperimental"], [63, 1, 1, "", "ArrayWithImageExperimental"], [63, 1, 1, "", "ArrayWithLayersExperimental"], [63, 1, 1, "", "ArrayWithLinearAlgebraExperimental"], [63, 1, 1, "", "ArrayWithLossesExperimental"], [63, 1, 1, "", "ArrayWithManipulationExperimental"], [63, 1, 1, "", "ArrayWithNormsExperimental"], [63, 1, 1, "", "ArrayWithRandomExperimental"], [63, 1, 1, "", "ArrayWithSearchingExperimental"], [63, 1, 1, "", "ArrayWithSetExperimental"], [63, 1, 1, "", "ArrayWithSortingExperimental"], [63, 1, 1, "", "ArrayWithStatisticalExperimental"], [63, 1, 1, "", "ArrayWithUtilityExperimental"]], "ivy.array.experimental.ArrayWithElementWiseExperimental": [[63, 2, 1, "", "allclose"], [63, 2, 1, "", "count_nonzero"], [63, 2, 1, "", "diff"], [63, 2, 1, "", "exp2"], [63, 2, 1, "", "fix"], [63, 2, 1, "", "float_power"], [63, 2, 1, "", "fmax"], [63, 2, 1, "", "fmod"], [63, 2, 1, "", "gcd"], [63, 2, 1, "", "gradient"], [63, 2, 1, "", "isclose"], [63, 2, 1, "", "isneginf"], [63, 2, 1, "", "isposinf"], [63, 2, 1, "", "lcm"], [63, 2, 1, "", "logaddexp2"], [63, 2, 1, "", "nan_to_num"], [63, 2, 1, "", "nansum"], [63, 2, 1, "", "nextafter"], [63, 2, 1, "", "signbit"], [63, 2, 1, "", "sinc"], [63, 2, 1, "", "trapz"], [63, 2, 1, "", "zeta"]], "ivy.array.experimental.ArrayWithGeneralExperimental": [[63, 2, 1, "", "isin"]], "ivy.array.experimental.ArrayWithLayersExperimental": [[63, 2, 1, "", "avg_pool1d"], [63, 2, 1, "", "avg_pool2d"], [63, 2, 1, "", "avg_pool3d"], [63, 2, 1, "", "dct"], [63, 2, 1, "", "max_pool1d"], [63, 2, 1, "", "max_pool2d"], [63, 2, 1, "", "max_pool3d"]], "ivy.array.experimental.ArrayWithLinearAlgebraExperimental": [[63, 2, 1, "", "diagflat"], [63, 2, 1, "", "kron"]], "ivy.array.experimental.ArrayWithManipulationExperimental": [[63, 2, 1, "", "atleast_1d"], [63, 2, 1, "", "atleast_2d"], [63, 2, 1, "", "atleast_3d"], [63, 2, 1, "", "dsplit"], [63, 2, 1, "", "dstack"], [63, 2, 1, "", "flatten"], [63, 2, 1, "", "fliplr"], [63, 2, 1, "", "flipud"], [63, 2, 1, "", "heaviside"], [63, 2, 1, "", "hsplit"], [63, 2, 1, "", "hstack"], [63, 2, 1, "", "i0"], [63, 2, 1, "", "moveaxis"], [63, 2, 1, "", "pad"], [63, 2, 1, "", "rot90"], [63, 2, 1, "", "take_along_axis"], [63, 2, 1, "", "top_k"], [63, 2, 1, "", "vsplit"], [63, 2, 1, "", "vstack"]], "ivy.array.experimental.ArrayWithRandomExperimental": [[63, 2, 1, "", "dirichlet"]], "ivy.array.experimental.ArrayWithSortingExperimental": [[63, 2, 1, "", "msort"]], "ivy.array.experimental.ArrayWithStatisticalExperimental": [[63, 2, 1, "", "median"], [63, 2, 1, "", "nanmean"], [63, 2, 1, "", "quantile"], [63, 2, 1, "", "unravel_index"]], "ivy.array.general": [[65, 1, 1, "", "ArrayWithGeneral"]], "ivy.array.general.ArrayWithGeneral": [[65, 2, 1, "", "all_equal"], [65, 2, 1, "", "array_equal"], [65, 2, 1, "", "assert_supports_inplace"], [65, 2, 1, "", "clip_matrix_norm"], [65, 2, 1, "", "clip_vector_norm"], [65, 2, 1, "", "default"], [65, 2, 1, "", "einops_rearrange"], [65, 2, 1, "", "einops_reduce"], [65, 2, 1, "", "einops_repeat"], [65, 2, 1, "", "exists"], [65, 2, 1, "", "fourier_encode"], [65, 2, 1, "", "gather"], [65, 2, 1, "", "gather_nd"], [65, 2, 1, "", "get_num_dims"], [65, 2, 1, "", "has_nans"], [65, 2, 1, "", "inplace_decrement"], [65, 2, 1, "", "inplace_increment"], [65, 2, 1, "", "inplace_update"], [65, 2, 1, "", "is_array"], [65, 2, 1, "", "is_ivy_array"], [65, 2, 1, "", "is_ivy_container"], [65, 2, 1, "", "is_native_array"], [65, 2, 1, "", "scatter_flat"], [65, 2, 1, "", "scatter_nd"], [65, 2, 1, "", "stable_divide"], [65, 2, 1, "", "stable_pow"], [65, 2, 1, "", "supports_inplace_updates"], [65, 2, 1, "", "to_list"], [65, 2, 1, "", "to_numpy"], [65, 2, 1, "", "to_scalar"], [65, 2, 1, "", "value_is_nan"]], "ivy.array.gradients": [[67, 1, 1, "", "ArrayWithGradients"]], "ivy.array.gradients.ArrayWithGradients": [[67, 2, 1, "", "adam_step"], [67, 2, 1, "", "adam_update"], [67, 2, 1, "", "gradient_descent_update"], [67, 2, 1, "", "lamb_update"], [67, 2, 1, "", "lars_update"], [67, 2, 1, "", "optimizer_update"], [67, 2, 1, "", "stop_gradient"]], "ivy.array.image": [[69, 1, 1, "", "ArrayWithImage"]], "ivy.array.layers": [[71, 1, 1, "", "ArrayWithLayers"]], "ivy.array.layers.ArrayWithLayers": [[71, 2, 1, "", "conv1d"], [71, 2, 1, "", "conv1d_transpose"], [71, 2, 1, "", "conv2d"], [71, 2, 1, "", "conv3d"], [71, 2, 1, "", "conv3d_transpose"], [71, 2, 1, "", "depthwise_conv2d"], [71, 2, 1, "", "dropout"], [71, 2, 1, "", "dropout1d"], [71, 2, 1, "", "linear"], [71, 2, 1, "", "lstm_update"], [71, 2, 1, "", "multi_head_attention"], [71, 2, 1, "", "scaled_dot_product_attention"]], "ivy.array.linear_algebra": [[73, 1, 1, "", "ArrayWithLinearAlgebra"]], "ivy.array.linear_algebra.ArrayWithLinearAlgebra": [[73, 2, 1, "", "cholesky"], [73, 2, 1, "", "cross"], [73, 2, 1, "", "det"], [73, 2, 1, "", "diag"], [73, 2, 1, "", "diagonal"], [73, 2, 1, "", "eig"], [73, 2, 1, "", "eigh"], [73, 2, 1, "", "eigvalsh"], [73, 2, 1, "", "inner"], [73, 2, 1, "", "inv"], [73, 2, 1, "", "matmul"], [73, 2, 1, "", "matrix_norm"], [73, 2, 1, "", "matrix_power"], [73, 2, 1, "", "matrix_rank"], [73, 2, 1, "", "matrix_transpose"], [73, 2, 1, "", "outer"], [73, 2, 1, "", "pinv"], [73, 2, 1, "", "qr"], [73, 2, 1, "", "slogdet"], [73, 2, 1, "", "solve"], [73, 2, 1, "", "svd"], [73, 2, 1, "", "svdvals"], [73, 2, 1, "", "tensordot"], [73, 2, 1, "", "tensorsolve"], [73, 2, 1, "", "trace"], [73, 2, 1, "", "vander"], [73, 2, 1, "", "vecdot"], [73, 2, 1, "", "vector_norm"], [73, 2, 1, "", "vector_to_skew_symmetric_matrix"]], "ivy.array.losses": [[75, 1, 1, "", "ArrayWithLosses"]], "ivy.array.losses.ArrayWithLosses": [[75, 2, 1, "", "binary_cross_entropy"], [75, 2, 1, "", "cross_entropy"], [75, 2, 1, "", "sparse_cross_entropy"]], "ivy.array.manipulation": [[77, 1, 1, "", "ArrayWithManipulation"]], "ivy.array.manipulation.ArrayWithManipulation": [[77, 2, 1, "", "clip"], [77, 2, 1, "", "concat"], [77, 2, 1, "", "constant_pad"], [77, 2, 1, "", "expand_dims"], [77, 2, 1, "", "flip"], [77, 2, 1, "", "permute_dims"], [77, 2, 1, "", "repeat"], [77, 2, 1, "", "reshape"], [77, 2, 1, "", "roll"], [77, 2, 1, "", "split"], [77, 2, 1, "", "squeeze"], [77, 2, 1, "", "stack"], [77, 2, 1, "", "swapaxes"], [77, 2, 1, "", "tile"], [77, 2, 1, "", "unstack"], [77, 2, 1, "", "zero_pad"]], "ivy.array.norms": [[79, 1, 1, "", "ArrayWithNorms"]], "ivy.array.norms.ArrayWithNorms": [[79, 2, 1, "", "layer_norm"]], "ivy.array.random": [[81, 1, 1, "", "ArrayWithRandom"]], "ivy.array.random.ArrayWithRandom": [[81, 2, 1, "", "beta"], [81, 2, 1, "", "gamma"], [81, 2, 1, "", "multinomial"], [81, 2, 1, "", "randint"], [81, 2, 1, "", "random_normal"], [81, 2, 1, "", "random_uniform"], [81, 2, 1, "", "shuffle"]], "ivy.array.searching": [[83, 1, 1, "", "ArrayWithSearching"]], "ivy.array.searching.ArrayWithSearching": [[83, 2, 1, "", "argmax"], [83, 2, 1, "", "argmin"], [83, 2, 1, "", "argwhere"], [83, 2, 1, "", "nonzero"], [83, 2, 1, "", "where"]], "ivy.array.set": [[85, 1, 1, "", "ArrayWithSet"]], "ivy.array.set.ArrayWithSet": [[85, 2, 1, "", "unique_all"], [85, 2, 1, "", "unique_counts"], [85, 2, 1, "", "unique_inverse"], [85, 2, 1, "", "unique_values"]], "ivy.array.sorting": [[87, 1, 1, "", "ArrayWithSorting"]], "ivy.array.sorting.ArrayWithSorting": [[87, 2, 1, "", "argsort"], [87, 2, 1, "", "searchsorted"], [87, 2, 1, "", "sort"]], "ivy.array.statistical": [[89, 1, 1, "", "ArrayWithStatistical"]], "ivy.array.statistical.ArrayWithStatistical": [[89, 2, 1, "", "cumprod"], [89, 2, 1, "", "cumsum"], [89, 2, 1, "", "einsum"], [89, 2, 1, "", "max"], [89, 2, 1, "", "mean"], [89, 2, 1, "", "min"], [89, 2, 1, "", "prod"], [89, 2, 1, "", "std"], [89, 2, 1, "", "sum"], [89, 2, 1, "", "var"]], "ivy.array.utility": [[91, 1, 1, "", "ArrayWithUtility"]], "ivy.array.utility.ArrayWithUtility": [[91, 2, 1, "", "all"], [91, 2, 1, "", "any"]], "ivy.array.wrapping": [[93, 4, 1, "", "add_ivy_array_instance_methods"]], "ivy": [[1, 0, 0, "-", "assertions"], [19, 0, 0, "-", "backend_handler"], [182, 0, 0, "-", "func_wrapper"], [1870, 0, 0, "-", "verbosity"]], "ivy.assertions": [[2, 4, 1, "", "check_all"], [3, 4, 1, "", "check_all_or_any_fn"], [4, 4, 1, "", "check_any"], [5, 4, 1, "", "check_elem_in_list"], [6, 4, 1, "", "check_equal"], [7, 4, 1, "", "check_exists"], [8, 4, 1, "", "check_false"], [9, 4, 1, "", "check_fill_value_and_dtype_are_compatible"], [10, 4, 1, "", "check_gather_input_valid"], [11, 4, 1, "", "check_gather_nd_input_valid"], [12, 4, 1, "", "check_greater"], [13, 4, 1, "", "check_inplace_sizes_valid"], [14, 4, 1, "", "check_isinstance"], [15, 4, 1, "", "check_less"], [16, 4, 1, "", "check_one_way_broadcastable"], [17, 4, 1, "", "check_shape"], [18, 4, 1, "", "check_true"]], "ivy.backend_handler": [[20, 1, 1, "", "ContextManager"], [21, 4, 1, "", "choose_random_backend"], [22, 4, 1, "", "clear_backend_stack"], [23, 4, 1, "", "current_backend"], [24, 4, 1, "", "fn_name_from_version_specific_fn_name"], [25, 4, 1, "", "get_backend"], [26, 4, 1, "", "set_backend"], [27, 4, 1, "", "set_backend_to_specific_version"], [28, 4, 1, "", "set_jax_backend"], [29, 4, 1, "", "set_numpy_backend"], [30, 4, 1, "", "set_tensorflow_backend"], [31, 4, 1, "", "set_torch_backend"], [32, 4, 1, "", "unset_backend"]], "ivy.backend_handler.ContextManager": [[20, 2, 1, "", "__init__"]], "ivy.container": [[95, 0, 0, "-", "activations"], [97, 0, 0, "-", "base"], [99, 0, 0, "-", "container"], [101, 0, 0, "-", "conversions"], [103, 0, 0, "-", "creation"], [105, 0, 0, "-", "data_type"], [107, 0, 0, "-", "device"], [109, 0, 0, "-", "elementwise"], [112, 0, 0, "-", "general"], [114, 0, 0, "-", "gradients"], [116, 0, 0, "-", "image"], [118, 0, 0, "-", "layers"], [120, 0, 0, "-", "linear_algebra"], [122, 0, 0, "-", "losses"], [124, 0, 0, "-", "manipulation"], [126, 0, 0, "-", "norms"], [128, 0, 0, "-", "random"], [130, 0, 0, "-", "searching"], [132, 0, 0, "-", "set"], [134, 0, 0, "-", "sorting"], [136, 0, 0, "-", "statistical"], [138, 0, 0, "-", "utility"], [140, 0, 0, "-", "wrapping"]], "ivy.container.activations": [[96, 1, 1, "", "ContainerWithActivations"]], "ivy.container.activations.ContainerWithActivations": [[96, 2, 1, "", "gelu"], [96, 2, 1, "", "leaky_relu"], [96, 2, 1, "", "log_softmax"], [96, 2, 1, "", "relu"], [96, 2, 1, "", "sigmoid"], [96, 2, 1, "", "softmax"], [96, 2, 1, "", "softplus"], [96, 2, 1, "", "static_gelu"], [96, 2, 1, "", "static_leaky_relu"], [96, 2, 1, "", "static_log_softmax"], [96, 2, 1, "", "static_relu"], [96, 2, 1, "", "static_sigmoid"], [96, 2, 1, "", "static_softmax"], [96, 2, 1, "", "static_softplus"]], "ivy.container.base": [[98, 1, 1, "", "ContainerBase"]], "ivy.container.base.ContainerBase": [[98, 2, 1, "", "__getitem__"], [98, 2, 1, "", "__init__"], [98, 2, 1, "", "__setitem__"], [98, 2, 1, "", "all_false"], [98, 2, 1, "", "all_key_chains"], [98, 2, 1, "", "all_true"], [98, 2, 1, "", "as_bools"], [98, 2, 1, "", "assert_contains_sub_container"], [98, 2, 1, "", "assert_contains_sub_structure"], [98, 2, 1, "", "assert_identical"], [98, 2, 1, "", "assert_identical_structure"], [98, 2, 1, "", "at_key_chain"], [98, 2, 1, "", "at_key_chains"], [98, 2, 1, "", "at_keys"], [98, 2, 1, "", "combine"], [98, 2, 1, "", "common_key_chains"], [98, 3, 1, "", "config"], [98, 2, 1, "", "cont_inplace_update"], [98, 2, 1, "", "contains_sub_container"], [98, 2, 1, "", "contains_sub_structure"], [98, 2, 1, "", "copy"], [98, 2, 1, "", "create_if_absent"], [98, 2, 1, "", "cutoff_at_depth"], [98, 2, 1, "", "cutoff_at_height"], [98, 2, 1, "", "deep_copy"], [98, 3, 1, "", "dev"], [98, 3, 1, "", "dev_str"], [98, 2, 1, "", "diff"], [98, 2, 1, "", "duplicate_array_keychains"], [98, 2, 1, "", "find_sub_container"], [98, 2, 1, "", "find_sub_structure"], [98, 2, 1, "", "flatten_key_chain"], [98, 2, 1, "", "flatten_key_chains"], [98, 2, 1, "", "format_key_chains"], [98, 2, 1, "", "from_disk_as_hdf5"], [98, 2, 1, "", "from_disk_as_json"], [98, 2, 1, "", "from_disk_as_pickled"], [98, 2, 1, "", "from_flat_list"], [98, 2, 1, "", "h5_file_size"], [98, 2, 1, "", "handle_inplace"], [98, 2, 1, "", "has_key"], [98, 2, 1, "", "has_key_chain"], [98, 2, 1, "", "identical"], [98, 2, 1, "", "identical_array_shapes"], [98, 2, 1, "", "identical_configs"], [98, 2, 1, "", "identical_structure"], [98, 2, 1, "", "if_exists"], [98, 3, 1, "", "ivy"], [98, 2, 1, "", "key_chains_containing"], [98, 2, 1, "", "list_join"], [98, 2, 1, "", "list_stack"], [98, 2, 1, "", "map"], [98, 2, 1, "", "map_conts"], [98, 3, 1, "", "max_depth"], [98, 2, 1, "", "multi_map"], [98, 2, 1, "", "multi_map_in_static_method"], [98, 2, 1, "", "num_arrays"], [98, 2, 1, "", "overwrite_at_key_chain"], [98, 2, 1, "", "overwrite_at_key_chains"], [98, 2, 1, "", "prune_empty"], [98, 2, 1, "", "prune_key_chain"], [98, 2, 1, "", "prune_key_chains"], [98, 2, 1, "", "prune_key_from_key_chains"], [98, 2, 1, "", "prune_keys"], [98, 2, 1, "", "prune_keys_from_key_chains"], [98, 2, 1, "", "reduce"], [98, 2, 1, "", "remove_key_length_limit"], [98, 2, 1, "", "remove_print_limit"], [98, 2, 1, "", "reshape_like"], [98, 2, 1, "", "restructure"], [98, 2, 1, "", "restructure_key_chains"], [98, 2, 1, "", "set_at_key_chain"], [98, 2, 1, "", "set_at_key_chains"], [98, 2, 1, "", "set_at_keys"], [98, 3, 1, "", "shapes"], [98, 3, 1, "", "shared_shape"], [98, 2, 1, "", "show"], [98, 2, 1, "", "show_sub_container"], [98, 2, 1, "", "shuffle_h5_file"], [98, 2, 1, "", "size_ordered_arrays"], [98, 2, 1, "", "slice_keys"], [98, 2, 1, "", "slice_via_key"], [98, 2, 1, "", "sort_by_key"], [98, 2, 1, "", "split_conts"], [98, 2, 1, "", "structural_diff"], [98, 2, 1, "", "to_dict"], [98, 2, 1, "", "to_disk_as_hdf5"], [98, 2, 1, "", "to_disk_as_json"], [98, 2, 1, "", "to_disk_as_pickled"], [98, 2, 1, "", "to_flat_list"], [98, 2, 1, "", "to_iterator"], [98, 2, 1, "", "to_iterator_keys"], [98, 2, 1, "", "to_iterator_values"], [98, 2, 1, "", "to_jsonable"], [98, 2, 1, "", "to_nested_list"], [98, 2, 1, "", "to_raw"], [98, 2, 1, "", "trim_key"], [98, 2, 1, "", "try_kc"], [98, 2, 1, "", "unify"], [98, 2, 1, "", "unstack_conts"], [98, 2, 1, "", "update_config"], [98, 2, 1, "", "with_default_key_color"], [98, 2, 1, "", "with_entries_as_lists"], [98, 2, 1, "", "with_ivy_backend"], [98, 2, 1, "", "with_key_length_limit"], [98, 2, 1, "", "with_print_indent"], [98, 2, 1, "", "with_print_limit"], [98, 2, 1, "", "with_print_line_spacing"]], "ivy.container.container": [[100, 1, 1, "", "Container"]], "ivy.container.container.Container": [[100, 2, 1, "", "__abs__"], [100, 2, 1, "", "__add__"], [100, 2, 1, "", "__eq__"], [100, 2, 1, "", "__ge__"], [100, 2, 1, "", "__gt__"], [100, 2, 1, "", "__init__"], [100, 2, 1, "", "__le__"], [100, 2, 1, "", "__lt__"], [100, 2, 1, "", "__ne__"], [100, 2, 1, "", "__pow__"], [100, 2, 1, "", "__radd__"], [100, 2, 1, "", "__rrshift__"], [100, 2, 1, "", "__rshift__"], [100, 2, 1, "", "__rsub__"], [100, 2, 1, "", "__sub__"], [100, 2, 1, "", "__truediv__"], [100, 2, 1, "", "__xor__"]], "ivy.container.conversions": [[102, 1, 1, "", "ContainerWithConversions"]], "ivy.container.conversions.ContainerWithConversions": [[102, 2, 1, "", "static_to_ivy"], [102, 2, 1, "", "static_to_native"], [102, 2, 1, "", "to_ivy"], [102, 2, 1, "", "to_native"]], "ivy.container.creation": [[104, 1, 1, "", "ContainerWithCreation"]], "ivy.container.creation.ContainerWithCreation": [[104, 2, 1, "", "empty_like"], [104, 2, 1, "", "from_dlpack"], [104, 2, 1, "", "full_like"], [104, 2, 1, "", "linspace"], [104, 2, 1, "", "meshgrid"], [104, 2, 1, "", "native_array"], [104, 2, 1, "", "one_hot"], [104, 2, 1, "", "ones_like"], [104, 2, 1, "", "static_arange"], [104, 2, 1, "", "static_asarray"], [104, 2, 1, "", "static_empty_like"], [104, 2, 1, "", "static_eye"], [104, 2, 1, "", "static_from_dlpack"], [104, 2, 1, "", "static_full_like"], [104, 2, 1, "", "static_linspace"], [104, 2, 1, "", "static_logspace"], [104, 2, 1, "", "static_meshgrid"], [104, 2, 1, "", "static_native_array"], [104, 2, 1, "", "static_one_hot"], [104, 2, 1, "", "static_ones"], [104, 2, 1, "", "static_ones_like"], [104, 2, 1, "", "static_tril"], [104, 2, 1, "", "static_triu"], [104, 2, 1, "", "static_zeros"], [104, 2, 1, "", "static_zeros_like"], [104, 2, 1, "", "tril"], [104, 2, 1, "", "triu"], [104, 2, 1, "", "zeros_like"]], "ivy.container.data_type": [[106, 1, 1, "", "ContainerWithDataTypes"]], "ivy.container.data_type.ContainerWithDataTypes": [[106, 2, 1, "", "astype"], [106, 2, 1, "", "broadcast_arrays"], [106, 2, 1, "", "broadcast_to"], [106, 2, 1, "", "can_cast"], [106, 2, 1, "", "dtype"], [106, 2, 1, "", "finfo"], [106, 2, 1, "", "iinfo"], [106, 2, 1, "", "is_bool_dtype"], [106, 2, 1, "", "is_float_dtype"], [106, 2, 1, "", "is_int_dtype"], [106, 2, 1, "", "is_uint_dtype"], [106, 2, 1, "", "result_type"], [106, 2, 1, "", "static_astype"], [106, 2, 1, "", "static_broadcast_arrays"], [106, 2, 1, "", "static_broadcast_to"], [106, 2, 1, "", "static_can_cast"], [106, 2, 1, "", "static_default_float_dtype"], [106, 2, 1, "", "static_dtype"], [106, 2, 1, "", "static_finfo"], [106, 2, 1, "", "static_function_supported_dtypes"], [106, 2, 1, "", "static_function_unsupported_dtypes"], [106, 2, 1, "", "static_iinfo"], [106, 2, 1, "", "static_is_bool_dtype"], [106, 2, 1, "", "static_is_float_dtype"], [106, 2, 1, "", "static_is_int_dtype"], [106, 2, 1, "", "static_is_uint_dtype"], [106, 2, 1, "", "static_result_type"]], "ivy.container.device": [[108, 1, 1, "", "ContainerWithDevice"]], "ivy.container.device.ContainerWithDevice": [[108, 2, 1, "", "dev"], [108, 2, 1, "", "static_dev"], [108, 2, 1, "", "static_to_device"], [108, 2, 1, "", "to_device"]], "ivy.container.elementwise": [[110, 1, 1, "", "ContainerWithElementwise"]], "ivy.container.elementwise.ContainerWithElementwise": [[110, 2, 1, "", "abs"], [110, 2, 1, "", "acos"], [110, 2, 1, "", "acosh"], [110, 2, 1, "", "add"], [110, 2, 1, "", "asin"], [110, 2, 1, "", "asinh"], [110, 2, 1, "", "atan"], [110, 2, 1, "", "atan2"], [110, 2, 1, "", "atanh"], [110, 2, 1, "", "bitwise_and"], [110, 2, 1, "", "bitwise_invert"], [110, 2, 1, "", "bitwise_left_shift"], [110, 2, 1, "", "bitwise_or"], [110, 2, 1, "", "bitwise_right_shift"], [110, 2, 1, "", "bitwise_xor"], [110, 2, 1, "", "ceil"], [110, 2, 1, "", "cos"], [110, 2, 1, "", "cosh"], [110, 2, 1, "", "deg2rad"], [110, 2, 1, "", "divide"], [110, 2, 1, "", "equal"], [110, 2, 1, "", "erf"], [110, 2, 1, "", "exp"], [110, 2, 1, "", "expm1"], [110, 2, 1, "", "floor"], [110, 2, 1, "", "floor_divide"], [110, 2, 1, "", "greater"], [110, 2, 1, "", "greater_equal"], [110, 2, 1, "", "isfinite"], [110, 2, 1, "", "isinf"], [110, 2, 1, "", "isnan"], [110, 2, 1, "", "isreal"], [110, 2, 1, "", "less"], [110, 2, 1, "", "less_equal"], [110, 2, 1, "", "log"], [110, 2, 1, "", "log10"], [110, 2, 1, "", "log1p"], [110, 2, 1, "", "log2"], [110, 2, 1, "", "logaddexp"], [110, 2, 1, "", "logical_and"], [110, 2, 1, "", "logical_not"], [110, 2, 1, "", "logical_or"], [110, 2, 1, "", "logical_xor"], [110, 2, 1, "", "maximum"], [110, 2, 1, "", "minimum"], [110, 2, 1, "", "multiply"], [110, 2, 1, "", "negative"], [110, 2, 1, "", "not_equal"], [110, 2, 1, "", "positive"], [110, 2, 1, "", "pow"], [110, 2, 1, "", "rad2deg"], [110, 2, 1, "", "reciprocal"], [110, 2, 1, "", "remainder"], [110, 2, 1, "", "round"], [110, 2, 1, "", "sign"], [110, 2, 1, "", "sin"], [110, 2, 1, "", "sinh"], [110, 2, 1, "", "sqrt"], [110, 2, 1, "", "square"], [110, 2, 1, "", "static_abs"], [110, 2, 1, "", "static_acos"], [110, 2, 1, "", "static_acosh"], [110, 2, 1, "", "static_add"], [110, 2, 1, "", "static_asin"], [110, 2, 1, "", "static_asinh"], [110, 2, 1, "", "static_atan"], [110, 2, 1, "", "static_atan2"], [110, 2, 1, "", "static_atanh"], [110, 2, 1, "", "static_bitwise_and"], [110, 2, 1, "", "static_bitwise_invert"], [110, 2, 1, "", "static_bitwise_left_shift"], [110, 2, 1, "", "static_bitwise_or"], [110, 2, 1, "", "static_bitwise_right_shift"], [110, 2, 1, "", "static_bitwise_xor"], [110, 2, 1, "", "static_ceil"], [110, 2, 1, "", "static_cos"], [110, 2, 1, "", "static_cosh"], [110, 2, 1, "", "static_deg2rad"], [110, 2, 1, "", "static_divide"], [110, 2, 1, "", "static_equal"], [110, 2, 1, "", "static_erf"], [110, 2, 1, "", "static_exp"], [110, 2, 1, "", "static_expm1"], [110, 2, 1, "", "static_floor"], [110, 2, 1, "", "static_floor_divide"], [110, 2, 1, "", "static_greater"], [110, 2, 1, "", "static_greater_equal"], [110, 2, 1, "", "static_isfinite"], [110, 2, 1, "", "static_isinf"], [110, 2, 1, "", "static_isnan"], [110, 2, 1, "", "static_isreal"], [110, 2, 1, "", "static_less"], [110, 2, 1, "", "static_less_equal"], [110, 2, 1, "", "static_log"], [110, 2, 1, "", "static_log10"], [110, 2, 1, "", "static_log1p"], [110, 2, 1, "", "static_log2"], [110, 2, 1, "", "static_logaddexp"], [110, 2, 1, "", "static_logical_and"], [110, 2, 1, "", "static_logical_not"], [110, 2, 1, "", "static_logical_or"], [110, 2, 1, "", "static_logical_xor"], [110, 2, 1, "", "static_maximum"], [110, 2, 1, "", "static_minimum"], [110, 2, 1, "", "static_multiply"], [110, 2, 1, "", "static_negative"], [110, 2, 1, "", "static_not_equal"], [110, 2, 1, "", "static_positive"], [110, 2, 1, "", "static_pow"], [110, 2, 1, "", "static_rad2deg"], [110, 2, 1, "", "static_reciprocal"], [110, 2, 1, "", "static_remainder"], [110, 2, 1, "", "static_round"], [110, 2, 1, "", "static_sign"], [110, 2, 1, "", "static_sin"], [110, 2, 1, "", "static_sinh"], [110, 2, 1, "", "static_sqrt"], [110, 2, 1, "", "static_square"], [110, 2, 1, "", "static_subtract"], [110, 2, 1, "", "static_tan"], [110, 2, 1, "", "static_tanh"], [110, 2, 1, "", "static_trapz"], [110, 2, 1, "", "static_trunc"], [110, 2, 1, "", "static_trunc_divide"], [110, 2, 1, "", "subtract"], [110, 2, 1, "", "tan"], [110, 2, 1, "", "tanh"], [110, 2, 1, "", "trapz"], [110, 2, 1, "", "trunc"], [110, 2, 1, "", "trunc_divide"]], "ivy.container.experimental": [[111, 1, 1, "", "ContainerWithActivationExperimental"], [111, 1, 1, "", "ContainerWithConversionExperimental"], [111, 1, 1, "", "ContainerWithCreationExperimental"], [111, 1, 1, "", "ContainerWithData_typeExperimental"], [111, 1, 1, "", "ContainerWithDeviceExperimental"], [111, 1, 1, "", "ContainerWithElementWiseExperimental"], [111, 1, 1, "", "ContainerWithGeneralExperimental"], [111, 1, 1, "", "ContainerWithGradientsExperimental"], [111, 1, 1, "", "ContainerWithImageExperimental"], [111, 1, 1, "", "ContainerWithLayersExperimental"], [111, 1, 1, "", "ContainerWithLinearAlgebraExperimental"], [111, 1, 1, "", "ContainerWithLossesExperimental"], [111, 1, 1, "", "ContainerWithManipulationExperimental"], [111, 1, 1, "", "ContainerWithNormsExperimental"], [111, 1, 1, "", "ContainerWithRandomExperimental"], [111, 1, 1, "", "ContainerWithSearchingExperimental"], [111, 1, 1, "", "ContainerWithSetExperimental"], [111, 1, 1, "", "ContainerWithSortingExperimental"], [111, 1, 1, "", "ContainerWithStatisticalExperimental"], [111, 1, 1, "", "ContainerWithUtilityExperimental"]], "ivy.container.experimental.ContainerWithCreationExperimental": [[111, 2, 1, "", "hamming_window"], [111, 2, 1, "", "hann_window"], [111, 2, 1, "", "kaiser_bessel_derived_window"], [111, 2, 1, "", "kaiser_window"], [111, 2, 1, "", "static_hamming_window"], [111, 2, 1, "", "static_hann_window"], [111, 2, 1, "", "static_kaiser_bessel_derived_window"], [111, 2, 1, "", "static_kaiser_window"], [111, 2, 1, "", "static_triu_indices"], [111, 2, 1, "", "static_vorbis_window"], [111, 2, 1, "", "triu_indices"], [111, 2, 1, "", "vorbis_window"]], "ivy.container.experimental.ContainerWithElementWiseExperimental": [[111, 2, 1, "", "allclose"], [111, 2, 1, "", "count_nonzero"], [111, 2, 1, "", "diff"], [111, 2, 1, "", "exp2"], [111, 2, 1, "", "fix"], [111, 2, 1, "", "float_power"], [111, 2, 1, "", "fmax"], [111, 2, 1, "", "fmod"], [111, 2, 1, "", "gcd"], [111, 2, 1, "", "gradient"], [111, 2, 1, "", "isclose"], [111, 2, 1, "", "isneginf"], [111, 2, 1, "", "isposinf"], [111, 2, 1, "", "lcm"], [111, 2, 1, "", "logaddexp2"], [111, 2, 1, "", "nan_to_num"], [111, 2, 1, "", "nansum"], [111, 2, 1, "", "nextafter"], [111, 2, 1, "", "signbit"], [111, 2, 1, "", "sinc"], [111, 2, 1, "", "static_allclose"], [111, 2, 1, "", "static_count_nonzero"], [111, 2, 1, "", "static_diff"], [111, 2, 1, "", "static_exp2"], [111, 2, 1, "", "static_fix"], [111, 2, 1, "", "static_float_power"], [111, 2, 1, "", "static_fmax"], [111, 2, 1, "", "static_fmod"], [111, 2, 1, "", "static_gcd"], [111, 2, 1, "", "static_gradient"], [111, 2, 1, "", "static_isclose"], [111, 2, 1, "", "static_isneginf"], [111, 2, 1, "", "static_isposinf"], [111, 2, 1, "", "static_lcm"], [111, 2, 1, "", "static_logaddexp2"], [111, 2, 1, "", "static_nan_to_num"], [111, 2, 1, "", "static_nansum"], [111, 2, 1, "", "static_nextafter"], [111, 2, 1, "", "static_signbit"], [111, 2, 1, "", "static_sinc"], [111, 2, 1, "", "static_zeta"], [111, 2, 1, "", "zeta"]], "ivy.container.experimental.ContainerWithGeneralExperimental": [[111, 2, 1, "", "isin"], [111, 2, 1, "", "static_isin"]], "ivy.container.experimental.ContainerWithLayersExperimental": [[111, 2, 1, "", "avg_pool1d"], [111, 2, 1, "", "avg_pool2d"], [111, 2, 1, "", "avg_pool3d"], [111, 2, 1, "", "dct"], [111, 2, 1, "", "max_pool1d"], [111, 2, 1, "", "max_pool2d"], [111, 2, 1, "", "max_pool3d"], [111, 2, 1, "", "static_avg_pool1d"], [111, 2, 1, "", "static_avg_pool2d"], [111, 2, 1, "", "static_avg_pool3d"], [111, 2, 1, "", "static_dct"], [111, 2, 1, "", "static_max_pool1d"], [111, 2, 1, "", "static_max_pool2d"], [111, 2, 1, "", "static_max_pool3d"]], "ivy.container.experimental.ContainerWithLinearAlgebraExperimental": [[111, 2, 1, "", "diagflat"], [111, 2, 1, "", "kron"], [111, 2, 1, "", "static_diagflat"], [111, 2, 1, "", "static_kron"]], "ivy.container.experimental.ContainerWithManipulationExperimental": [[111, 2, 1, "", "atleast_1d"], [111, 2, 1, "", "atleast_2d"], [111, 2, 1, "", "atleast_3d"], [111, 2, 1, "", "dsplit"], [111, 2, 1, "", "dstack"], [111, 2, 1, "", "flatten"], [111, 2, 1, "", "fliplr"], [111, 2, 1, "", "flipud"], [111, 2, 1, "", "heaviside"], [111, 2, 1, "", "hsplit"], [111, 2, 1, "", "hstack"], [111, 2, 1, "", "i0"], [111, 2, 1, "", "moveaxis"], [111, 2, 1, "", "pad"], [111, 2, 1, "", "rot90"], [111, 2, 1, "", "static_atleast_1d"], [111, 2, 1, "", "static_atleast_2d"], [111, 2, 1, "", "static_atleast_3d"], [111, 2, 1, "", "static_dsplit"], [111, 2, 1, "", "static_dstack"], [111, 2, 1, "", "static_flatten"], [111, 2, 1, "", "static_fliplr"], [111, 2, 1, "", "static_flipud"], [111, 2, 1, "", "static_heaviside"], [111, 2, 1, "", "static_hsplit"], [111, 2, 1, "", "static_hstack"], [111, 2, 1, "", "static_i0"], [111, 2, 1, "", "static_moveaxis"], [111, 2, 1, "", "static_pad"], [111, 2, 1, "", "static_rot90"], [111, 2, 1, "", "static_take_along_axis"], [111, 2, 1, "", "static_top_k"], [111, 2, 1, "", "static_vsplit"], [111, 2, 1, "", "static_vstack"], [111, 2, 1, "", "take_along_axis"], [111, 2, 1, "", "top_k"], [111, 2, 1, "", "vsplit"], [111, 2, 1, "", "vstack"]], "ivy.container.experimental.ContainerWithRandomExperimental": [[111, 2, 1, "", "dirichlet"], [111, 2, 1, "", "static_dirichlet"]], "ivy.container.experimental.ContainerWithSortingExperimental": [[111, 2, 1, "", "msort"], [111, 2, 1, "", "static_msort"]], "ivy.container.experimental.ContainerWithStatisticalExperimental": [[111, 2, 1, "", "median"], [111, 2, 1, "", "nanmean"], [111, 2, 1, "", "quantile"], [111, 2, 1, "", "static_median"], [111, 2, 1, "", "static_nanmean"], [111, 2, 1, "", "static_quantile"], [111, 2, 1, "", "static_unravel_index"], [111, 2, 1, "", "unravel_index"]], "ivy.container.general": [[113, 1, 1, "", "ContainerWithGeneral"]], "ivy.container.general.ContainerWithGeneral": [[113, 2, 1, "", "all_equal"], [113, 2, 1, "", "assert_supports_inplace"], [113, 2, 1, "", "clip_matrix_norm"], [113, 2, 1, "", "clip_vector_norm"], [113, 2, 1, "", "einops_rearrange"], [113, 2, 1, "", "einops_reduce"], [113, 2, 1, "", "einops_repeat"], [113, 2, 1, "", "fourier_encode"], [113, 2, 1, "", "gather"], [113, 2, 1, "", "gather_nd"], [113, 2, 1, "", "get_num_dims"], [113, 2, 1, "", "has_nans"], [113, 2, 1, "", "inplace_decrement"], [113, 2, 1, "", "inplace_increment"], [113, 2, 1, "", "inplace_update"], [113, 2, 1, "", "is_array"], [113, 2, 1, "", "is_ivy_array"], [113, 2, 1, "", "is_native_array"], [113, 2, 1, "", "scatter_flat"], [113, 2, 1, "", "scatter_nd"], [113, 2, 1, "", "stable_divide"], [113, 2, 1, "", "stable_pow"], [113, 2, 1, "", "static_all_equal"], [113, 2, 1, "", "static_assert_supports_inplace"], [113, 2, 1, "", "static_clip_matrix_norm"], [113, 2, 1, "", "static_clip_vector_norm"], [113, 2, 1, "", "static_einops_rearrange"], [113, 2, 1, "", "static_einops_reduce"], [113, 2, 1, "", "static_einops_repeat"], [113, 2, 1, "", "static_fourier_encode"], [113, 2, 1, "", "static_gather"], [113, 2, 1, "", "static_gather_nd"], [113, 2, 1, "", "static_get_num_dims"], [113, 2, 1, "", "static_has_nans"], [113, 2, 1, "", "static_inplace_decrement"], [113, 2, 1, "", "static_inplace_increment"], [113, 2, 1, "", "static_inplace_update"], [113, 2, 1, "", "static_is_array"], [113, 2, 1, "", "static_is_ivy_array"], [113, 2, 1, "", "static_is_native_array"], [113, 2, 1, "", "static_scatter_flat"], [113, 2, 1, "", "static_scatter_nd"], [113, 2, 1, "", "static_stable_divide"], [113, 2, 1, "", "static_stable_pow"], [113, 2, 1, "", "static_supports_inplace_updates"], [113, 2, 1, "", "static_to_list"], [113, 2, 1, "", "static_to_numpy"], [113, 2, 1, "", "static_to_scalar"], [113, 2, 1, "", "static_value_is_nan"], [113, 2, 1, "", "supports_inplace_updates"], [113, 2, 1, "", "to_list"], [113, 2, 1, "", "to_numpy"], [113, 2, 1, "", "to_scalar"], [113, 2, 1, "", "value_is_nan"]], "ivy.container.gradients": [[115, 1, 1, "", "ContainerWithGradients"]], "ivy.container.gradients.ContainerWithGradients": [[115, 2, 1, "", "adam_step"], [115, 2, 1, "", "adam_update"], [115, 2, 1, "", "gradient_descent_update"], [115, 2, 1, "", "lamb_update"], [115, 2, 1, "", "lars_update"], [115, 2, 1, "", "optimizer_update"], [115, 2, 1, "", "static_stop_gradient"], [115, 2, 1, "", "stop_gradient"]], "ivy.container.image": [[117, 1, 1, "", "ContainerWithImage"]], "ivy.container.layers": [[119, 1, 1, "", "ContainerWithLayers"]], "ivy.container.layers.ContainerWithLayers": [[119, 2, 1, "", "conv1d"], [119, 2, 1, "", "conv1d_transpose"], [119, 2, 1, "", "conv2d"], [119, 2, 1, "", "conv2d_transpose"], [119, 2, 1, "", "conv3d"], [119, 2, 1, "", "conv3d_transpose"], [119, 2, 1, "", "depthwise_conv2d"], [119, 2, 1, "", "dropout"], [119, 2, 1, "", "dropout1d"], [119, 2, 1, "", "linear"], [119, 2, 1, "", "lstm_update"], [119, 2, 1, "", "multi_head_attention"], [119, 2, 1, "", "scaled_dot_product_attention"], [119, 2, 1, "", "static_conv1d"], [119, 2, 1, "", "static_conv1d_transpose"], [119, 2, 1, "", "static_conv2d"], [119, 2, 1, "", "static_conv2d_transpose"], [119, 2, 1, "", "static_conv3d"], [119, 2, 1, "", "static_conv3d_transpose"], [119, 2, 1, "", "static_depthwise_conv2d"], [119, 2, 1, "", "static_dropout"], [119, 2, 1, "", "static_dropout1d"], [119, 2, 1, "", "static_linear"], [119, 2, 1, "", "static_lstm_update"], [119, 2, 1, "", "static_multi_head_attention"], [119, 2, 1, "", "static_scaled_dot_product_attention"]], "ivy.container.linear_algebra": [[121, 1, 1, "", "ContainerWithLinearAlgebra"]], "ivy.container.linear_algebra.ContainerWithLinearAlgebra": [[121, 2, 1, "", "cholesky"], [121, 2, 1, "", "cross"], [121, 2, 1, "", "det"], [121, 2, 1, "", "diag"], [121, 2, 1, "", "diagonal"], [121, 2, 1, "", "eig"], [121, 2, 1, "", "eigh"], [121, 2, 1, "", "eigvalsh"], [121, 2, 1, "", "inner"], [121, 2, 1, "", "inv"], [121, 2, 1, "", "matmul"], [121, 2, 1, "", "matrix_norm"], [121, 2, 1, "", "matrix_power"], [121, 2, 1, "", "matrix_rank"], [121, 2, 1, "", "matrix_transpose"], [121, 2, 1, "", "outer"], [121, 2, 1, "", "pinv"], [121, 2, 1, "", "qr"], [121, 2, 1, "", "slogdet"], [121, 2, 1, "", "solve"], [121, 2, 1, "", "static_cholesky"], [121, 2, 1, "", "static_cross"], [121, 2, 1, "", "static_det"], [121, 2, 1, "", "static_diag"], [121, 2, 1, "", "static_diagonal"], [121, 2, 1, "", "static_eigh"], [121, 2, 1, "", "static_eigvalsh"], [121, 2, 1, "", "static_inner"], [121, 2, 1, "", "static_inv"], [121, 2, 1, "", "static_matmul"], [121, 2, 1, "", "static_matrix_norm"], [121, 2, 1, "", "static_matrix_power"], [121, 2, 1, "", "static_matrix_rank"], [121, 2, 1, "", "static_matrix_transpose"], [121, 2, 1, "", "static_outer"], [121, 2, 1, "", "static_pinv"], [121, 2, 1, "", "static_qr"], [121, 2, 1, "", "static_slogdet"], [121, 2, 1, "", "static_solve"], [121, 2, 1, "", "static_svd"], [121, 2, 1, "", "static_svdvals"], [121, 2, 1, "", "static_tensordot"], [121, 2, 1, "", "static_trace"], [121, 2, 1, "", "static_vander"], [121, 2, 1, "", "static_vecdot"], [121, 2, 1, "", "static_vector_norm"], [121, 2, 1, "", "static_vector_to_skew_symmetric_matrix"], [121, 2, 1, "", "svd"], [121, 2, 1, "", "svdvals"], [121, 2, 1, "", "tensordot"], [121, 2, 1, "", "tensorsolve"], [121, 2, 1, "", "trace"], [121, 2, 1, "", "vander"], [121, 2, 1, "", "vecdot"], [121, 2, 1, "", "vector_norm"], [121, 2, 1, "", "vector_to_skew_symmetric_matrix"]], "ivy.container.losses": [[123, 1, 1, "", "ContainerWithLosses"]], "ivy.container.losses.ContainerWithLosses": [[123, 2, 1, "", "binary_cross_entropy"], [123, 2, 1, "", "cross_entropy"], [123, 2, 1, "", "sparse_cross_entropy"], [123, 2, 1, "", "static_binary_cross_entropy"], [123, 2, 1, "", "static_cross_entropy"], [123, 2, 1, "", "static_sparse_cross_entropy"]], "ivy.container.manipulation": [[125, 1, 1, "", "ContainerWithManipulation"]], "ivy.container.manipulation.ContainerWithManipulation": [[125, 2, 1, "", "clip"], [125, 2, 1, "", "concat"], [125, 2, 1, "", "constant_pad"], [125, 2, 1, "", "expand_dims"], [125, 2, 1, "", "flip"], [125, 2, 1, "", "permute_dims"], [125, 2, 1, "", "repeat"], [125, 2, 1, "", "reshape"], [125, 2, 1, "", "roll"], [125, 2, 1, "", "split"], [125, 2, 1, "", "squeeze"], [125, 2, 1, "", "stack"], [125, 2, 1, "", "static_clip"], [125, 2, 1, "", "static_concat"], [125, 2, 1, "", "static_constant_pad"], [125, 2, 1, "", "static_expand_dims"], [125, 2, 1, "", "static_flip"], [125, 2, 1, "", "static_permute_dims"], [125, 2, 1, "", "static_repeat"], [125, 2, 1, "", "static_reshape"], [125, 2, 1, "", "static_roll"], [125, 2, 1, "", "static_split"], [125, 2, 1, "", "static_squeeze"], [125, 2, 1, "", "static_stack"], [125, 2, 1, "", "static_swapaxes"], [125, 2, 1, "", "static_tile"], [125, 2, 1, "", "static_unstack"], [125, 2, 1, "", "static_zero_pad"], [125, 2, 1, "", "swapaxes"], [125, 2, 1, "", "tile"], [125, 2, 1, "", "unstack"], [125, 2, 1, "", "zero_pad"]], "ivy.container.norms": [[127, 1, 1, "", "ContainerWithNorms"]], "ivy.container.norms.ContainerWithNorms": [[127, 2, 1, "", "layer_norm"]], "ivy.container.random": [[129, 1, 1, "", "ContainerWithRandom"]], "ivy.container.random.ContainerWithRandom": [[129, 2, 1, "", "beta"], [129, 2, 1, "", "multinomial"], [129, 2, 1, "", "randint"], [129, 2, 1, "", "random_normal"], [129, 2, 1, "", "random_uniform"], [129, 2, 1, "", "shuffle"], [129, 2, 1, "", "static_beta"], [129, 2, 1, "", "static_multinomial"], [129, 2, 1, "", "static_randint"], [129, 2, 1, "", "static_random_normal"], [129, 2, 1, "", "static_random_uniform"], [129, 2, 1, "", "static_shuffle"]], "ivy.container.searching": [[131, 1, 1, "", "ContainerWithSearching"]], "ivy.container.searching.ContainerWithSearching": [[131, 2, 1, "", "argmax"], [131, 2, 1, "", "argmin"], [131, 2, 1, "", "argwhere"], [131, 2, 1, "", "nonzero"], [131, 2, 1, "", "static_argmax"], [131, 2, 1, "", "static_argmin"], [131, 2, 1, "", "static_argwhere"], [131, 2, 1, "", "static_nonzero"], [131, 2, 1, "", "static_where"], [131, 2, 1, "", "where"]], "ivy.container.set": [[133, 1, 1, "", "ContainerWithSet"]], "ivy.container.set.ContainerWithSet": [[133, 2, 1, "", "static_unique_all"], [133, 2, 1, "", "static_unique_counts"], [133, 2, 1, "", "static_unique_inverse"], [133, 2, 1, "", "static_unique_values"], [133, 2, 1, "", "unique_all"], [133, 2, 1, "", "unique_counts"], [133, 2, 1, "", "unique_inverse"], [133, 2, 1, "", "unique_values"]], "ivy.container.sorting": [[135, 1, 1, "", "ContainerWithSorting"]], "ivy.container.sorting.ContainerWithSorting": [[135, 2, 1, "", "argsort"], [135, 2, 1, "", "searchsorted"], [135, 2, 1, "", "sort"], [135, 2, 1, "", "static_argsort"], [135, 2, 1, "", "static_searchsorted"], [135, 2, 1, "", "static_sort"]], "ivy.container.statistical": [[137, 1, 1, "", "ContainerWithStatistical"]], "ivy.container.statistical.ContainerWithStatistical": [[137, 2, 1, "", "cumprod"], [137, 2, 1, "", "cumsum"], [137, 2, 1, "", "einsum"], [137, 2, 1, "", "max"], [137, 2, 1, "", "mean"], [137, 2, 1, "", "min"], [137, 2, 1, "", "prod"], [137, 2, 1, "", "static_cumprod"], [137, 2, 1, "", "static_cumsum"], [137, 2, 1, "", "static_prod"], [137, 2, 1, "", "static_sum"], [137, 2, 1, "", "static_var"], [137, 2, 1, "", "std"], [137, 2, 1, "", "sum"], [137, 2, 1, "", "var"]], "ivy.container.utility": [[139, 1, 1, "", "ContainerWithUtility"]], "ivy.container.utility.ContainerWithUtility": [[139, 2, 1, "", "all"], [139, 2, 1, "", "any"], [139, 2, 1, "", "static_all"], [139, 2, 1, "", "static_any"]], "ivy.container.wrapping": [[141, 4, 1, "", "add_ivy_container_instance_methods"]], "ivy.func_wrapper": [[183, 4, 1, "", "from_zero_dim_arrays_to_float"], [184, 4, 1, "", "handle_array_like"], [185, 4, 1, "", "handle_nans"], [186, 4, 1, "", "handle_nestable"], [187, 4, 1, "", "handle_out_argument"], [188, 4, 1, "", "infer_device"], [189, 4, 1, "", "infer_dtype"], [190, 4, 1, "", "inputs_to_ivy_arrays"], [191, 4, 1, "", "inputs_to_native_arrays"], [192, 4, 1, "", "integer_arrays_to_float"], [193, 4, 1, "", "outputs_to_ivy_arrays"], [194, 4, 1, "", "to_native_arrays_and_back"], [182, 4, 1, "", "with_supported_device_and_dtypes"], [182, 4, 1, "", "with_supported_devices"], [182, 4, 1, "", "with_supported_dtypes"], [182, 4, 1, "", "with_unsupported_device_and_dtypes"], [182, 4, 1, "", "with_unsupported_devices"], [182, 4, 1, "", "with_unsupported_dtypes"]], "ivy.functional.ivy": [[196, 0, 0, "-", "activations"], [234, 0, 0, "-", "compilation"], [236, 0, 0, "-", "constants"], [237, 0, 0, "-", "creation"], [321, 0, 0, "-", "data_type"], [416, 0, 0, "-", "device"], [450, 0, 0, "-", "elementwise"], [1090, 0, 0, "-", "general"], [1283, 0, 0, "-", "gradients"], [1321, 0, 0, "-", "layers"], [1392, 0, 0, "-", "linear_algebra"], [1535, 0, 0, "-", "losses"], [1552, 0, 0, "-", "manipulation"], [1633, 0, 0, "-", "meta"], [1637, 0, 0, "-", "nest"], [1656, 0, 0, "-", "norms"], [1661, 0, 0, "-", "random"], [1688, 0, 0, "-", "searching"], [1714, 0, 0, "-", "set"], [1735, 0, 0, "-", "sorting"], [1751, 0, 0, "-", "statistical"], [1797, 0, 0, "-", "utility"]], "ivy.functional.ivy.activations": [[197, 4, 1, "", "deserialize"], [201, 4, 1, "", "gelu"], [203, 4, 1, "", "get"], [207, 4, 1, "", "leaky_relu"], [212, 4, 1, "", "log_softmax"], [217, 4, 1, "", "relu"], [222, 4, 1, "", "sigmoid"], [227, 4, 1, "", "softmax"], [232, 4, 1, "", "softplus"]], "ivy.functional.ivy.compilation": [[235, 4, 1, "", "compile"]], "ivy.functional.ivy.constants": [[236, 5, 1, "", "e"], [236, 5, 1, "", "inf"], [236, 5, 1, "", "nan"], [236, 5, 1, "", "newaxis"], [236, 5, 1, "", "pi"]], "ivy.functional.ivy.creation": [[238, 1, 1, "", "NestedSequence"], [240, 4, 1, "", "arange"], [237, 4, 1, "", "array"], [244, 4, 1, "", "asarray"], [246, 4, 1, "", "asarray_handle_nestable"], [247, 4, 1, "", "asarray_infer_device"], [248, 4, 1, "", "asarray_to_native_arrays_and_back"], [251, 4, 1, "", "copy_array"], [252, 4, 1, "", "empty"], [256, 4, 1, "", "empty_like"], [259, 4, 1, "", "eye"], [264, 4, 1, "", "from_dlpack"], [266, 4, 1, "", "full"], [270, 4, 1, "", "full_like"], [275, 4, 1, "", "linspace"], [278, 4, 1, "", "logspace"], [283, 4, 1, "", "meshgrid"], [288, 4, 1, "", "native_array"], [293, 4, 1, "", "one_hot"], [296, 4, 1, "", "ones"], [301, 4, 1, "", "ones_like"], [307, 4, 1, "", "tril"], [312, 4, 1, "", "triu"], [315, 4, 1, "", "zeros"], [320, 4, 1, "", "zeros_like"]], "ivy.functional.ivy.creation.NestedSequence": [[238, 2, 1, "", "__init__"]], "ivy.functional.ivy.data_type": [[322, 1, 1, "", "DefaultDtype"], [323, 1, 1, "", "DefaultFloatDtype"], [324, 1, 1, "", "DefaultIntDtype"], [325, 1, 1, "", "DefaultUintDtype"], [326, 4, 1, "", "as_ivy_dtype"], [327, 4, 1, "", "as_native_dtype"], [331, 4, 1, "", "astype"], [336, 4, 1, "", "broadcast_arrays"], [341, 4, 1, "", "broadcast_to"], [346, 4, 1, "", "can_cast"], [348, 4, 1, "", "check_float"], [349, 4, 1, "", "closest_valid_dtype"], [350, 4, 1, "", "default_dtype"], [352, 4, 1, "", "default_float_dtype"], [354, 4, 1, "", "default_int_dtype"], [355, 4, 1, "", "default_uint_dtype"], [358, 4, 1, "", "dtype"], [360, 4, 1, "", "dtype_bits"], [364, 4, 1, "", "finfo"], [367, 4, 1, "", "function_supported_dtypes"], [370, 4, 1, "", "function_unsupported_dtypes"], [375, 4, 1, "", "iinfo"], [377, 4, 1, "", "infer_default_dtype"], [378, 4, 1, "", "invalid_dtype"], [382, 4, 1, "", "is_bool_dtype"], [387, 4, 1, "", "is_float_dtype"], [392, 4, 1, "", "is_int_dtype"], [397, 4, 1, "", "is_uint_dtype"], [399, 4, 1, "", "promote_types"], [400, 4, 1, "", "promote_types_of_inputs"], [404, 4, 1, "", "result_type"], [406, 4, 1, "", "set_default_dtype"], [407, 4, 1, "", "set_default_float_dtype"], [408, 4, 1, "", "set_default_int_dtype"], [409, 4, 1, "", "set_default_uint_dtype"], [410, 4, 1, "", "type_promote_arrays"], [411, 4, 1, "", "unset_default_dtype"], [412, 4, 1, "", "unset_default_float_dtype"], [413, 4, 1, "", "unset_default_int_dtype"], [414, 4, 1, "", "unset_default_uint_dtype"], [415, 4, 1, "", "valid_dtype"]], "ivy.functional.ivy.data_type.DefaultDtype": [[322, 2, 1, "", "__init__"]], "ivy.functional.ivy.data_type.DefaultFloatDtype": [[323, 2, 1, "", "__init__"]], "ivy.functional.ivy.data_type.DefaultIntDtype": [[324, 2, 1, "", "__init__"]], "ivy.functional.ivy.data_type.DefaultUintDtype": [[325, 2, 1, "", "__init__"]], "ivy.functional.ivy.device": [[417, 1, 1, "", "DefaultDevice"], [418, 1, 1, "", "Profiler"], [419, 4, 1, "", "as_ivy_dev"], [420, 4, 1, "", "as_native_dev"], [421, 4, 1, "", "clear_mem_on_dev"], [422, 4, 1, "", "default_device"], [425, 4, 1, "", "dev"], [427, 4, 1, "", "dev_util"], [428, 4, 1, "", "function_supported_devices"], [429, 4, 1, "", "function_unsupported_devices"], [430, 4, 1, "", "get_all_ivy_arrays_on_dev"], [431, 4, 1, "", "gpu_is_available"], [432, 4, 1, "", "num_cpu_cores"], [433, 4, 1, "", "num_gpus"], [434, 4, 1, "", "num_ivy_arrays_on_dev"], [435, 4, 1, "", "percent_used_mem_on_dev"], [436, 4, 1, "", "print_all_ivy_arrays_on_dev"], [437, 4, 1, "", "set_default_device"], [438, 4, 1, "", "set_split_factor"], [439, 4, 1, "", "split_factor"], [440, 4, 1, "", "split_func_call"], [445, 4, 1, "", "to_device"], [446, 4, 1, "", "total_mem_on_dev"], [447, 4, 1, "", "tpu_is_available"], [448, 4, 1, "", "unset_default_device"], [449, 4, 1, "", "used_mem_on_dev"]], "ivy.functional.ivy.device.DefaultDevice": [[417, 2, 1, "", "__enter__"], [417, 2, 1, "", "__exit__"], [417, 2, 1, "", "__init__"]], "ivy.functional.ivy.device.Profiler": [[418, 2, 1, "", "__init__"], [418, 2, 1, "", "start"], [418, 2, 1, "", "stop"]], "ivy.functional.ivy.elementwise": [[454, 4, 1, "", "abs"], [459, 4, 1, "", "acos"], [464, 4, 1, "", "acosh"], [469, 4, 1, "", "add"], [474, 4, 1, "", "asin"], [479, 4, 1, "", "asinh"], [484, 4, 1, "", "atan"], [489, 4, 1, "", "atan2"], [494, 4, 1, "", "atanh"], [499, 4, 1, "", "bitwise_and"], [504, 4, 1, "", "bitwise_invert"], [509, 4, 1, "", "bitwise_left_shift"], [514, 4, 1, "", "bitwise_or"], [519, 4, 1, "", "bitwise_right_shift"], [524, 4, 1, "", "bitwise_xor"], [529, 4, 1, "", "ceil"], [534, 4, 1, "", "cos"], [539, 4, 1, "", "cosh"], [544, 4, 1, "", "deg2rad"], [549, 4, 1, "", "divide"], [554, 4, 1, "", "equal"], [559, 4, 1, "", "erf"], [564, 4, 1, "", "exp"], [569, 4, 1, "", "expm1"], [574, 4, 1, "", "floor"], [579, 4, 1, "", "floor_divide"], [584, 4, 1, "", "greater"], [589, 4, 1, "", "greater_equal"], [594, 4, 1, "", "isfinite"], [599, 4, 1, "", "isinf"], [604, 4, 1, "", "isnan"], [609, 4, 1, "", "isreal"], [614, 4, 1, "", "less"], [619, 4, 1, "", "less_equal"], [624, 4, 1, "", "log"], [629, 4, 1, "", "log10"], [634, 4, 1, "", "log1p"], [639, 4, 1, "", "log2"], [644, 4, 1, "", "logaddexp"], [649, 4, 1, "", "logical_and"], [654, 4, 1, "", "logical_not"], [659, 4, 1, "", "logical_or"], [664, 4, 1, "", "logical_xor"], [669, 4, 1, "", "maximum"], [674, 4, 1, "", "minimum"], [679, 4, 1, "", "multiply"], [684, 4, 1, "", "negative"], [689, 4, 1, "", "not_equal"], [694, 4, 1, "", "positive"], [699, 4, 1, "", "pow"], [704, 4, 1, "", "rad2deg"], [709, 4, 1, "", "reciprocal"], [714, 4, 1, "", "remainder"], [719, 4, 1, "", "round"], [724, 4, 1, "", "sign"], [729, 4, 1, "", "sin"], [734, 4, 1, "", "sinh"], [739, 4, 1, "", "sqrt"], [744, 4, 1, "", "square"], [750, 4, 1, "", "subtract"], [755, 4, 1, "", "tan"], [760, 4, 1, "", "tanh"], [765, 4, 1, "", "trunc"], [770, 4, 1, "", "trunc_divide"]], "ivy.functional.ivy.general": [[1094, 4, 1, "", "all_equal"], [1096, 4, 1, "", "arg_info"], [1097, 4, 1, "", "arg_names"], [1100, 4, 1, "", "array_equal"], [1104, 4, 1, "", "assert_supports_inplace"], [1106, 4, 1, "", "cache_fn"], [1110, 4, 1, "", "clip_matrix_norm"], [1115, 4, 1, "", "clip_vector_norm"], [1117, 4, 1, "", "container_types"], [1118, 4, 1, "", "current_backend_str"], [1121, 4, 1, "", "default"], [1125, 4, 1, "", "einops_rearrange"], [1130, 4, 1, "", "einops_reduce"], [1135, 4, 1, "", "einops_repeat"], [1139, 4, 1, "", "exists"], [1143, 4, 1, "", "fourier_encode"], [1145, 4, 1, "", "function_supported_devices_and_dtypes"], [1146, 4, 1, "", "function_unsupported_devices_and_dtypes"], [1150, 4, 1, "", "gather"], [1155, 4, 1, "", "gather_nd"], [1157, 4, 1, "", "get_all_arrays_in_memory"], [1158, 4, 1, "", "get_array_mode"], [1159, 4, 1, "", "get_exception_trace_mode"], [1160, 4, 1, "", "get_item"], [1161, 4, 1, "", "get_min_base"], [1162, 4, 1, "", "get_min_denominator"], [1163, 4, 1, "", "get_nestable_mode"], [1167, 4, 1, "", "get_num_dims"], [1169, 4, 1, "", "get_queue_timeout"], [1170, 4, 1, "", "get_referrers_recursive"], [1171, 4, 1, "", "get_show_func_wrapper_trace_mode"], [1172, 4, 1, "", "get_tmp_dir"], [1176, 4, 1, "", "has_nans"], [1178, 4, 1, "", "inplace_arrays_supported"], [1182, 4, 1, "", "inplace_decrement"], [1187, 4, 1, "", "inplace_increment"], [1192, 4, 1, "", "inplace_update"], [1194, 4, 1, "", "inplace_variables_supported"], [1198, 4, 1, "", "is_array"], [1203, 4, 1, "", "is_ivy_array"], [1207, 4, 1, "", "is_ivy_container"], [1211, 4, 1, "", "is_native_array"], [1213, 4, 1, "", "isscalar"], [1214, 4, 1, "", "match_kwargs"], [1215, 4, 1, "", "multiprocessing"], [1216, 4, 1, "", "num_arrays_in_memory"], [1217, 4, 1, "", "print_all_arrays_in_memory"], [1221, 4, 1, "", "scatter_flat"], [1226, 4, 1, "", "scatter_nd"], [1228, 4, 1, "", "set_array_mode"], [1229, 4, 1, "", "set_exception_trace_mode"], [1230, 4, 1, "", "set_min_base"], [1231, 4, 1, "", "set_min_denominator"], [1232, 4, 1, "", "set_nestable_mode"], [1233, 4, 1, "", "set_queue_timeout"], [1234, 4, 1, "", "set_shape_array_mode"], [1235, 4, 1, "", "set_show_func_wrapper_trace_mode"], [1236, 4, 1, "", "set_tmp_dir"], [1237, 4, 1, "", "shape"], [1238, 4, 1, "", "shape_array_mode"], [1242, 4, 1, "", "stable_divide"], [1247, 4, 1, "", "stable_pow"], [1253, 4, 1, "", "supports_inplace_updates"], [1254, 4, 1, "", "to_ivy_shape"], [1258, 4, 1, "", "to_list"], [1259, 4, 1, "", "to_native_shape"], [1264, 4, 1, "", "to_numpy"], [1269, 4, 1, "", "to_scalar"], [1270, 4, 1, "", "try_else_none"], [1271, 4, 1, "", "unset_array_mode"], [1272, 4, 1, "", "unset_exception_trace_mode"], [1273, 4, 1, "", "unset_nestable_mode"], [1274, 4, 1, "", "unset_queue_timeout"], [1275, 4, 1, "", "unset_shape_array_mode"], [1276, 4, 1, "", "unset_show_func_wrapper_trace_mode"], [1281, 4, 1, "", "value_is_nan"], [1282, 4, 1, "", "vmap"]], "ivy.functional.ivy.gradients": [[1284, 1, 1, "", "GradientTracking"], [1288, 4, 1, "", "adam_step"], [1292, 4, 1, "", "adam_update"], [1293, 4, 1, "", "execute_with_gradients"], [1294, 4, 1, "", "grad"], [1298, 4, 1, "", "gradient_descent_update"], [1299, 4, 1, "", "jac"], [1303, 4, 1, "", "lamb_update"], [1307, 4, 1, "", "lars_update"], [1311, 4, 1, "", "optimizer_update"], [1312, 4, 1, "", "set_with_grads"], [1317, 4, 1, "", "stop_gradient"], [1318, 4, 1, "", "unset_with_grads"], [1319, 4, 1, "", "value_and_grad"], [1320, 4, 1, "", "with_grads"]], "ivy.functional.ivy.gradients.GradientTracking": [[1284, 2, 1, "", "__init__"]], "ivy.functional.ivy.layers": [[1322, 4, 1, "", "conv"], [1326, 4, 1, "", "conv1d"], [1331, 4, 1, "", "conv1d_transpose"], [1336, 4, 1, "", "conv2d"], [1340, 4, 1, "", "conv2d_transpose"], [1345, 4, 1, "", "conv3d"], [1350, 4, 1, "", "conv3d_transpose"], [1352, 4, 1, "", "conv_general_dilated"], [1353, 4, 1, "", "conv_general_transpose"], [1354, 4, 1, "", "deconv_length"], [1358, 4, 1, "", "depthwise_conv2d"], [1363, 4, 1, "", "dropout"], [1368, 4, 1, "", "dropout1d"], [1370, 4, 1, "", "get_x_data_format"], [1371, 4, 1, "", "handle_padding"], [1375, 4, 1, "", "linear"], [1380, 4, 1, "", "lstm_update"], [1385, 4, 1, "", "multi_head_attention"], [1390, 4, 1, "", "scaled_dot_product_attention"]], "ivy.functional.ivy.linear_algebra": [[1396, 4, 1, "", "cholesky"], [1401, 4, 1, "", "cross"], [1406, 4, 1, "", "det"], [1411, 4, 1, "", "diag"], [1416, 4, 1, "", "diagonal"], [1421, 4, 1, "", "eig"], [1425, 4, 1, "", "eigh"], [1430, 4, 1, "", "eigvalsh"], [1435, 4, 1, "", "inner"], [1440, 4, 1, "", "inv"], [1445, 4, 1, "", "matmul"], [1450, 4, 1, "", "matrix_norm"], [1455, 4, 1, "", "matrix_power"], [1460, 4, 1, "", "matrix_rank"], [1465, 4, 1, "", "matrix_transpose"], [1470, 4, 1, "", "outer"], [1475, 4, 1, "", "pinv"], [1480, 4, 1, "", "qr"], [1485, 4, 1, "", "slogdet"], [1490, 4, 1, "", "solve"], [1496, 4, 1, "", "svd"], [1501, 4, 1, "", "svdvals"], [1505, 4, 1, "", "tensordot"], [1509, 4, 1, "", "tensorsolve"], [1514, 4, 1, "", "trace"], [1519, 4, 1, "", "vander"], [1524, 4, 1, "", "vecdot"], [1529, 4, 1, "", "vector_norm"], [1534, 4, 1, "", "vector_to_skew_symmetric_matrix"]], "ivy.functional.ivy.losses": [[1539, 4, 1, "", "binary_cross_entropy"], [1541, 4, 1, "", "binary_cross_entropy_with_logits"], [1545, 4, 1, "", "cross_entropy"], [1550, 4, 1, "", "sparse_cross_entropy"]], "ivy.functional.ivy.manipulation": [[1556, 4, 1, "", "clip"], [1561, 4, 1, "", "concat"], [1566, 4, 1, "", "constant_pad"], [1571, 4, 1, "", "expand_dims"], [1576, 4, 1, "", "flip"], [1581, 4, 1, "", "permute_dims"], [1586, 4, 1, "", "repeat"], [1591, 4, 1, "", "reshape"], [1596, 4, 1, "", "roll"], [1601, 4, 1, "", "split"], [1606, 4, 1, "", "squeeze"], [1611, 4, 1, "", "stack"], [1617, 4, 1, "", "swapaxes"], [1622, 4, 1, "", "tile"], [1627, 4, 1, "", "unstack"], [1632, 4, 1, "", "zero_pad"]], "ivy.functional.ivy.meta": [[1634, 4, 1, "", "fomaml_step"], [1635, 4, 1, "", "maml_step"], [1636, 4, 1, "", "reptile_step"]], "ivy.functional.ivy.nest": [[1638, 4, 1, "", "all_nested_indices"], [1639, 4, 1, "", "copy_nest"], [1640, 4, 1, "", "duplicate_array_index_chains"], [1641, 4, 1, "", "index_nest"], [1642, 4, 1, "", "insert_into_nest_at_index"], [1643, 4, 1, "", "insert_into_nest_at_indices"], [1644, 4, 1, "", "map"], [1645, 4, 1, "", "map_nest_at_index"], [1646, 4, 1, "", "map_nest_at_indices"], [1647, 4, 1, "", "multi_index_nest"], [1648, 4, 1, "", "nested_any"], [1649, 4, 1, "", "nested_argwhere"], [1650, 4, 1, "", "nested_map"], [1651, 4, 1, "", "nested_multi_map"], [1652, 4, 1, "", "prune_nest_at_index"], [1653, 4, 1, "", "prune_nest_at_indices"], [1654, 4, 1, "", "set_nest_at_index"], [1655, 4, 1, "", "set_nest_at_indices"]], "ivy.functional.ivy.norms": [[1660, 4, 1, "", "layer_norm"]], "ivy.functional.ivy.random": [[1665, 4, 1, "", "multinomial"], [1670, 4, 1, "", "randint"], [1675, 4, 1, "", "random_normal"], [1680, 4, 1, "", "random_uniform"], [1682, 4, 1, "", "seed"], [1686, 4, 1, "", "shuffle"]], "ivy.functional.ivy.searching": [[1692, 4, 1, "", "argmax"], [1697, 4, 1, "", "argmin"], [1702, 4, 1, "", "argwhere"], [1707, 4, 1, "", "nonzero"], [1713, 4, 1, "", "where"]], "ivy.functional.ivy.set": [[1719, 4, 1, "", "unique_all"], [1724, 4, 1, "", "unique_counts"], [1729, 4, 1, "", "unique_inverse"], [1734, 4, 1, "", "unique_values"]], "ivy.functional.ivy.sorting": [[1739, 4, 1, "", "argsort"], [1744, 4, 1, "", "searchsorted"], [1749, 4, 1, "", "sort"]], "ivy.functional.ivy.statistical": [[1755, 4, 1, "", "cumprod"], [1760, 4, 1, "", "cumsum"], [1765, 4, 1, "", "einsum"], [1769, 4, 1, "", "max"], [1773, 4, 1, "", "mean"], [1777, 4, 1, "", "min"], [1781, 4, 1, "", "prod"], [1786, 4, 1, "", "std"], [1791, 4, 1, "", "sum"], [1796, 4, 1, "", "var"]], "ivy.functional.ivy.utility": [[1801, 4, 1, "", "all"], [1806, 4, 1, "", "any"]], "ivy.verbosity": [[1871, 4, 1, "", "cprint"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:property", "4": "py:function", "5": "py:data"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "property", "Python property"], "4": ["py", "function", "Python function"], "5": ["py", "data", "Python data"]}, "titleterms": {"assert": [1, 152], "check_al": 2, "check_all_or_any_fn": 3, "check_ani": 4, "check_elem_in_list": 5, "check_equ": 6, "check_exist": 7, "check_fals": 8, "check_fill_value_and_dtype_are_compat": 9, "check_gather_input_valid": 10, "check_gather_nd_input_valid": 11, "check_great": 12, "check_inplace_sizes_valid": 13, "check_isinst": 14, "check_less": 15, "check_one_way_broadcast": 16, "check_shap": 17, "check_tru": 18, "backend": [19, 145, 148, 161, 164, 181], "handler": [19, 164], "contextmanag": 20, "choose_random_backend": 21, "clear_backend_stack": 22, "current_backend": 23, "fn_name_from_version_specific_fn_nam": 24, "get_backend": 25, "set_backend": 26, "set_backend_to_specific_vers": 27, "set_jax_backend": 28, "set_numpy_backend": 29, "set_tensorflow_backend": 30, "set_torch_backend": 31, "unset_backend": 32, "background": [33, 1809], "ml": [34, 1821, 1825], "explos": 34, "standard": [35, 162, 1816, 1825], "skeptic": 35, "complimentari": 35, "v": [35, 181], "competit": 35, "do": [35, 160], "work": [35, 39, 1815], "The": [35, 43, 158, 166, 181], "arrai": [35, 45, 48, 143, 144, 147, 154, 166, 199, 205, 210, 215, 220, 225, 230, 243, 250, 254, 262, 268, 273, 281, 286, 291, 299, 305, 310, 318, 329, 334, 339, 344, 362, 373, 380, 385, 390, 395, 402, 424, 443, 452, 457, 462, 467, 472, 477, 482, 487, 492, 497, 502, 507, 512, 517, 522, 527, 532, 537, 542, 547, 552, 557, 562, 567, 572, 577, 582, 587, 592, 597, 602, 607, 612, 617, 622, 627, 632, 637, 642, 647, 652, 657, 662, 667, 672, 677, 682, 687, 692, 697, 702, 707, 712, 717, 722, 727, 732, 737, 742, 748, 753, 758, 763, 768, 775, 780, 785, 790, 795, 800, 805, 811, 816, 821, 826, 830, 835, 840, 845, 851, 856, 861, 866, 871, 876, 881, 887, 892, 905, 910, 915, 920, 927, 932, 937, 942, 955, 960, 965, 970, 975, 980, 985, 990, 995, 1000, 1005, 1010, 1019, 1024, 1029, 1034, 1039, 1044, 1050, 1055, 1059, 1067, 1076, 1081, 1086, 1092, 1099, 1102, 1108, 1113, 1120, 1123, 1128, 1133, 1138, 1141, 1148, 1153, 1165, 1174, 1180, 1185, 1190, 1196, 1201, 1206, 1209, 1219, 1224, 1240, 1245, 1251, 1257, 1262, 1267, 1279, 1286, 1290, 1296, 1301, 1305, 1309, 1315, 1324, 1329, 1334, 1343, 1348, 1356, 1361, 1366, 1373, 1378, 1383, 1388, 1394, 1399, 1404, 1409, 1414, 1419, 1423, 1428, 1433, 1438, 1443, 1448, 1453, 1458, 1463, 1468, 1473, 1478, 1483, 1488, 1494, 1499, 1507, 1512, 1517, 1522, 1527, 1532, 1537, 1543, 1548, 1554, 1559, 1564, 1569, 1574, 1579, 1584, 1589, 1594, 1599, 1604, 1609, 1615, 1620, 1625, 1630, 1658, 1663, 1668, 1673, 1678, 1684, 1690, 1695, 1700, 1705, 1711, 1717, 1722, 1727, 1732, 1737, 1742, 1747, 1753, 1758, 1763, 1767, 1771, 1775, 1779, 1784, 1789, 1794, 1799, 1804, 1816], "api": [35, 41, 43, 143, 146, 147, 161, 164, 166, 168, 169, 1816, 1823, 1825], "why": [36, 160], "unifi": [36, 166, 1821, 1825], "No": [36, 42], "more": [36, 42, 162], "re": [36, 160], "implement": 36, "infinit": 36, "shelf": 36, "life": 36, "contribut": [37, 1809], "appli": [38, 180], "librari": [38, 180], "introduct": [38, 158, 159], "exampl": [38, 150, 154, 159, 162], "ivi": [38, 41, 42, 43, 144, 147, 150, 152, 158, 159, 160, 161, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 180, 199, 200, 201, 202, 205, 206, 207, 208, 210, 211, 212, 213, 215, 216, 217, 218, 220, 221, 222, 223, 225, 226, 227, 228, 230, 231, 232, 233, 240, 241, 243, 244, 245, 250, 251, 254, 255, 256, 257, 259, 260, 262, 263, 264, 265, 268, 269, 270, 271, 273, 274, 275, 276, 278, 279, 281, 282, 283, 284, 286, 287, 288, 289, 291, 292, 293, 294, 296, 297, 299, 300, 301, 302, 304, 305, 306, 307, 309, 310, 311, 312, 314, 315, 317, 318, 319, 320, 329, 330, 331, 332, 334, 335, 336, 337, 339, 340, 341, 342, 344, 345, 346, 347, 352, 353, 357, 358, 359, 362, 363, 364, 365, 367, 368, 370, 371, 373, 374, 375, 376, 380, 381, 382, 383, 385, 386, 387, 388, 390, 391, 392, 393, 395, 396, 397, 398, 402, 403, 404, 405, 424, 425, 426, 442, 443, 444, 445, 452, 453, 454, 455, 457, 458, 459, 460, 462, 463, 464, 465, 467, 468, 469, 470, 472, 473, 474, 475, 477, 478, 479, 480, 482, 483, 484, 485, 487, 488, 489, 490, 492, 493, 494, 495, 497, 498, 499, 500, 502, 503, 504, 505, 507, 508, 509, 510, 512, 513, 514, 515, 517, 518, 519, 520, 522, 523, 524, 525, 527, 528, 529, 530, 532, 533, 534, 535, 537, 538, 539, 540, 542, 543, 544, 545, 547, 548, 549, 550, 552, 553, 554, 555, 557, 558, 559, 560, 562, 563, 564, 565, 567, 568, 569, 570, 572, 573, 574, 575, 577, 578, 579, 580, 582, 583, 584, 585, 587, 588, 589, 590, 592, 593, 594, 595, 597, 598, 599, 600, 602, 603, 604, 605, 607, 608, 609, 610, 612, 613, 614, 615, 617, 618, 619, 620, 622, 623, 624, 625, 627, 628, 629, 630, 632, 633, 634, 635, 637, 638, 639, 640, 642, 643, 644, 645, 647, 648, 649, 650, 652, 653, 654, 655, 657, 658, 659, 660, 662, 663, 664, 665, 667, 668, 669, 670, 672, 673, 674, 675, 677, 678, 679, 680, 682, 683, 684, 685, 687, 688, 689, 690, 692, 693, 694, 695, 697, 698, 699, 700, 702, 703, 704, 705, 707, 708, 709, 710, 712, 713, 714, 715, 717, 718, 719, 720, 722, 723, 724, 725, 727, 728, 729, 730, 732, 733, 734, 735, 737, 738, 739, 740, 742, 743, 744, 745, 747, 748, 749, 750, 752, 753, 754, 755, 757, 758, 759, 760, 762, 763, 764, 765, 767, 768, 769, 770, 775, 776, 777, 778, 780, 781, 782, 783, 785, 786, 787, 788, 790, 791, 792, 793, 795, 796, 797, 798, 800, 801, 802, 803, 805, 806, 807, 808, 811, 812, 813, 814, 816, 817, 818, 819, 821, 822, 823, 824, 826, 827, 828, 830, 831, 832, 833, 835, 836, 837, 838, 840, 841, 842, 843, 845, 846, 847, 848, 851, 852, 853, 854, 856, 857, 858, 859, 861, 862, 863, 864, 866, 867, 868, 869, 871, 872, 873, 874, 876, 877, 878, 879, 881, 882, 883, 884, 887, 888, 889, 890, 892, 893, 894, 895, 897, 898, 899, 901, 902, 903, 905, 906, 907, 908, 910, 911, 912, 913, 915, 916, 917, 918, 920, 921, 922, 923, 927, 928, 929, 930, 932, 933, 934, 935, 937, 938, 939, 940, 942, 943, 944, 945, 947, 948, 949, 951, 952, 953, 955, 956, 957, 958, 960, 961, 962, 963, 965, 966, 967, 968, 970, 971, 972, 973, 975, 976, 977, 978, 980, 981, 982, 983, 985, 986, 987, 988, 990, 991, 992, 993, 995, 996, 997, 998, 1000, 1001, 1002, 1003, 1005, 1006, 1007, 1008, 1010, 1011, 1012, 1013, 1019, 1020, 1021, 1022, 1024, 1025, 1026, 1027, 1029, 1030, 1031, 1032, 1034, 1035, 1036, 1037, 1039, 1040, 1041, 1042, 1044, 1045, 1046, 1047, 1049, 1050, 1051, 1052, 1054, 1055, 1056, 1057, 1059, 1060, 1062, 1063, 1064, 1066, 1067, 1068, 1069, 1071, 1072, 1073, 1075, 1076, 1077, 1078, 1080, 1081, 1082, 1083, 1085, 1086, 1087, 1088, 1092, 1093, 1094, 1095, 1099, 1100, 1102, 1103, 1104, 1105, 1108, 1109, 1110, 1111, 1113, 1114, 1115, 1116, 1120, 1121, 1123, 1124, 1125, 1126, 1128, 1129, 1130, 1131, 1133, 1134, 1135, 1136, 1138, 1139, 1141, 1142, 1143, 1144, 1148, 1149, 1150, 1151, 1153, 1154, 1155, 1156, 1165, 1166, 1167, 1168, 1174, 1175, 1176, 1177, 1180, 1181, 1182, 1183, 1185, 1186, 1187, 1188, 1190, 1191, 1192, 1193, 1196, 1197, 1198, 1199, 1201, 1202, 1203, 1204, 1206, 1207, 1209, 1210, 1211, 1212, 1219, 1220, 1221, 1222, 1224, 1225, 1226, 1227, 1240, 1241, 1242, 1243, 1245, 1246, 1247, 1248, 1250, 1251, 1252, 1253, 1256, 1257, 1258, 1261, 1262, 1263, 1264, 1266, 1267, 1268, 1269, 1278, 1279, 1280, 1281, 1286, 1287, 1288, 1290, 1291, 1292, 1296, 1297, 1298, 1301, 1302, 1303, 1305, 1306, 1307, 1309, 1310, 1311, 1314, 1315, 1316, 1317, 1324, 1325, 1326, 1327, 1329, 1330, 1331, 1332, 1334, 1335, 1336, 1337, 1339, 1340, 1341, 1343, 1344, 1345, 1346, 1348, 1349, 1350, 1351, 1356, 1357, 1358, 1359, 1361, 1362, 1363, 1364, 1366, 1367, 1368, 1369, 1373, 1374, 1375, 1376, 1378, 1379, 1380, 1381, 1383, 1384, 1385, 1386, 1388, 1389, 1390, 1391, 1394, 1395, 1396, 1397, 1399, 1400, 1401, 1402, 1404, 1405, 1406, 1407, 1409, 1410, 1411, 1412, 1414, 1415, 1416, 1417, 1419, 1420, 1421, 1423, 1424, 1425, 1426, 1428, 1429, 1430, 1431, 1433, 1434, 1435, 1436, 1438, 1439, 1440, 1441, 1443, 1444, 1445, 1446, 1448, 1449, 1450, 1451, 1453, 1454, 1455, 1456, 1458, 1459, 1460, 1461, 1463, 1464, 1465, 1466, 1468, 1469, 1470, 1471, 1473, 1474, 1475, 1476, 1478, 1479, 1480, 1481, 1483, 1484, 1485, 1486, 1488, 1489, 1490, 1491, 1493, 1494, 1495, 1496, 1498, 1499, 1500, 1501, 1503, 1504, 1505, 1507, 1508, 1509, 1511, 1512, 1513, 1514, 1516, 1517, 1518, 1519, 1521, 1522, 1523, 1524, 1526, 1527, 1528, 1529, 1531, 1532, 1533, 1534, 1537, 1538, 1539, 1540, 1543, 1544, 1545, 1546, 1548, 1549, 1550, 1551, 1554, 1555, 1556, 1557, 1559, 1560, 1561, 1562, 1564, 1565, 1566, 1567, 1569, 1570, 1571, 1572, 1574, 1575, 1576, 1577, 1579, 1580, 1581, 1582, 1584, 1585, 1586, 1587, 1589, 1590, 1591, 1592, 1594, 1595, 1596, 1597, 1599, 1600, 1601, 1602, 1604, 1605, 1606, 1607, 1609, 1610, 1611, 1612, 1614, 1615, 1616, 1617, 1619, 1620, 1621, 1622, 1624, 1625, 1626, 1627, 1629, 1630, 1631, 1632, 1658, 1659, 1660, 1663, 1664, 1665, 1666, 1668, 1669, 1670, 1671, 1673, 1674, 1675, 1676, 1678, 1679, 1680, 1681, 1684, 1685, 1686, 1687, 1690, 1691, 1692, 1693, 1695, 1696, 1697, 1698, 1700, 1701, 1702, 1703, 1705, 1706, 1707, 1708, 1710, 1711, 1712, 1713, 1716, 1717, 1718, 1719, 1721, 1722, 1723, 1724, 1726, 1727, 1728, 1729, 1731, 1732, 1733, 1734, 1737, 1738, 1739, 1740, 1742, 1743, 1744, 1745, 1747, 1748, 1749, 1750, 1753, 1754, 1755, 1756, 1758, 1759, 1760, 1761, 1763, 1764, 1765, 1767, 1768, 1769, 1771, 1772, 1773, 1775, 1776, 1777, 1779, 1780, 1781, 1782, 1784, 1785, 1786, 1788, 1789, 1790, 1791, 1793, 1794, 1795, 1796, 1799, 1800, 1801, 1802, 1804, 1805, 1806, 1807, 1825], "robot": [38, 177, 180], "build": [39, 164], "doc": 39, "docker": [39, 42, 43], "dockerless": 39, "us": [39, 42, 143, 167], "miniconda": [39, 42], "venv": [39, 42], "document": 39, "pipelin": [39, 147, 160, 181], "make_doc": 39, "sh": 39, "entrypoint": 39, "_make_doc": 39, "generate_src_rst_fil": 39, "py": 39, "sphinx": 39, "correct_built_html_fil": 39, "remove_fil": 39, "help": [40, 43], "resourc": 40, "open": 41, "task": 41, "function": [41, 146, 148, 149, 152, 154, 155, 156, 158, 159, 160, 161, 164, 169, 181], "format": [41, 153, 1818, 1825], "checklist": 41, "frontend": [41, 145, 147, 158, 159, 169], "where": [41, 1709, 1711, 1712, 1713], "place": 41, "experiment": [41, 43, 63, 111, 771], "set": [42, 84, 132, 145, 1714], "up": 42, "clone": 42, "pycharm": [42, 43], "virtual": 42, "environ": 42, "interpret": 42, "window": 42, "maco": 42, "ubuntu": 42, "test": [42, 43, 143, 147, 159, 160], "detail": 42, "hypothesi": [42, 159, 160], "log": [42, 621, 622, 623, 624], "free": 42, "github": [42, 147], "codespac": 42, "pre": [42, 153], "commit": [42, 43, 153], "basic": [43, 158], "get": [43, 203], "todo": 43, "list": 43, "issu": 43, "manag": 43, "your": [43, 160], "fork": 43, "who": 43, "To": 43, "ask": 43, "With": 43, "command": 43, "line": 43, "browser": 43, "pull": [43, 147], "request": [43, 147], "small": 43, "often": 43, "interact": 43, "contain": [43, 94, 99, 146, 167, 200, 202, 206, 208, 211, 213, 216, 218, 221, 223, 226, 228, 231, 233, 241, 245, 255, 257, 260, 263, 265, 269, 271, 274, 276, 279, 282, 284, 287, 289, 292, 294, 297, 300, 302, 304, 306, 309, 311, 314, 317, 319, 330, 332, 335, 337, 340, 342, 345, 347, 353, 357, 359, 363, 365, 368, 371, 374, 376, 381, 383, 386, 388, 391, 393, 396, 398, 403, 405, 426, 442, 444, 453, 455, 458, 460, 463, 465, 468, 470, 473, 475, 478, 480, 483, 485, 488, 490, 493, 495, 498, 500, 503, 505, 508, 510, 513, 515, 518, 520, 523, 525, 528, 530, 533, 535, 538, 540, 543, 545, 548, 550, 553, 555, 558, 560, 563, 565, 568, 570, 573, 575, 578, 580, 583, 585, 588, 590, 593, 595, 598, 600, 603, 605, 608, 610, 613, 615, 618, 620, 623, 625, 628, 630, 633, 635, 638, 640, 643, 645, 648, 650, 653, 655, 658, 660, 663, 665, 668, 670, 673, 675, 678, 680, 683, 685, 688, 690, 693, 695, 698, 700, 703, 705, 708, 710, 713, 715, 718, 720, 723, 725, 728, 730, 733, 735, 738, 740, 743, 745, 747, 749, 752, 754, 757, 759, 762, 764, 767, 769, 776, 778, 781, 783, 786, 788, 791, 793, 796, 798, 801, 803, 806, 808, 812, 814, 817, 819, 822, 824, 828, 831, 833, 836, 838, 841, 843, 846, 848, 852, 854, 857, 859, 862, 864, 867, 869, 872, 874, 877, 879, 882, 884, 888, 890, 893, 895, 897, 899, 901, 903, 906, 908, 911, 913, 916, 918, 921, 923, 928, 930, 933, 935, 938, 940, 943, 945, 947, 949, 951, 953, 956, 958, 961, 963, 966, 968, 971, 973, 976, 978, 981, 983, 986, 988, 991, 993, 996, 998, 1001, 1003, 1006, 1008, 1011, 1013, 1020, 1022, 1025, 1027, 1030, 1032, 1035, 1037, 1040, 1042, 1045, 1047, 1049, 1051, 1054, 1056, 1062, 1063, 1066, 1068, 1071, 1072, 1075, 1077, 1080, 1082, 1085, 1087, 1093, 1095, 1103, 1105, 1109, 1111, 1114, 1116, 1124, 1126, 1129, 1131, 1134, 1136, 1142, 1144, 1149, 1151, 1154, 1156, 1166, 1168, 1175, 1177, 1181, 1183, 1186, 1188, 1191, 1193, 1197, 1199, 1202, 1204, 1210, 1212, 1220, 1222, 1225, 1227, 1241, 1243, 1246, 1248, 1250, 1252, 1256, 1261, 1263, 1266, 1268, 1278, 1280, 1287, 1291, 1297, 1302, 1306, 1310, 1314, 1316, 1325, 1327, 1330, 1332, 1335, 1337, 1339, 1341, 1344, 1346, 1349, 1351, 1357, 1359, 1362, 1364, 1367, 1369, 1374, 1376, 1379, 1381, 1384, 1386, 1389, 1391, 1395, 1397, 1400, 1402, 1405, 1407, 1410, 1412, 1415, 1417, 1420, 1424, 1426, 1429, 1431, 1434, 1436, 1439, 1441, 1444, 1446, 1449, 1451, 1454, 1456, 1459, 1461, 1464, 1466, 1469, 1471, 1474, 1476, 1479, 1481, 1484, 1486, 1489, 1491, 1493, 1495, 1498, 1500, 1503, 1504, 1508, 1511, 1513, 1516, 1518, 1521, 1523, 1526, 1528, 1531, 1533, 1538, 1540, 1544, 1546, 1549, 1551, 1555, 1557, 1560, 1562, 1565, 1567, 1570, 1572, 1575, 1577, 1580, 1582, 1585, 1587, 1590, 1592, 1595, 1597, 1600, 1602, 1605, 1607, 1610, 1612, 1614, 1616, 1619, 1621, 1624, 1626, 1629, 1631, 1659, 1664, 1666, 1669, 1671, 1674, 1676, 1679, 1681, 1685, 1687, 1691, 1693, 1696, 1698, 1701, 1703, 1706, 1708, 1710, 1712, 1716, 1718, 1721, 1723, 1726, 1728, 1731, 1733, 1738, 1740, 1743, 1745, 1748, 1750, 1754, 1756, 1759, 1761, 1764, 1768, 1772, 1776, 1780, 1782, 1785, 1788, 1790, 1793, 1795, 1800, 1802, 1805, 1807], "run": [43, 143, 160], "local": 43, "most": 43, "out": [43, 154, 157], "id": [43, 143], "data": [44, 57, 105, 148, 158, 160, 167, 181, 321, 1714, 1715, 1719, 1720, 1724, 1725, 1729, 1730, 1734], "class": [44, 152, 158, 166, 1827], "activ": [46, 95, 196, 1828], "arraywithactiv": 47, "convers": [50, 101], "args_to_ivi": 51, "args_to_n": 52, "to_ivi": 53, "to_n": 54, "creation": [55, 103, 237], "arraywithcr": 56, "type": [57, 105, 148, 155, 158, 181, 321], "arraywithdatatyp": 58, "devic": [59, 107, 149, 154, 158, 416], "arraywithdevic": 60, "elementwis": [61, 109, 450], "arraywithelementwis": 62, "gener": [64, 112, 160, 162, 1090], "arraywithgener": 65, "gradient": [66, 114, 891, 892, 893, 894, 1283], "arraywithgradi": 67, "imag": [68, 116], "arraywithimag": 69, "layer": [70, 118, 1321, 1843], "arraywithlay": 71, "linear": [72, 120, 1372, 1373, 1374, 1375, 1392, 1853], "algebra": [72, 120, 1392], "arraywithlinearalgebra": 73, "loss": [74, 122, 1535], "arraywithloss": 75, "manipul": [76, 124, 1552], "arraywithmanipul": 77, "norm": [78, 126, 1656, 1859], "arraywithnorm": 79, "random": [80, 128, 1661], "arraywithrandom": 81, "search": [82, 130, 1688], "arraywithsearch": 83, "arraywithset": 85, "sort": [86, 134, 1735, 1746, 1747, 1748, 1749], "arraywithsort": 87, "statist": [88, 136, 1751], "arraywithstatist": 89, "util": [90, 138, 1797], "arraywithutil": 91, "wrap": [92, 140, 156], "add_ivy_array_instance_method": 93, "containerwithactiv": 96, "base": 97, "containerbas": 98, "containerwithconvers": 102, "containerwithcr": 104, "containerwithdatatyp": 106, "containerwithdevic": 108, "containerwithelementwis": 110, "containerwithgener": 113, "containerwithgradi": 115, "containerwithimag": 117, "containerwithlay": 119, "containerwithlinearalgebra": 121, "containerwithloss": 123, "containerwithmanipul": 125, "containerwithnorm": 127, "containerwithrandom": 129, "containerwithsearch": 131, "containerwithset": 133, "containerwithsort": 135, "containerwithstatist": 137, "containerwithutil": 139, "add_ivy_container_instance_method": 141, "deep": 142, "dive": 142, "termin": 143, "regener": 143, "failur": 143, "skip": 143, "nativ": 144, "handl": [144, 152, 181], "version": [145, 161, 181], "support": [145, 148, 158, 181], "instanc": [146, 158, 159, 166], "method": [146, 158, 159, 166, 167], "static": 146, "special": [146, 158], "nestabl": [146, 154, 155], "continu": 147, "integr": [147, 160], "action": 147, "core": 147, "nn": 147, "state": [147, 168, 181], "ci": 147, "push": 147, "schedul": 147, "cron": 147, "job": 147, "dashboard": 147, "modul": [148, 149, 168, 1855, 1856], "promot": [148, 158], "argument": [148, 149, 154, 157, 158], "other": [148, 149], "unsupport": 148, "bug": 148, "superset": [148, 162], "docstr": [150, 151], "tan": [150, 159, 751, 753, 754, 755], "roll": [150, 1593, 1594, 1595, 1596], "add": [150, 159, 466, 467, 468, 469, 1825], "except": 152, "handle_except": 152, "decor": [152, 160], "lint": 153, "check": [153, 181], "hook": 153, "posit": [154, 691, 692, 693, 694], "keyword": 154, "input": 154, "dtype": [154, 356, 357, 358], "number": 154, "oper": [154, 166, 181], "integ": 154, "sequenc": 154, "primari": 155, "composit": [155, 158], "mix": 155, "standalon": 155, "conveni": 155, "inplac": 157, "updat": 157, "copi": 157, "unus": 158, "miss": 158, "complex": 158, "temporari": 158, "rule": 158, "numpi": [158, 1819], "cast": 158, "duplic": [158, 162], "polici": 158, "full": [159, 266], "alia": 159, "helper": [159, 160, 161], "write": 160, "own": 160, "strategi": 160, "we": 160, "need": 160, "how": 160, "effect": 160, "bonu": 160, "extend": [160, 162], "featur": 160, "self": 160, "consist": 160, "explicit": 160, "test_array_funct": 160, "fail": 160, "navig": 161, "code": 161, "categor": 161, "submodul": 161, "design": [161, 163, 1809], "pin": 161, "behaviour": 162, "what": [162, 1825], "i": 162, "A": 162, "non": 162, "when": 162, "too": 162, "much": 162, "balanc": 162, "effici": 162, "block": 164, "graph": [164, 169, 1820, 1825], "compil": [164, 169, 234, 235, 1817, 1822, 1824, 1825], "framework": [165, 1819, 1822, 1825, 1826, 1827], "monkei": 166, "patch": 166, "construct": 167, "represent": 167, "recurs": 167, "built": 167, "ins": 167, "access": 167, "save": 167, "load": 167, "comparison": 167, "custom": [167, 181], "case": 167, "compartment": 167, "configur": 167, "network": [167, 169], "weight": 167, "initi": [168, 1833, 1837], "optim": [168, 1861, 1865], "transpil": 169, "role": 169, "convert": [169, 1831], "model": [169, 176, 181], "builder": 171, "ecosystem": 172, "gym": [173, 180], "mech": 174, "memori": [175, 180], "vision": [178, 180], "extens": [179, 1809], "mechan": 180, "faq": 181, "maintain": 181, "dynam": 181, "size": 181, "shape": [181, 1237, 1714, 1715, 1719, 1720, 1724, 1725, 1729, 1730, 1734], "gpu": 181, "deploy": 181, "control": 181, "flow": 181, "auto": 181, "differenti": 181, "replica": 181, "parallel": 181, "altern": 181, "structur": 181, "func": 182, "wrapper": [182, 1825, 1826], "from_zero_dim_arrays_to_float": 183, "handle_array_lik": 184, "handle_nan": 185, "handle_nest": 186, "handle_out_argu": 187, "infer_devic": 188, "infer_dtyp": 189, "inputs_to_ivy_arrai": 190, "inputs_to_native_arrai": 191, "integer_arrays_to_float": 192, "outputs_to_ivy_arrai": 193, "to_native_arrays_and_back": 194, "deseri": 197, "gelu": [198, 199, 200, 201, 1830], "static_gelu": 202, "leaky_relu": [204, 205, 206, 207], "static_leaky_relu": 208, "log_softmax": [209, 210, 211, 212], "static_log_softmax": 213, "relu": [214, 215, 216, 217], "static_relu": 218, "sigmoid": [219, 220, 221, 222], "static_sigmoid": 223, "softmax": [224, 225, 226, 227], "static_softmax": 228, "softplu": [229, 230, 231, 232], "static_softplu": 233, "constant": [236, 1834], "note": [237, 261, 264], "nestedsequ": 238, "arang": [239, 240], "static_arang": 241, "asarrai": [242, 243, 244], "static_asarrai": 245, "asarray_handle_nest": 246, "asarray_infer_devic": 247, "asarray_to_native_arrays_and_back": 248, "copy_arrai": [249, 250, 251], "empti": 252, "empty_lik": [253, 254, 255, 256], "static_empty_lik": 257, "ey": [258, 259], "static_ey": 260, "from_dlpack": [261, 262, 263, 264], "static_from_dlpack": 265, "full_lik": [267, 268, 269, 270], "static_full_lik": 271, "linspac": [272, 273, 274, 275], "static_linspac": 276, "logspac": [277, 278], "static_logspac": 279, "meshgrid": [280, 281, 282, 283], "static_meshgrid": 284, "native_arrai": [285, 286, 287, 288], "static_native_arrai": 289, "one_hot": [290, 291, 292, 293], "static_one_hot": 294, "ones": [295, 296], "static_on": 297, "ones_lik": [298, 299, 300, 301], "static_ones_lik": 302, "tril": [303, 305, 306, 307], "static_tril": 304, "triu": [308, 310, 311, 312], "static_triu": 309, "zero": [313, 315, 1842], "static_zero": 314, "zeros_lik": [316, 318, 319, 320], "static_zeros_lik": 317, "defaultdtyp": 322, "defaultfloatdtyp": 323, "defaultintdtyp": 324, "defaultuintdtyp": 325, "as_ivy_dtyp": 326, "as_native_dtyp": 327, "astyp": [328, 329, 330, 331], "static_astyp": 332, "broadcast_arrai": [333, 334, 335, 336], "static_broadcast_arrai": 337, "broadcast_to": [338, 339, 340, 341], "static_broadcast_to": 342, "can_cast": [343, 344, 345, 346], "static_can_cast": 347, "check_float": 348, "closest_valid_dtyp": 349, "default_dtyp": 350, "default_float_dtyp": [351, 352], "static_default_float_dtyp": 353, "default_int_dtyp": 354, "default_uint_dtyp": 355, "static_dtyp": 359, "dtype_bit": 360, "finfo": [361, 362, 363, 364], "static_finfo": 365, "function_supported_dtyp": [366, 367], "static_function_supported_dtyp": 368, "function_unsupported_dtyp": [369, 370], "static_function_unsupported_dtyp": 371, "iinfo": [372, 373, 374, 375], "static_iinfo": 376, "infer_default_dtyp": 377, "invalid_dtyp": 378, "is_bool_dtyp": [379, 380, 381, 382], "static_is_bool_dtyp": 383, "is_float_dtyp": [384, 385, 386, 387], "static_is_float_dtyp": 388, "is_int_dtyp": [389, 390, 391, 392], "static_is_int_dtyp": 393, "is_uint_dtyp": [394, 395, 396, 397], "static_is_uint_dtyp": 398, "promote_typ": 399, "promote_types_of_input": 400, "result_typ": [401, 402, 403, 404], "static_result_typ": 405, "set_default_dtyp": 406, "set_default_float_dtyp": 407, "set_default_int_dtyp": 408, "set_default_uint_dtyp": 409, "type_promote_arrai": 410, "unset_default_dtyp": 411, "unset_default_float_dtyp": 412, "unset_default_int_dtyp": 413, "unset_default_uint_dtyp": 414, "valid_dtyp": 415, "defaultdevic": 417, "profil": 418, "as_ivy_dev": 419, "as_native_dev": 420, "clear_mem_on_dev": 421, "default_devic": 422, "dev": [423, 424, 425], "static_dev": 426, "dev_util": 427, "function_supported_devic": 428, "function_unsupported_devic": 429, "get_all_ivy_arrays_on_dev": 430, "gpu_is_avail": 431, "num_cpu_cor": 432, "num_gpu": 433, "num_ivy_arrays_on_dev": 434, "percent_used_mem_on_dev": 435, "print_all_ivy_arrays_on_dev": 436, "set_default_devic": 437, "set_split_factor": 438, "split_factor": 439, "split_func_cal": 440, "to_devic": [441, 443, 444, 445], "static_to_devic": 442, "total_mem_on_dev": 446, "tpu_is_avail": 447, "unset_default_devic": 448, "used_mem_on_dev": 449, "ab": [451, 452, 453, 454], "static_ab": 455, "aco": [456, 457, 458, 459], "static_aco": 460, "acosh": [461, 462, 463, 464], "static_acosh": 465, "static_add": 470, "asin": [471, 472, 473, 474], "static_asin": 475, "asinh": [476, 477, 478, 479], "static_asinh": 480, "atan": [481, 482, 483, 484], "static_atan": 485, "atan2": [486, 487, 488, 489], "static_atan2": 490, "atanh": [491, 492, 493, 494], "static_atanh": 495, "bitwise_and": [496, 497, 498, 499], "static_bitwise_and": 500, "bitwise_invert": [501, 502, 503, 504], "static_bitwise_invert": 505, "bitwise_left_shift": [506, 507, 508, 509], "static_bitwise_left_shift": 510, "bitwise_or": [511, 512, 513, 514], "static_bitwise_or": 515, "bitwise_right_shift": [516, 517, 518, 519], "static_bitwise_right_shift": 520, "bitwise_xor": [521, 522, 523, 524], "static_bitwise_xor": 525, "ceil": [526, 527, 528, 529], "static_ceil": 530, "co": [531, 532, 533, 534], "static_co": 535, "cosh": [536, 537, 538, 539], "static_cosh": 540, "deg2rad": [541, 542, 543, 544], "static_deg2rad": 545, "divid": [546, 547, 548, 549], "static_divid": 550, "equal": [551, 552, 553, 554], "static_equ": 555, "erf": [556, 557, 558, 559], "static_erf": 560, "exp": [561, 562, 563, 564], "static_exp": 565, "expm1": [566, 567, 568, 569], "static_expm1": 570, "floor": [571, 572, 573, 574], "static_floor": 575, "floor_divid": [576, 577, 578, 579], "static_floor_divid": 580, "greater": [581, 582, 583, 584], "static_great": 585, "greater_equ": [586, 587, 588, 589], "static_greater_equ": 590, "isfinit": [591, 592, 593, 594], "static_isfinit": 595, "isinf": [596, 597, 598, 599], "static_isinf": 600, "isnan": [601, 602, 603, 604], "static_isnan": 605, "isreal": [606, 607, 608, 609], "static_isr": 610, "less": [611, 612, 613, 614], "static_less": 615, "less_equ": [616, 617, 618, 619], "static_less_equ": 620, "static_log": 625, "log10": [626, 627, 628, 629], "static_log10": 630, "log1p": [631, 632, 633, 634], "static_log1p": 635, "log2": [636, 637, 638, 639], "static_log2": 640, "logaddexp": [641, 642, 643, 644], "static_logaddexp": 645, "logical_and": [646, 647, 648, 649], "static_logical_and": 650, "logical_not": [651, 652, 653, 654], "static_logical_not": 655, "logical_or": [656, 657, 658, 659], "static_logical_or": 660, "logical_xor": [661, 662, 663, 664], "static_logical_xor": 665, "maximum": [666, 667, 668, 669], "static_maximum": 670, "minimum": [671, 672, 673, 674], "static_minimum": 675, "multipli": [676, 677, 678, 679], "static_multipli": 680, "neg": [681, 682, 683, 684], "static_neg": 685, "not_equ": [686, 687, 688, 689], "static_not_equ": 690, "static_posit": 695, "pow": [696, 697, 698, 699], "static_pow": 700, "rad2deg": [701, 702, 703, 704], "static_rad2deg": 705, "reciproc": [706, 707, 708, 709], "static_reciproc": 710, "remaind": [711, 712, 713, 714], "static_remaind": 715, "round": [716, 717, 718, 719], "static_round": 720, "sign": [721, 722, 723, 724], "static_sign": 725, "sin": [726, 727, 728, 729], "static_sin": 730, "sinh": [731, 732, 733, 734], "static_sinh": 735, "sqrt": [736, 737, 738, 739], "static_sqrt": 740, "squar": [741, 742, 743, 744], "static_squar": 745, "subtract": [746, 748, 749, 750], "static_subtract": 747, "static_tan": 752, "tanh": [756, 758, 759, 760], "static_tanh": 757, "trunc": [761, 763, 764, 765], "static_trunc": 762, "trunc_divid": [766, 768, 769, 770], "static_trunc_divid": 767, "nativesparsearrai": 772, "sparsearrai": 773, "allclos": [774, 775, 776, 777], "static_allclos": 778, "atleast_1d": [779, 780, 781, 782], "static_atleast_1d": 783, "atleast_2d": [784, 785, 786, 787], "static_atleast_2d": 788, "atleast_3d": [789, 790, 791, 792], "static_atleast_3d": 793, "avg_pool1d": [794, 795, 796, 797], "static_avg_pool1d": 798, "avg_pool2d": [799, 800, 801, 802], "static_avg_pool2d": 803, "avg_pool3d": [804, 805, 806, 807], "static_avg_pool3d": 808, "beta": 809, "count_nonzero": [810, 811, 812, 813], "static_count_nonzero": 814, "dct": [815, 816, 817, 818], "static_dct": 819, "diagflat": [820, 821, 822, 823], "static_diagflat": 824, "diff": [825, 826, 827], "static_diff": 828, "dirichlet": [829, 830, 831, 832], "static_dirichlet": 833, "dsplit": [834, 835, 836, 837], "static_dsplit": 838, "dstack": [839, 840, 841, 842], "static_dstack": 843, "exp2": [844, 845, 846, 847], "static_exp2": 848, "fft": 849, "fix": [850, 851, 852, 853], "static_fix": 854, "flatten": [855, 856, 857, 858], "static_flatten": 859, "fliplr": [860, 861, 862, 863], "static_fliplr": 864, "flipud": [865, 866, 867, 868], "static_flipud": 869, "float_pow": [870, 871, 872, 873], "static_float_pow": 874, "fmax": [875, 876, 877, 878], "static_fmax": 879, "fmod": [880, 881, 882, 883], "static_fmod": 884, "gamma": 885, "gcd": [886, 887, 888, 889], "static_gcd": 890, "static_gradi": 895, "hamming_window": [896, 897, 898], "static_hamming_window": 899, "hann_window": [900, 901, 902], "static_hann_window": 903, "heavisid": [904, 905, 906, 907], "static_heavisid": 908, "hsplit": [909, 910, 911, 912], "static_hsplit": 913, "hstack": [914, 915, 916, 917], "static_hstack": 918, "i0": [919, 920, 921, 922], "static_i0": 923, "is_ivy_sparse_arrai": 924, "is_native_sparse_arrai": 925, "isclos": [926, 927, 928, 929], "static_isclos": 930, "isin": [931, 932, 933, 934], "static_isin": 935, "isneginf": [936, 937, 938, 939], "static_isneginf": 940, "isposinf": [941, 942, 943, 944], "static_isposinf": 945, "kaiser_bessel_derived_window": [946, 947, 948], "static_kaiser_bessel_derived_window": 949, "kaiser_window": [950, 951, 952], "static_kaiser_window": 953, "kron": [954, 955, 956, 957], "static_kron": 958, "lcm": [959, 960, 961, 962], "static_lcm": 963, "logaddexp2": [964, 965, 966, 967], "static_logaddexp2": 968, "max_pool1d": [969, 970, 971, 972], "static_max_pool1d": 973, "max_pool2d": [974, 975, 976, 977], "static_max_pool2d": 978, "max_pool3d": [979, 980, 981, 982], "static_max_pool3d": 983, "median": [984, 985, 986, 987], "static_median": 988, "moveaxi": [989, 990, 991, 992], "static_moveaxi": 993, "msort": [994, 995, 996, 997], "static_msort": 998, "nan_to_num": [999, 1000, 1001, 1002], "static_nan_to_num": 1003, "nanmean": [1004, 1005, 1006, 1007], "static_nanmean": 1008, "nansum": [1009, 1010, 1011, 1012], "static_nansum": 1013, "native_sparse_arrai": 1014, "native_sparse_array_to_indices_values_and_shap": 1015, "ndenumer": 1016, "ndindex": 1017, "nextaft": [1018, 1019, 1020, 1021], "static_nextaft": 1022, "pad": [1023, 1024, 1025, 1026], "static_pad": 1027, "quantil": [1028, 1029, 1030, 1031], "static_quantil": 1032, "rot90": [1033, 1034, 1035, 1036], "static_rot90": 1037, "signbit": [1038, 1039, 1040, 1041], "static_signbit": 1042, "sinc": [1043, 1044, 1045, 1046], "static_sinc": 1047, "take_along_axi": [1048, 1050, 1051, 1052], "static_take_along_axi": 1049, "top_k": [1053, 1055, 1056, 1057], "static_top_k": 1054, "trapz": [1058, 1059, 1060], "triu_indic": [1061, 1063, 1064], "static_triu_indic": 1062, "unravel_index": [1065, 1067, 1068, 1069], "static_unravel_index": 1066, "vorbis_window": [1070, 1072, 1073], "static_vorbis_window": 1071, "vsplit": [1074, 1076, 1077, 1078], "static_vsplit": 1075, "vstack": [1079, 1081, 1082, 1083], "static_vstack": 1080, "zeta": [1084, 1086, 1087, 1088], "static_zeta": 1085, "all_equ": [1091, 1092, 1093, 1094], "static_all_equ": 1095, "arg_info": 1096, "arg_nam": 1097, "array_equ": [1098, 1099, 1100], "assert_supports_inplac": [1101, 1102, 1103, 1104], "static_assert_supports_inplac": 1105, "cache_fn": 1106, "clip_matrix_norm": [1107, 1108, 1109, 1110], "static_clip_matrix_norm": 1111, "clip_vector_norm": [1112, 1113, 1114, 1115], "static_clip_vector_norm": 1116, "container_typ": 1117, "current_backend_str": 1118, "default": [1119, 1120, 1121], "einops_rearrang": [1122, 1123, 1124, 1125], "static_einops_rearrang": 1126, "einops_reduc": [1127, 1128, 1129, 1130], "static_einops_reduc": 1131, "einops_repeat": [1132, 1133, 1134, 1135], "static_einops_repeat": 1136, "exist": [1137, 1138, 1139], "fourier_encod": [1140, 1141, 1142, 1143], "static_fourier_encod": 1144, "function_supported_devices_and_dtyp": 1145, "function_unsupported_devices_and_dtyp": 1146, "gather": [1147, 1148, 1149, 1150], "static_gath": 1151, "gather_nd": [1152, 1153, 1154, 1155], "static_gather_nd": 1156, "get_all_arrays_in_memori": 1157, "get_array_mod": 1158, "get_exception_trace_mod": 1159, "get_item": 1160, "get_min_bas": 1161, "get_min_denomin": 1162, "get_nestable_mod": 1163, "get_num_dim": [1164, 1165, 1166, 1167], "static_get_num_dim": 1168, "get_queue_timeout": 1169, "get_referrers_recurs": 1170, "get_show_func_wrapper_trace_mod": 1171, "get_tmp_dir": 1172, "has_nan": [1173, 1174, 1175, 1176], "static_has_nan": 1177, "inplace_arrays_support": 1178, "inplace_decr": [1179, 1180, 1181, 1182], "static_inplace_decr": 1183, "inplace_incr": [1184, 1185, 1186, 1187], "static_inplace_incr": 1188, "inplace_upd": [1189, 1190, 1191, 1192], "static_inplace_upd": 1193, "inplace_variables_support": 1194, "is_arrai": [1195, 1196, 1197, 1198], "static_is_arrai": 1199, "is_ivy_arrai": [1200, 1201, 1202, 1203], "static_is_ivy_arrai": 1204, "is_ivy_contain": [1205, 1206, 1207], "is_native_arrai": [1208, 1209, 1210, 1211], "static_is_native_arrai": 1212, "isscalar": 1213, "match_kwarg": 1214, "multiprocess": 1215, "num_arrays_in_memori": 1216, "print_all_arrays_in_memori": 1217, "scatter_flat": [1218, 1219, 1220, 1221], "static_scatter_flat": 1222, "scatter_nd": [1223, 1224, 1225, 1226], "static_scatter_nd": 1227, "set_array_mod": 1228, "set_exception_trace_mod": 1229, "set_min_bas": 1230, "set_min_denomin": 1231, "set_nestable_mod": 1232, "set_queue_timeout": 1233, "set_shape_array_mod": 1234, "set_show_func_wrapper_trace_mod": 1235, "set_tmp_dir": 1236, "shape_array_mod": 1238, "stable_divid": [1239, 1240, 1241, 1242], "static_stable_divid": 1243, "stable_pow": [1244, 1245, 1246, 1247], "static_stable_pow": 1248, "supports_inplace_upd": [1249, 1251, 1252, 1253], "static_supports_inplace_upd": 1250, "to_ivy_shap": 1254, "to_list": [1255, 1257, 1258], "static_to_list": 1256, "to_native_shap": 1259, "to_numpi": [1260, 1262, 1263, 1264], "static_to_numpi": 1261, "to_scalar": [1265, 1267, 1268, 1269], "static_to_scalar": 1266, "try_else_non": 1270, "unset_array_mod": 1271, "unset_exception_trace_mod": 1272, "unset_nestable_mod": 1273, "unset_queue_timeout": 1274, "unset_shape_array_mod": 1275, "unset_show_func_wrapper_trace_mod": 1276, "value_is_nan": [1277, 1279, 1280, 1281], "static_value_is_nan": 1278, "vmap": 1282, "gradienttrack": 1284, "adam_step": [1285, 1286, 1287, 1288], "adam_upd": [1289, 1290, 1291, 1292], "execute_with_gradi": 1293, "grad": 1294, "gradient_descent_upd": [1295, 1296, 1297, 1298], "jac": 1299, "lamb_upd": [1300, 1301, 1302, 1303], "lars_upd": [1304, 1305, 1306, 1307], "optimizer_upd": [1308, 1309, 1310, 1311], "set_with_grad": 1312, "stop_gradi": [1313, 1315, 1316, 1317], "static_stop_gradi": 1314, "unset_with_grad": 1318, "value_and_grad": 1319, "with_grad": 1320, "conv": 1322, "conv1d": [1323, 1324, 1325, 1326, 1844], "static_conv1d": 1327, "conv1d_transpos": [1328, 1329, 1330, 1331], "static_conv1d_transpos": 1332, "conv2d": [1333, 1334, 1335, 1336, 1846], "static_conv2d": 1337, "conv2d_transpos": [1338, 1339, 1340], "static_conv2d_transpos": 1341, "conv3d": [1342, 1343, 1344, 1345, 1848], "static_conv3d": 1346, "conv3d_transpos": [1347, 1348, 1349, 1350], "static_conv3d_transpos": 1351, "conv_general_dil": 1352, "conv_general_transpos": 1353, "deconv_length": 1354, "depthwise_conv2d": [1355, 1356, 1357, 1358], "static_depthwise_conv2d": 1359, "dropout": [1360, 1361, 1362, 1363, 1851], "static_dropout": 1364, "dropout1d": [1365, 1366, 1367, 1368], "static_dropout1d": 1369, "get_x_data_format": 1370, "handle_pad": 1371, "static_linear": 1376, "lstm_updat": [1377, 1378, 1379, 1380], "static_lstm_upd": 1381, "multi_head_attent": [1382, 1383, 1384, 1385], "static_multi_head_attent": 1386, "scaled_dot_product_attent": [1387, 1388, 1389, 1390], "static_scaled_dot_product_attent": 1391, "choleski": [1393, 1394, 1395, 1396], "static_choleski": 1397, "cross": [1398, 1399, 1400, 1401], "static_cross": 1402, "det": [1403, 1404, 1405, 1406], "static_det": 1407, "diag": [1408, 1409, 1410, 1411], "static_diag": 1412, "diagon": [1413, 1414, 1415, 1416], "static_diagon": 1417, "eig": [1418, 1419, 1420, 1421], "eigh": [1422, 1423, 1424, 1425], "static_eigh": 1426, "eigvalsh": [1427, 1428, 1429, 1430], "static_eigvalsh": 1431, "inner": [1432, 1433, 1434, 1435], "static_inn": 1436, "inv": [1437, 1438, 1439, 1440], "static_inv": 1441, "matmul": [1442, 1443, 1444, 1445], "static_matmul": 1446, "matrix_norm": [1447, 1448, 1449, 1450], "static_matrix_norm": 1451, "matrix_pow": [1452, 1453, 1454, 1455], "static_matrix_pow": 1456, "matrix_rank": [1457, 1458, 1459, 1460], "static_matrix_rank": 1461, "matrix_transpos": [1462, 1463, 1464, 1465], "static_matrix_transpos": 1466, "outer": [1467, 1468, 1469, 1470], "static_out": 1471, "pinv": [1472, 1473, 1474, 1475], "static_pinv": 1476, "qr": [1477, 1478, 1479, 1480], "static_qr": 1481, "slogdet": [1482, 1483, 1484, 1485], "static_slogdet": 1486, "solv": [1487, 1488, 1489, 1490], "static_solv": 1491, "svd": [1492, 1494, 1495, 1496], "static_svd": 1493, "svdval": [1497, 1499, 1500, 1501], "static_svdv": 1498, "tensordot": [1502, 1504, 1505], "static_tensordot": 1503, "tensorsolv": [1506, 1507, 1508, 1509], "trace": [1510, 1512, 1513, 1514], "static_trac": 1511, "vander": [1515, 1517, 1518, 1519], "static_vand": 1516, "vecdot": [1520, 1522, 1523, 1524], "static_vecdot": 1521, "vector_norm": [1525, 1527, 1528, 1529], "static_vector_norm": 1526, "vector_to_skew_symmetric_matrix": [1530, 1532, 1533, 1534], "static_vector_to_skew_symmetric_matrix": 1531, "binary_cross_entropi": [1536, 1537, 1538, 1539], "static_binary_cross_entropi": 1540, "binary_cross_entropy_with_logit": 1541, "cross_entropi": [1542, 1543, 1544, 1545], "static_cross_entropi": 1546, "sparse_cross_entropi": [1547, 1548, 1549, 1550], "static_sparse_cross_entropi": 1551, "clip": [1553, 1554, 1555, 1556], "static_clip": 1557, "concat": [1558, 1559, 1560, 1561], "static_concat": 1562, "constant_pad": [1563, 1564, 1565, 1566], "static_constant_pad": 1567, "expand_dim": [1568, 1569, 1570, 1571], "static_expand_dim": 1572, "flip": [1573, 1574, 1575, 1576], "static_flip": 1577, "permute_dim": [1578, 1579, 1580, 1581], "static_permute_dim": 1582, "repeat": [1583, 1584, 1585, 1586], "static_repeat": 1587, "reshap": [1588, 1589, 1590, 1591], "static_reshap": 1592, "static_rol": 1597, "split": [1598, 1599, 1600, 1601], "static_split": 1602, "squeez": [1603, 1604, 1605, 1606], "static_squeez": 1607, "stack": [1608, 1609, 1610, 1611], "static_stack": 1612, "swapax": [1613, 1615, 1616, 1617], "static_swapax": 1614, "tile": [1618, 1620, 1621, 1622], "static_til": 1619, "unstack": [1623, 1625, 1626, 1627], "static_unstack": 1624, "zero_pad": [1628, 1630, 1631, 1632], "static_zero_pad": 1629, "meta": 1633, "fomaml_step": 1634, "maml_step": 1635, "reptile_step": 1636, "nest": 1637, "all_nested_indic": 1638, "copy_nest": 1639, "duplicate_array_index_chain": 1640, "index_nest": 1641, "insert_into_nest_at_index": 1642, "insert_into_nest_at_indic": 1643, "map": 1644, "map_nest_at_index": 1645, "map_nest_at_indic": 1646, "multi_index_nest": 1647, "nested_ani": 1648, "nested_argwher": 1649, "nested_map": 1650, "nested_multi_map": 1651, "prune_nest_at_index": 1652, "prune_nest_at_indic": 1653, "set_nest_at_index": 1654, "set_nest_at_indic": 1655, "layer_norm": [1657, 1658, 1659, 1660], "multinomi": [1662, 1663, 1664, 1665], "static_multinomi": 1666, "randint": [1667, 1668, 1669, 1670], "static_randint": 1671, "random_norm": [1672, 1673, 1674, 1675], "static_random_norm": 1676, "random_uniform": [1677, 1678, 1679, 1680], "static_random_uniform": 1681, "seed": 1682, "shuffl": [1683, 1684, 1685, 1686], "static_shuffl": 1687, "argmax": [1689, 1690, 1691, 1692], "static_argmax": 1693, "argmin": [1694, 1695, 1696, 1697], "static_argmin": 1698, "argwher": [1699, 1700, 1701, 1702], "static_argwher": 1703, "nonzero": [1704, 1705, 1706, 1707], "static_nonzero": 1708, "static_wher": 1710, "depend": [1714, 1715, 1719, 1720, 1724, 1725, 1729, 1730, 1734], "output": [1714, 1715, 1719, 1720, 1724, 1725, 1729, 1730, 1734], "unique_al": [1715, 1717, 1718, 1719], "static_unique_al": 1716, "unique_count": [1720, 1722, 1723, 1724], "static_unique_count": 1721, "unique_invers": [1725, 1727, 1728, 1729], "static_unique_invers": 1726, "unique_valu": [1730, 1732, 1733, 1734], "static_unique_valu": 1731, "argsort": [1736, 1737, 1738, 1739], "static_argsort": 1740, "searchsort": [1741, 1742, 1743, 1744], "static_searchsort": 1745, "static_sort": 1750, "cumprod": [1752, 1753, 1754, 1755], "static_cumprod": 1756, "cumsum": [1757, 1758, 1759, 1760], "static_cumsum": 1761, "einsum": [1762, 1763, 1764, 1765], "max": [1766, 1767, 1768, 1769], "mean": [1770, 1771, 1772, 1773], "min": [1774, 1775, 1776, 1777], "prod": [1778, 1779, 1780, 1781], "static_prod": 1782, "std": [1783, 1784, 1785, 1786], "sum": [1787, 1789, 1790, 1791], "static_sum": 1788, "var": [1792, 1794, 1795, 1796], "static_var": 1793, "all": [1798, 1799, 1800, 1801], "static_al": 1802, "ani": [1803, 1804, 1805, 1806], "static_ani": 1807, "glossari": 1808, "content": 1809, "overview": 1809, "quick": 1809, "start": 1809, "citat": 1809, "inspect": 1812, "add_array_spec": 1813, "fn_array_spec": 1814, "relat": 1815, "infrastructur": [1817, 1825], "llvm": 1817, "mlir": 1817, "oneapi": 1817, "exchang": [1818, 1825], "onnx": 1818, "nnef": 1818, "coreml": 1818, "matlab": 1819, "scipi": 1819, "torch": [1819, 1820], "scikit": 1819, "learn": 1819, "theano": 1819, "panda": 1819, "julia": 1819, "apach": [1819, 1822], "spark": 1819, "mllib": 1819, "caff": 1819, "chainer": 1819, "tensorflow": 1819, "1": 1819, "mxnet": 1819, "cntk": 1819, "pytorch": 1819, "flux": 1819, "jax": 1819, "2": 1819, "dex": 1819, "languag": 1819, "tracer": [1820, 1825], "tf": 1820, "jaxpr": 1820, "jit": 1820, "fx": 1820, "compani": [1821, 1825], "quansight": 1821, "modular": 1821, "octoml": 1821, "multi": [1822, 1825], "vendor": [1822, 1823, 1824, 1825], "tvm": 1822, "xla": 1822, "gcc": 1822, "specif": [1823, 1824, 1825], "tensorrt": 1823, "cuda": 1823, "icc": 1824, "icx": 1824, "nvcc": 1824, "doe": 1825, "eagerpi": 1826, "kera": 1826, "thinc": 1826, "tensorli": 1826, "neuropod": 1826, "geglu": 1829, "to_ivy_modul": 1832, "firstlayersiren": 1835, "glorotuniform": 1836, "kaimingnorm": 1838, "Ones": 1839, "siren": 1840, "uniform": 1841, "conv1dtranspos": 1845, "conv2dtranspos": 1847, "conv3dtranspos": 1849, "depthwiseconv2d": 1850, "lstm": 1852, "multiheadattent": 1854, "mytfmodul": 1857, "mytorchmodul": 1858, "layernorm": 1860, "adam": 1862, "lamb": 1863, "lar": 1864, "sgd": 1866, "sequenti": [1867, 1868], "verbos": 1870, "cprint": 1871}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 6, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "sphinx": 56}})